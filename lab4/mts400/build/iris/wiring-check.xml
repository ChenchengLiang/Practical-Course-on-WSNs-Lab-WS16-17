<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:Mts400TesterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa50ebc8718"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa5102b8b70"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa5102b8b70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa5102b3c38"/></to>
    </wire>
    <wire loc="54:Mts400TesterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa50ebc8d20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa5100e55e8"/></to>
    </wire>
    <wire loc="55:Mts400TesterC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50ebba5f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50ebd0390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50ebd0390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50e06c100"/></to>
    </wire>
    <wire loc="56:Mts400TesterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50ebc6328"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f636660"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f636660"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5b96d8"/></to>
    </wire>
    <wire loc="57:Mts400TesterC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x7fa50ebc5020"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x7fa50fb54aa0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x7fa50fb54aa0"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x7fa50e864020"/></to>
    </wire>
    <wire loc="58:Mts400TesterC.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x7fa50ebc47c8"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x7fa50fb521a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x7fa50fb521a8"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x7fa50e863700"/></to>
    </wire>
    <wire loc="59:Mts400TesterC.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x7fa50ebc3db8"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x7fa50fb4eb70"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x7fa50fb4eb70"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x7fa50e5b9250"/></to>
    </wire>
    <wire loc="60:Mts400TesterC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fa50ebc27c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fa50f74eaa8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fa50f74eaa8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fa50e486d48"/></to>
    </wire>
    <wire loc="61:Mts400TesterC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fa50ebbf020"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fa50f74c7c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fa50f74c7c0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fa50e484a48"/></to>
    </wire>
    <wire loc="62:Mts400TesterC.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7fa50ebbe7f8"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7fa50f67e558"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7fa50f67e558"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7fa50e3c5920"/></to>
    </wire>
    <wire loc="63:Mts400TesterC.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7fa50ebbc020"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7fa50f67dc28"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7fa50f67dc28"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7fa50e3c3020"/></to>
    </wire>
    <wire loc="69:Mts400TesterC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50ebb8910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50eb89c88"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50eb89c88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f5fc5e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:Mts400TesterC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50ebb70c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50ebcf020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50ebcf020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50e06ccb8"/></to>
    </wire>
    <wire loc="72:Mts400TesterC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebb9300"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebcfbd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebcfbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50e06b908"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e0d4020"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fa50efebbf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50f11ab30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fa50e1b0430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50f22a238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e1e2de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e29d7e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e390020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e416dc0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50fa45dd0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e55d6e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e5fc738"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e68a888"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e742220"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e775c38"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e7d8020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e836978"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa510102308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa5103c3b30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa5103c3b30"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa5102fba18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa510102ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fa50eee6870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa510102ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fa50efeb138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa510102ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa5102b2080"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa5102b2080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa5102a7020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa510101418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fa5102b1cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50ed4e4e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fa5102b1cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50fc196e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa5102b1020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa510121ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fa5102a7d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa5101214b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fa5102a76c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa5100c22d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fa5102a76c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fa5102a9558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa5102a9558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fa51029e020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fa5102a9be8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fa5102b1cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fa510297388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fa51028de00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fa51028de00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa510208430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fa51029d4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fa5102a9be8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fa51025b968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa510174520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fa5102754d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa5101df020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa5101df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea0b100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fa5102694d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5101ced60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5101ced60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e99e100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fa5102601a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5101bf8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5101bf8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e935100"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fa510254658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa51015bc38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fa51028a1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa510206740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa510206740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb30020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fa510263e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa5101c15b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa5101c15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e93b100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fa5102884d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa5101fe930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa5101fe930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eadc180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fa51027d658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa5101ed740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa5101ed740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea6f100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fa510271968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa5101db430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa5101db430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea02100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fa510266968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa5101ca120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa5101ca120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e995100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fa510291968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa51020b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa51020b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb40020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fa510285968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5101fbd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5101fbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ead3100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fa51027aaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5101eabd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5101eabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea66100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fa51026ee00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5101d88c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5101d88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9f8100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fa51025d658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa5101bcd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa5101bcd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e92c100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fa510256348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa510165c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fa51026b1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa5101d0a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa5101d0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9a4100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa510208430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb37020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fa510281020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa5101f7120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa5101f7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eac9100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fa510258020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa51016fcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fa51027f348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa5101ef500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa5101ef500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea75180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fa510274658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa5101de120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa5101de120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea08100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fa510268658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa5101cde18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa5101cde18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e99b100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fa51025f348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa5101bea50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa5101bea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e932100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fa510289348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5102058c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5102058c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb2d020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fa510287658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa5101fda50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa5101fda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ead9100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fa51027c7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5101ec8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5101ec8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea6c100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fa510270af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5101da5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5101da5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9ff100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fa510265af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5101c92a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5101c92a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e991100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fa510290af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa51020a120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa51020a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb3d020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fa510284af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa5101fae18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa5101fae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ead0100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fa510279c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa5101e9d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa5101e9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea62100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fa51025c7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5101bbe18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5101bbe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e929100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fa510276020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa5101e1e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa5101e1e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea0e180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fa51026a348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa5101cfbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa5101cfbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9a1100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fa510261020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa5101c0740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa5101c0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e938100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fa5102554d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa5101603e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fa51028b020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5102075b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5102075b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb33020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fa5102801a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5101f62a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5101f62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eac6100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fa510264c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa5101c2500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa5101c2500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e93e180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fa51027e4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fa5101ee5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fa5101ee5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea72100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fa5102727e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5101dd2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5101dd2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea05100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fa5102677e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5101cb020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5101cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e998100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fa51025e4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5101bdbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5101bdbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e92f100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fa5102a0790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa51020edc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa51020edc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb43020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fa5102867e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fa5101fcbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fa5101fcbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ead6100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fa51027b968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fa5101eba50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fa5101eba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea69100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fa51026fc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fa5101d9740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fa5101d9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9fc100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fa5102571a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa51016a3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fa51026c020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fa5101d2930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fa5101d2930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50e9a7180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fa510278e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fa5101e7e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fa5101e7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50ea5f100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fa51028fc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fa5102092a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fa5102092a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eb3a020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fa510283e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fa5101f8020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fa5101f8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa50eacd100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5102fa980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fa5102f8e20"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fa5103babc0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa5102d8668"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa50f98a578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa5100c22d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa5100e5020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa5100e4ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fa5100c8e10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa5100c8e10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fa510290af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa5100e3e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fa5100c4020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa5100c4020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fa510291968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa5100e1020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fa5100c31b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa5100c31b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fa5102a0790"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Resoure" scoped="" ref="0x7fa50e862d98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa510088428"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="XRead" scoped="" ref="0x7fa50e85f888"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x7fa510086258"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XAxis" scoped="" ref="0x7fa510086258"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x7fa51005e168"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Resoure" scoped="" ref="0x7fa50e861a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa510088428"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="YRead" scoped="" ref="0x7fa50e85d020"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x7fa5100859d8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YAxis" scoped="" ref="0x7fa5100859d8"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x7fa51005c838"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa510088428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa5100511c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa5100511c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50ff29d80"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa51005bdc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fc26e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa51005aa18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa50fc23ac0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa50fc23ac0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa50fc18508"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XADC" scoped="" ref="0x7fa510059470"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fa50fcd4020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7fa50fcd4020"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7fa50fcce340"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YADC" scoped="" ref="0x7fa510059a88"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fa50fcd4690"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7fa50fcd4690"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7fa50fcce9b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7fa510058100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7fa5100588a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50ff29d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e833060"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50ff21d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa510048dc0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fef4940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50ff26e20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50ff26e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e8280e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fef5d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50ff26268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50ff26268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e8294c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7fa510043818"/></from>
      <to><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7fa50fee26d8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7fa50fee26d8"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7fa50fcfe020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7fa51004b578"/></from>
      <to><interface-ref name="ChannelAccelPower" scoped="" ref="0x7fa50fee3858"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7fa50fee3858"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7fa50fcff2a8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7fa5100473c0"/></from>
      <to><interface-ref name="ChannelAccel_X" scoped="" ref="0x7fa50feef3b8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7fa50feef3b8"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fa50fd0f7f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7fa510042150"/></from>
      <to><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7fa50feee150"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7fa50feee150"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fa50fd0e430"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa510042da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50ff27af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e833d58"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e828980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50ff256d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e827130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e835020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e8242e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50e7f6740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50ff21d50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e7f5268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fef57b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e7f5800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fef5d50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e7f33f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fef4940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa50e7f3b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fa50e7f2470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7fa50feedd58"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7fa50fd0dc58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7fa50fd0dc58"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7fa50e79c8c8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fa50fd0e430"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fa50e79d020"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7fa50fee9558"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7fa50fd08020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7fa50fd08020"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7fa50e799c18"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7fa50fee6e40"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7fa50fd02c58"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7fa50fd02c58"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7fa50e6b2060"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7fa50feecac8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7fa50fd0b8c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7fa50fd0b8c8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7fa50e79b5b8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7fa50feeb908"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7fa50fd0a5b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7fa50fd0a5b8"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7fa50e79a2a8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7fa50fee1588"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7fa50fcfec18"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7fa50fcfec18"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7fa50e6ad020"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7fa50fee5ba0"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7fa50fd018c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7fa50fd018c8"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7fa50e6b2c58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7fa50feea6f0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7fa50fd092a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7fa50fd092a8"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7fa50e799020"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelEepromPower" scoped="" ref="0x7fa50fee49e8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7fa50fd005b8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7fa50fd005b8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7fa50e6b18c8"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7fa50fee73c0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fa50fd03438"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fa50fd03438"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fa50e6b46e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7fa50feed020"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7fa50fd0d060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7fa50fd0d060"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7fa50e79dc18"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fede908"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fede908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e7d6630"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Channel2PowerNull" scoped="" ref="0x7fa50fee6110"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fa50fd02060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fa50fd02060"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fa50e6b3430"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fa50fd0f7f8"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fa50e79e3d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7fa50fcff2a8"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7fa50e6b05b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7fa50fcfe020"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7fa50e6af2a8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fedd698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e7d5388"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fedddd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e7d5ac8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fedb9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e7d4700"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e7d2020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50feda3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e7d27a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e7d85f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e7d0908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7fa50e799020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fa50e79d020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7fa50e79b5b8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7fa50e799c18"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7fa50e79dc18"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7fa50e79a2a8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fa50e79e3d8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7fa50e79c8c8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e7979f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e78f6c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e78f6c0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e7933e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e7908e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e7908e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e77c1e8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e7979f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e779bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e7933e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa50e777888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7fa50e7742e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7fa50e774a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe27140"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fdf2020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fa50fdeec70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe3e5f0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fe3e5f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e740830"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50fdeda10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fd82700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fa50fde8420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fa50fd7d318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fe387f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fde3e60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fe375b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fe3cac8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fe3cac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e73fdd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fa50fd7d930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fa50fd75828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fa50fd75828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fa50fd6d1d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fa50fd7a2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa50fd32358"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fa50fd79908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa50fd32358"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fe3c388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e73f698"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fe3b700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e73e9d8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e73c3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fe3a020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e73cb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e7427f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e73ada0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fa50fd6bb50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fa510276020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fa50fd6ae08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fa5102754d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7fa50e6af2a8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fa50e6b3430"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7fa50e6b18c8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7fa50e6ad020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7fa50e6b2060"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7fa50e6b05b8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fa50e6b46e8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7fa50e6b2c58"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6add40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6a4b58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6a4b58"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e6a9718"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e6a5e18"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e6a5e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e692b98"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6add40"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e68d6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e6a9718"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa50e68c3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7fa50e689020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7fa50e6897c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fa50fcde020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc41c80"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7fa50fcd5980"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7fa50fcd1c28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7fa50fceade0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7fa51027c7e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7fa50fce5328"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7fa510279c78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7fa50fcd4d00"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7fa50fccd060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7fa50fcd3a30"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7fa50fccdd40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fa50fce27d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fa5102677e0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7fa50fcd6808"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7fa5102727e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7fa50fcecad0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7fa51027e4d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7fa50fce7020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7fa51027b968"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fa50fcd9858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc3ac80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7fa50fcd7680"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fa510274658"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7fa50fce44b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7fa510278e00"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fa50fcda2b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc52578"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7fa50fcd2340"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7fa50fccc3f8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fa50fce1958"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fa510266968"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7fa50fcebc58"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7fa51027d658"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7fa50fce6180"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7fa51027aaf0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7fa50fcd33c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7fa50fccd6d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fa50fce3648"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fa510268658"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fa50fcdeba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc3d458"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7fa50fcd84f8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7fa510270af0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7fa50fcd29b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7fa50fccca68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7fa50fcef868"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7fa51027f348"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fa50fce0ae0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fa510265af0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc51060"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7fa50fcb7b38"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fa50fcb7b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc6a020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc40780"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7fa50fcb6b38"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fa50fcb6b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc67c38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc3c020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fa50fcb5b38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fa50fcb5b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc627a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc38780"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7fa50fcb4b38"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fa50fcb4b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc5e3e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fa50fcbec88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc77cf8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fa50fcbdb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc737e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fa50fcb9da0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc8e258"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fa50fcb8b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fa50fc6e3e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc7a060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fa50fcac850"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc76b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fa50fcae020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc725f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fa50fcae758"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc6d2e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fa50fcad020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc6ade0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fa50fcad758"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc66a90"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fa50fcab020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc615f8"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fa50fcab758"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc5d2e8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fa50fcaa020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fa50fc1b420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fa50fc18e60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fc26e48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fb6f020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fb6f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e5fad80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fb6d960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fc211c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fc08940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fc1aa18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fc1aa18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fbd4cd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa50fc15d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa5102b1020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fb68510"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fc19d18"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb60268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb6e4a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb6e4a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e5f8268"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fa50fbcf0c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fa5102d90f0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fb6fd18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e5f9af8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fb6d0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5f8e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e5f76f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fb6d960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e5f7e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fa50e5fcd10"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e5f3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50e5c2020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fb68510"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e5c2740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fb68c30"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e5c2cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb60268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5c1908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fb60e20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50e5b99b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fb0e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fa50e5b8888"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7fa50fb0ee18"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x7fa50fb0ee18"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7fa50faae020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="PressRead" scoped="" ref="0x7fa50e5b5020"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x7fa50fb0c608"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Press" scoped="" ref="0x7fa50fb0c608"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x7fa50faad700"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x7fa50e5b45f8"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x7fa50fb0ac50"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x7fa50fb0ac50"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x7fa50faacd98"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fb0e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fa9a1c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fa9a1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fa63ad0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x7fa50faa6740"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x7fa50fcd84f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x7fa50faa4908"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x7fa50fcd7680"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x7fa50faa3a90"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x7fa50fcd6808"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50faab6c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f88a228"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f88a228"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="gotInterrupt" scoped="" ref="0x7fa50faa2c18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="SPITask" scoped="" ref="0x7fa50faa1470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fa63ad0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e55ad80"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50fa5e800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50fa99ce8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa5c3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa61bd8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa61bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e558e20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa5d800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa61020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa61020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e558268"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7fa50fa96918"/></from>
      <to><interface-ref name="ChannelPressurePower" scoped="" ref="0x7fa50fee6e40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7fa50fa95710"/></from>
      <to><interface-ref name="ChannelPressureClock" scoped="" ref="0x7fa50feed020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7fa50fa94570"/></from>
      <to><interface-ref name="ChannelPressureDin" scoped="" ref="0x7fa50feedd58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7fa50fa933f0"/></from>
      <to><interface-ref name="ChannelPressureDout" scoped="" ref="0x7fa50feecac8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50fa89c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x7fa50fa8d520"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x7fa50fcd84f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x7fa50fa8b820"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x7fa50fcd7680"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x7fa50fa8a9b8"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x7fa50fcd6808"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50fa92188"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50fa54a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50fa54a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fa62820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e559af8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e5576f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fa60550"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e557e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e55dcb8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e554020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50e514740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50fa5e800"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e513268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fa5d268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e513800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa5d800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5123f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa5c3f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa50e512b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fa50e510470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa42b18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa42b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f8b75e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa50fa45dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50fa37728"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa50fa3b108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa50f8a7128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa50fa37728"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50f930020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fa50f8b1858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f903ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50f8fec70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fa50fa34020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fa50fa34020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50f9307c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa50f89e330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fa50fa28150"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fa50fa28150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa50f92ca90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa50f92ca90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa50e4f3a90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa50f930020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50e4f6020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50f9307c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50e4f67c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50e4f0b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f9a4288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f9a4288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f997e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50e4ebb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50f99e3c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50f99e3c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50f98f020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fa50e4eae68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa50f99d7f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fa50f99d7f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa50f98e340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fa50e4e5060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fa50f99a9e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fa50f99a9e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fa50f98ac78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fa50f8facf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fa50f8ac930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa50f74bd98"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa50e484328"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa50f74c0a0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa50e486628"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fa50e4820a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f830598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fa50e481988"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f82f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fa50e482cd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f830598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fa50e47fda0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f82f850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f82f850"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f7b9bd8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f830598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f7a8878"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f7a8878"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f770980"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa50f7b7100"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fa50f7a7688"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa50f7a7688"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fa50fce0ae0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fa50f7b62e8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fa50f7a5800"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fa50f7a5800"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7fa50fceade0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fa50f7b5470"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fa50f7a4a18"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fa50f7a4a18"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fa50fcd9858"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f7b4020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f75ea60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f75ea60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa50f7af020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fa50f7aed98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fa50f7ae5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f770980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e4124b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fa50f7970f0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fa50fce0ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fa50f796368"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7fa50fceade0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f79f5b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f7775e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f7775e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f76b548"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f7a28d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f768268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f76e9d8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f76e9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e410578"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76a5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76fde8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76fde8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e411940"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7fa50f79a730"/></from>
      <to><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7fa50feea6f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7fa50f799578"/></from>
      <to><interface-ref name="ChannelHumidityData" scoped="" ref="0x7fa50fee9558"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7fa50f798400"/></from>
      <to><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7fa50fee5ba0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f795488"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f76f6a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e411200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e410e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f76d3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e40f5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e4153f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e40d5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50e3ded58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f76b548"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e3dd7b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50f76a020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e3ddd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76a5b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e3dc940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f768268"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa50e3db120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fa50e3db8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLResource" scoped="" ref="0x7fa50e3c25f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f718c58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLRead" scoped="" ref="0x7fa50e3bf060"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7fa50f717ac8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="VLight" scoped="" ref="0x7fa50f717ac8"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7fa50f6e7020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRResource" scoped="" ref="0x7fa50e3c02e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f718c58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRRead" scoped="" ref="0x7fa50e3be700"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7fa50f714298"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="IRLight" scoped="" ref="0x7fa50f714298"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7fa50f6e6700"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f718c58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f6d84d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f6d84d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f6a4a00"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6e4e60"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6879d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6879d0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fa50f6df8b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f688bf8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f688bf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7fa50f6de5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7fa50f6dd5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fa50f6ded98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f6a4a00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e38e630"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f69f800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f6d4020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f69d3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f6a2bd8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f6a2bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e38b700"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f69e800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f6a2020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f6a2020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e38dac8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7fa50f6d4bc8"/></from>
      <to><interface-ref name="ChannelLightPower" scoped="" ref="0x7fa50fee73c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f6c8610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f6d3ac0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50f6982b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50f6982b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6cec50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f691848"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f691848"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fa50f6c9828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f692b00"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f692b00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x7fa50f6c4e30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7fa50f6c4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f6a3820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e38d388"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e38a020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f6a1550"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e38a7a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e3905f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e388908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50e358268"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f69f800"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e358c98"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50f69e268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e357268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f69e800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e357e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f69d3f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fa50e3565f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fa50e356d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5b96d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5914a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f5f6680"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f5b2020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f5b2020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f58ccd0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50f5ee9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f5b1e38"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50f5b1e38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fa50f5871e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50f5ffab0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50f5b6798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50f5b6798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50f58e498"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa50f6331c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa50f5b3498"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa50f5b3498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa50f58c1c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5d3848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5aeaf8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5aeaf8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5726a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f5fc5e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f5b5928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f5b5928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f58d5b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5d70d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5ae1a0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5ae1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f57bcb8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5cb828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5ad5e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5ad5e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5712d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5b0a80"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5b0a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f589ac0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f5c74a0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f5ac2e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f5ac2e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f570020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fa50f5c9260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f59b190"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f59b190"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f564298"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f5bd130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f595130"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f595130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f560378"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5914a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f1e1988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f5a1d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f569348"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f569348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f0080c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f560378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f053270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f58ccd0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f3c8c28"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fa50f5871e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f3ca3f0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50f58e498"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50f3c9100"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa50f58c1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa50f3c8550"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f5a4870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f56c020"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f56c020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f00ccd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5726a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f1cb060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f58d5b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f3c9df8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f564298"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f050020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f599d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f567e78"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f567e78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50effe220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f5a5330"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f570b78"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f570b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f003860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f57bcb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f0d43f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f5b2be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f58b910"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f58b910"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f3c63c8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5712d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa50f1ec268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50f589ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f3cce30"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f570020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f15cbd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f599570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f567668"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f567668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f0009d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f5b1860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f5894d0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f5894d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f3c6ae0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f1e1988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa50f1cbb30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f0080c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50efe3020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fa50f584020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f337b50"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7fa50f584be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f36b748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f36b748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e29bb80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f3c8c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa50e2f2b58"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50f3c9100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50e2f4020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa50f3c8550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa50e2f2480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f5749c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f267900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f267900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50e231778"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fa50f57b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f365b38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f00ccd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50efe7b48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f1cb060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50e1b8458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50f3ca3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50e2f5268"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f3c9df8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50e2f4d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f050020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50e124660"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50effe220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50eeea438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f003860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50efdd860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f57fb00"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f338888"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f3c63c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50e2f13c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa50f1ec268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fa50f1e7470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f15cbd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fa50e1ae9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50f3cce30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50e2f7b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f053270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50e128958"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f585818"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f3375b8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f0009d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50efdb9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f3c6ae0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50e2f1ae0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f517cb8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f26a980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f26a980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50e2347f8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f5108d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50f514bc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f050020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7fa50f50ab20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f00dbd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f00dbd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50efe8a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50f484958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50effd4b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50effd4b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50eeee2e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f3c3020"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fa50f531130"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f3c4020"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fa50f3bdde0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f3c4908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7fa50f2f8430"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f3c5180"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7fa50f2f8a08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50f3ad060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50f36b748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f3bc768"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7fa50f2f9a50"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f3362c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f26a980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f3320a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f32ad20"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f332988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f2fb638"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f3332e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f2fbc10"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f2f7928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50f1fd470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50f1fd470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50e1e6da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f2f62a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f1edbd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f1edbd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1ea5b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f2f6880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f265b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f265b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50e230a10"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f264ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1ece20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1ece20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1eab90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f1fb580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7fa50f546a90"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f1fc510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50f1ed2e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50f1ed2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ebc38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f1e8a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f0d43f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ebc38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50f1ce430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50f1ce430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ca5c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1ea5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f1ced18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f1ced18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1c9020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1eab90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1cc2e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1cc2e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1c95f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa50f1cbb30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50f15d270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f15d270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa50e1b1870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ca5c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50f15dce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50f15dce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50e1b0a08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1c9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50f15c638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa50f15c638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa50e1ae430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1c95f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f04d9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f04d9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50e120080"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50f15a3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f105020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50f105020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50e175b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f15ac98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1fdd18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1fdd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e1e26c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fa50f15b5d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fa50f0205b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fa50f0205b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fa50f01aa08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1fcdf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1058c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1058c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e173578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f103ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fa50f53fdd8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f1040c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f0fc2a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1049a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f0fcb50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f1030f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fa50f0d0bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f0d2d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f0d1a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fa50f54ba78"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f0d4d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f0b3020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50f0b3020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f0ae5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0d2670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f0b38c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f0b38c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0ad020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f0abda0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fa50f53dc00"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f0ae5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f01e3f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50f01e3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f0198c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0ad020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f01ec98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f01ec98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0182a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7fa50f0ad780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f00d448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f00d448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fa50efe82c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f04ca30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50effe220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f04b9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f0250e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fa50f0498c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50f024020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f00dbd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50f015060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fa50f53dc00"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50f0198c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f00e2c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50f00e2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50efe90c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0182a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f00ebf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f00ebf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50efe99e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7fa50f01aa08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fa50f0113e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fa50f0113e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fa50efea2d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50eff95c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fa50f554e48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50eff8730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f050020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fa50eff4378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fa50eff3020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fa50eff3b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50eff2768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50e312658"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50e3114d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50f484958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fa50e30e528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fa50f483220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50e2ed020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50f3e5560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50e2f0180"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f3c5180"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50e2ef020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f3c4020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50e2ef908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f3c4908"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50e2ee020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50f3c3020"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f36a510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e2999a8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f36ac50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e298268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e298b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f368550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e2972b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e29ddc0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e297d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50e22f8e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50f3e5560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50e22e430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f264ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fa50e1df020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fa50f230d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fa50f230d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fa50f22a850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50e1dfbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50e1db140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50e1db140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50f229b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50e1e1458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f1fc510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50e1e1d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1fcdf8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7fa50e1e04a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50f1fb580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fa50f1e6100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f1e8a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fa50e1ad450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fa50f15b5d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fa50e1ac268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fa50f483220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fa50e1acc98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fa50f15a3f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e1ab578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f15ac98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fa50e1aa4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7fa50e1aac90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7fa50e1abd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa50e173d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa50f1040c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50e16f2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50f103ce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa50e171670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1049a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50e171d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f1030f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa50e1709d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa50f11b690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa50f11b690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa50f1154c8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7fa50e16fd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fa50f119668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fa50f1163b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa50f11f930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50f11ab30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f0b7978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa50f0b1bf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f0b2020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fa50f0ad780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fa50f0b4268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fa50f0af638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f0b2740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f0ab020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fa50f0b15b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50f0abda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fa50f0b6c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fa50f0af060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fa50f0b63f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fa50f0b0740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fa50e11dac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f04b9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50e11fa10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f04ca30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa50e11eaf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa50f05adc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa50f05adc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa50fa3b108"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fa50e120e60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7fa50f0498c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa50f022b78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa50f01b020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f01d3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fa50f018a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f01db10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fa50f0162a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fa50f01c8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50f015060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fa50f020020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fa50f01a430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fa50f021700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fa50f01ba90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50eeee2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50ed07578"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa50f005458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa50efe03b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50eeea438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa50ed02e68"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fa50efc8100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fa50eff95c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fa50efc8e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fa50eff4378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fa50efc7988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7fa50eff3020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fa50efc6518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fa50eff3b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50efc52b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50eff8730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa50efcb020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50eeea438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50efc1ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50eff2768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fa50efd9130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7fa50eef6710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fa50eef6710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fa5102884d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa50efd84f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7fa50eef3990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa50eef3990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50eebde80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50efd6080"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eef25e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eef25e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eec69d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fa50efd6b90"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7fa50eef1140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fa50eef1140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fa5102801a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa50efd5df0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fa50eef0338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa50eef0338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fa51028a1a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fa50efcc590"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fa50eeef4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fa50eeef4c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fa50eee9cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fa50efc1020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fa50f483220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fa50efcabf8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fa50ecaf268"/></to>
    </wire>
    <wire loc="861:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7fa50ef33368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa50ed07578"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa50e0a65c8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eec69d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eebb628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa50ed02e68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa50ecbb988"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7fa50eedac18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fa51026fc78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7fa50eed9e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fa510271968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fa50eedc540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa50edf6020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fa50edf6020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa50eddc808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa50eebd1d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa50eeb9120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa50eec6388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa50eebb020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa50eee7cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa50eec4a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50eebde80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50ee09748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa50ee09748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa50e0d2390"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50ee06550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50eeb9de0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fa50ee9ec78"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fa50ee60a20"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fa50ee60a20"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fa50ee5a8d8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fa50ee9d910"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fa5102d90f0"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fa50ee7c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fa50ee50660"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fa5102d90f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fa50ee54020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fa5102884d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fa50ee53180"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fa510287658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fa50ee52338"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fa5102867e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fa50ee514c0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fa510285968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50ee08510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e0d10c8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50ee08c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e0d1808"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e0cf100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50ee06550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa50e0cf880"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e0d45f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa50e0ce470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50edef910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50eddd160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50ee00d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50ede2180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fa50edebe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fa50edd7020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fa50edebe18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fa50edd3360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fa50edebe18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fa50edcf770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fa50e0a2670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50ee00d00"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fa50e09d650"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa50edebe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50ed4ec08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50ee00d00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa50ecbab88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa50ecc10e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa50ecbf2b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa50ecfeb18"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa50ecfeb18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa50ecf7b90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa50ece4c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa50ee00d00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50e06c100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50e060378"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50e06ccb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f5ee9f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50e06b908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa50ebcd2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa50e069020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa50e069020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5d70d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50e05f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50ec2b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50e05fbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa50ec2b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa50ebe42c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa50ebe3060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa50f5ffab0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebe3c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50ebe1268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f5ee9f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fa50ebe0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fa50ebe07c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa50eb83268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa50f5ee9f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa50eb83e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Accel202C" loc="36(Mts400TesterC.Accel202C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Accel202C.Accel202ReaderP" loc="34(Mts400TesterC.Accel202C.Accel202ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalAccel202C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalAccel202C.Accel202LogicP" loc="34(HalAccel202C.Accel202LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715.h">
        <short>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAccel202P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter" loc="89(HplAccel202C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Accel202.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.Arbiter.Queue" loc="42(HplAccel202C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter.Arbiter" loc="52(HplAccel202C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC" loc="67(HplAccel202C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC.PowerManager" loc="58(HplAccel202C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to the mts420CA sensorboard and the adg715 that connects&#10; the communication wires.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC" loc="89(Adg715C.FcfsArbiterC):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Adg715.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Queue" loc="42(Adg715C.FcfsArbiterC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Arbiter" loc="52(Adg715C.FcfsArbiterC.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm" loc="41(Adg715C.Comm):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC" loc="42(Adg715C.Comm.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Comm.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm.Atm128I2CMasterC" loc="43(Adg715C.Comm.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Adg715C.Power" loc="41(Adg715C.Power):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC" loc="42(Adg715C.Power.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Power.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Power.Atm128I2CMasterC" loc="43(Adg715C.Power.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Mts400TesterC.Intersema5534C" loc="36(Mts400TesterC.Intersema5534C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <instance number="0">
        <component-ref qname="Intersema5534C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP" loc="34(Mts400TesterC.Intersema5534C.Intersema5534ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalIntersema5534C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalIntersema5534C.Intersema5534LogicP" loc="50(HalIntersema5534C.Intersema5534LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplIntersema5534P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter" loc="89(HplIntersema5534C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Intersema5534.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Queue" loc="42(HplIntersema5534C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Arbiter" loc="52(HplIntersema5534C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC" loc="67(HplIntersema5534C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager" loc="58(HplIntersema5534C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Timer" loc="44(HplIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fa50fa210a8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HalIntersema5534C.Timer" loc="44(HalIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.SensirionSht11C" loc="45(Mts400TesterC.SensirionSht11C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP" loc="45(Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Taos2550C" loc="36(Mts400TesterC.Taos2550C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Taos2550C.Taos2550ReaderP" loc="34(Mts400TesterC.Taos2550C.Taos2550ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalTaos2550C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Taos2550LogicP" loc="36(HalTaos2550C.Taos2550LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTaos2550P" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter" loc="89(HplTaos2550C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Taos2550.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Queue" loc="42(HplTaos2550C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Arbiter" loc="52(HplTaos2550C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC" loc="67(HplTaos2550C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager" loc="58(HplTaos2550C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Timer" loc="44(HplTaos2550C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Atm128I2CMasterC" loc="43(HplTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Atm128I2CMasterC" loc="43(HalTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <documentation loc="101:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/RadioConfig.h">
        <short>&#10; The base two logarithm of the number of radio alarm ticks per one millisecond&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="6">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="7">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="Mts400TesterC.AMSenderC" loc="47(Mts400TesterC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.AMSenderC.SenderC" loc="47(Mts400TesterC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP" loc="43(Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Mts400TesterP" loc="36:Mts400TesterP.nc">
      <documentation loc="1:DataMsg.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Mts400TesterC.AMReceiverC" loc="43(Mts400TesterC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fa5102518a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fa510251bf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fa51024e020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fa510241340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fa5102416a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fa510241a10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fa510241d40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fa5101b2508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fa5101b2870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fa5101b2bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fa5101b1020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Accel202ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202LogicP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa51004daf8" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fa510010d08" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fa50fff48e0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAdg715C" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7fa50fed6430" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7fa50fed6768" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlC" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7fa50fecc108" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7fa50fecc440" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlP" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7fa50feb3b70" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA0High" ref="0x7fa50feaf020" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fa50fc8d020" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fa50fc8d388" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fa50fc8d6f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fa50fc8da20" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa50fb9b7e0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fa50fb95e38" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Intersema5534C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Intersema5534ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Intersema5534LogicP" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fa50fa210a8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fa50fa210a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fa50fa21398" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fa50fa18778" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fa50fa18778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fa50fa18a68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50fa35c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50fa35c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50f8f8cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50f8f8cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fa50f8f5020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50f8aa9f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50f8aa9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Taos2550ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550LogicP" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa50f3aa988" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fa50ed4d380" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50ed4d380"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fa50ed4d6d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa50ed39020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa50ed39020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fa50ed39770" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50ed39770"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fa50ed39a70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa50ecf5020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa50ecf5020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fa50ecf5770" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50ecf5770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa50ecda6c8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa50ecda6c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa50ecdae30" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa50ecdae30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa50ecd9240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa50ecd9240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa50ecd99b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa50ecd99b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa50ecd9d60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fa50ecd8528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fa50ecd8528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa50ec5e758" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa50ec51348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa50ec4de20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fa50ec272a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa50eb8ba20" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fa5102b50e0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa5102b50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102b5430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa5102b8b70" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fa5102b8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa5102b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fa5102b1cf0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fa5102b1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102b00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa5102b2080" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa5102b2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102b23d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fa5102b1020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa5102b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fa5102b1370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fa5102b14f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fa5102b1680"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fa5102b1808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fa5102b1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fa5102a76c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fa5102a76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102a7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa5102a7020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa5102a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102a7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fa5102a7d88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fa5102a7d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102a6170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fa5102a9be8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fa5102a9be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fa5102a9558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fa5102a9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102a98a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fa51029d4f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fa51029d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa51029d848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fa510297388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fa510297388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102976d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510297860"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102979e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510297b70"/>
        <function-ref name="get" scoped="" ref="0x7fa510297cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510297e80"/>
        <function-ref name="set" scoped="" ref="0x7fa51029d030"/>
        <function-ref name="clr" scoped="" ref="0x7fa51029d1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fa51029e020" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fa51029e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa51029e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fa51025b968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fa51025b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51025a0f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51025a278"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51025a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51025a588"/>
        <function-ref name="get" scoped="" ref="0x7fa51025a710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51025a898"/>
        <function-ref name="set" scoped="" ref="0x7fa51025aa20"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fa5102754d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fa5102754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510275820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102759a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510275b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510275cb8"/>
        <function-ref name="get" scoped="" ref="0x7fa510275e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510274020"/>
        <function-ref name="set" scoped="" ref="0x7fa5102741a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510274330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fa5102694d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fa5102694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510269820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102699a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510269b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510269cb8"/>
        <function-ref name="get" scoped="" ref="0x7fa510269e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510268020"/>
        <function-ref name="set" scoped="" ref="0x7fa5102681a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510268330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fa5102601a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fa5102601a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102604f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510260678"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510260800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510260988"/>
        <function-ref name="get" scoped="" ref="0x7fa510260b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510260c98"/>
        <function-ref name="set" scoped="" ref="0x7fa510260e20"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fa510254658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fa510254658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102549a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510254b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510254cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510254e40"/>
        <function-ref name="get" scoped="" ref="0x7fa510253020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102531a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510253330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fa51028a1a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fa51028a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51028a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51028a678"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51028a800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51028a988"/>
        <function-ref name="get" scoped="" ref="0x7fa51028ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51028ac98"/>
        <function-ref name="set" scoped="" ref="0x7fa51028ae20"/>
        <function-ref name="clr" scoped="" ref="0x7fa510289020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fa510263e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fa510263e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102621a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510262330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102624b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510262640"/>
        <function-ref name="get" scoped="" ref="0x7fa5102627c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510262950"/>
        <function-ref name="set" scoped="" ref="0x7fa510262ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510262c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fa5102884d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fa5102884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510288820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102889a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510288b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510288cb8"/>
        <function-ref name="get" scoped="" ref="0x7fa510288e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510287020"/>
        <function-ref name="set" scoped="" ref="0x7fa5102871a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510287330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fa51027d658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fa51027d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51027db30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51027dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51027de40"/>
        <function-ref name="get" scoped="" ref="0x7fa51027c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51027c1a8"/>
        <function-ref name="set" scoped="" ref="0x7fa51027c330"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fa510271968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fa510271968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510271cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510271e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510270020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102701a8"/>
        <function-ref name="get" scoped="" ref="0x7fa510270330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102704b8"/>
        <function-ref name="set" scoped="" ref="0x7fa510270640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fa510266968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fa510266968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510266cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510266e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510265020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102651a8"/>
        <function-ref name="get" scoped="" ref="0x7fa510265330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102654b8"/>
        <function-ref name="set" scoped="" ref="0x7fa510265640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fa510291968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fa510291968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510291cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510291e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510290020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102901a8"/>
        <function-ref name="get" scoped="" ref="0x7fa510290330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102904b8"/>
        <function-ref name="set" scoped="" ref="0x7fa510290640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fa510285968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fa510285968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510285cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510285e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510284020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102841a8"/>
        <function-ref name="get" scoped="" ref="0x7fa510284330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102844b8"/>
        <function-ref name="set" scoped="" ref="0x7fa510284640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fa51027aaf0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fa51027aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027ae40"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510279020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510279330"/>
        <function-ref name="get" scoped="" ref="0x7fa5102794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510279640"/>
        <function-ref name="set" scoped="" ref="0x7fa5102797c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510279950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fa51026ee00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fa51026ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51026d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026d640"/>
        <function-ref name="get" scoped="" ref="0x7fa51026d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026d950"/>
        <function-ref name="set" scoped="" ref="0x7fa51026dad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51026dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fa51025d658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fa51025d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51025d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51025db30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51025dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51025de40"/>
        <function-ref name="get" scoped="" ref="0x7fa51025c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51025c1a8"/>
        <function-ref name="set" scoped="" ref="0x7fa51025c330"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fa510256348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fa510256348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510256698"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510256820"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102569a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510256b30"/>
        <function-ref name="get" scoped="" ref="0x7fa510256cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510256e40"/>
        <function-ref name="set" scoped="" ref="0x7fa510255020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fa51026b1a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fa51026b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51026b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026b678"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026b988"/>
        <function-ref name="get" scoped="" ref="0x7fa51026bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026bc98"/>
        <function-ref name="set" scoped="" ref="0x7fa51026be20"/>
        <function-ref name="clr" scoped="" ref="0x7fa51026a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fa51028de00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fa51028de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51028c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51028c330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51028c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51028c640"/>
        <function-ref name="get" scoped="" ref="0x7fa51028c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51028c950"/>
        <function-ref name="set" scoped="" ref="0x7fa51028cad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51028cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fa510281020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fa510281020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510281370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102814f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510281680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510281808"/>
        <function-ref name="get" scoped="" ref="0x7fa510281990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510281b18"/>
        <function-ref name="set" scoped="" ref="0x7fa510281ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa510281e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fa510258020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fa510258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510258370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102584f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510258680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510258808"/>
        <function-ref name="get" scoped="" ref="0x7fa510258990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510258b18"/>
        <function-ref name="set" scoped="" ref="0x7fa510258ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa510258e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fa51027f348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fa51027f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027f698"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51027f820"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51027f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51027fb30"/>
        <function-ref name="get" scoped="" ref="0x7fa51027fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51027fe40"/>
        <function-ref name="set" scoped="" ref="0x7fa51027e020"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fa510274658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fa510274658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102749a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510274b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510274cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510274e40"/>
        <function-ref name="get" scoped="" ref="0x7fa510272020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102721a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510272330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fa510268658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fa510268658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102689a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510268b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510268cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510268e40"/>
        <function-ref name="get" scoped="" ref="0x7fa510267020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102671a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510267330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fa51025f348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fa51025f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51025f698"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51025f820"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51025f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51025fb30"/>
        <function-ref name="get" scoped="" ref="0x7fa51025fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51025fe40"/>
        <function-ref name="set" scoped="" ref="0x7fa51025e020"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fa510289348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fa510289348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510289698"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510289820"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510289b30"/>
        <function-ref name="get" scoped="" ref="0x7fa510289cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510289e40"/>
        <function-ref name="set" scoped="" ref="0x7fa510288020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fa510287658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fa510287658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102879a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510287b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510287cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510287e40"/>
        <function-ref name="get" scoped="" ref="0x7fa510286020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102861a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510286330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fa51027c7e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fa51027c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51027ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51027ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51027b020"/>
        <function-ref name="get" scoped="" ref="0x7fa51027b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51027b330"/>
        <function-ref name="set" scoped="" ref="0x7fa51027b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fa510270af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fa510270af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510270e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026f330"/>
        <function-ref name="get" scoped="" ref="0x7fa51026f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026f640"/>
        <function-ref name="set" scoped="" ref="0x7fa51026f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51026f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fa510265af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fa510265af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510265e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510264020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510264330"/>
        <function-ref name="get" scoped="" ref="0x7fa5102644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510264640"/>
        <function-ref name="set" scoped="" ref="0x7fa5102647c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510264950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fa510290af0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fa510290af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510290e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51028f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51028f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51028f330"/>
        <function-ref name="get" scoped="" ref="0x7fa51028f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51028f640"/>
        <function-ref name="set" scoped="" ref="0x7fa51028f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51028f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fa510284af0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fa510284af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510283020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102831a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510283330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102834b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510283640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102837c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510283950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510283ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fa510279c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fa510279c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510278020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102781a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510278330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102784b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510278640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102787c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510278950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510278ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fa51025c7e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fa51025c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51025cb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51025ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51025ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51025b020"/>
        <function-ref name="get" scoped="" ref="0x7fa51025b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51025b330"/>
        <function-ref name="set" scoped="" ref="0x7fa51025b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fa510276020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fa510276020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510276570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102766f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510276880"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510276a08"/>
        <function-ref name="get" scoped="" ref="0x7fa510276b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510276d18"/>
        <function-ref name="set" scoped="" ref="0x7fa510275020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fa51026a348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fa51026a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51026a698"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026a820"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026ab30"/>
        <function-ref name="get" scoped="" ref="0x7fa51026acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026ae40"/>
        <function-ref name="set" scoped="" ref="0x7fa510269020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fa510261020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fa510261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510261370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102614f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510261680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510261808"/>
        <function-ref name="get" scoped="" ref="0x7fa510261990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510261b18"/>
        <function-ref name="set" scoped="" ref="0x7fa510261ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa510261e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fa5102554d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fa5102554d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510255820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102559a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510255b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510255cb8"/>
        <function-ref name="get" scoped="" ref="0x7fa510255e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510254020"/>
        <function-ref name="set" scoped="" ref="0x7fa5102541a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510254330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fa51028b020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fa51028b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51028b370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51028b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51028b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51028b808"/>
        <function-ref name="get" scoped="" ref="0x7fa51028b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51028bb18"/>
        <function-ref name="set" scoped="" ref="0x7fa51028bca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa51028be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fa5102801a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fa5102801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102804f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510280678"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510280800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510280988"/>
        <function-ref name="get" scoped="" ref="0x7fa510280b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510280c98"/>
        <function-ref name="set" scoped="" ref="0x7fa510280e20"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fa510264c78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fa510264c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510263020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102631a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510263330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102634b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510263640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102637c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510263950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510263ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fa51027e4d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fa51027e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027e820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51027e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51027eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51027ecb8"/>
        <function-ref name="get" scoped="" ref="0x7fa51027ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51027d020"/>
        <function-ref name="set" scoped="" ref="0x7fa51027d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fa5102727e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fa5102727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510272b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510272cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510272e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510271020"/>
        <function-ref name="get" scoped="" ref="0x7fa5102711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510271330"/>
        <function-ref name="set" scoped="" ref="0x7fa5102714b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510271640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fa5102677e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fa5102677e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510267b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510267cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510267e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510266020"/>
        <function-ref name="get" scoped="" ref="0x7fa5102661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510266330"/>
        <function-ref name="set" scoped="" ref="0x7fa5102664b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510266640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fa51025e4d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fa51025e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51025e820"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51025e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51025eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51025ecb8"/>
        <function-ref name="get" scoped="" ref="0x7fa51025ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51025d020"/>
        <function-ref name="set" scoped="" ref="0x7fa51025d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51025d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fa5102a0790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fa5102a0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102a0ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5102a0c68"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102a0df0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510291020"/>
        <function-ref name="get" scoped="" ref="0x7fa5102911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510291330"/>
        <function-ref name="set" scoped="" ref="0x7fa5102914b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510291640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fa5102867e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fa5102867e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510286b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510286cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510286e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510285020"/>
        <function-ref name="get" scoped="" ref="0x7fa5102851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510285330"/>
        <function-ref name="set" scoped="" ref="0x7fa5102854b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510285640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fa51027b968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fa51027b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51027bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51027be40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51027a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51027a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa51027a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51027a4b8"/>
        <function-ref name="set" scoped="" ref="0x7fa51027a640"/>
        <function-ref name="clr" scoped="" ref="0x7fa51027a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fa51026fc78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fa51026fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51026e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa51026e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa51026e950"/>
        <function-ref name="clr" scoped="" ref="0x7fa51026ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fa5102571a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fa5102571a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102574f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510257678"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510257800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510257988"/>
        <function-ref name="get" scoped="" ref="0x7fa510257b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510257c98"/>
        <function-ref name="set" scoped="" ref="0x7fa510257e20"/>
        <function-ref name="clr" scoped="" ref="0x7fa510256020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fa51026c020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fa51026c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51026c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51026c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51026c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51026c808"/>
        <function-ref name="get" scoped="" ref="0x7fa51026c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51026cb18"/>
        <function-ref name="set" scoped="" ref="0x7fa51026cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa51026ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fa510278e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fa510278e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102771a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510277330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510277640"/>
        <function-ref name="get" scoped="" ref="0x7fa5102777c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510277950"/>
        <function-ref name="set" scoped="" ref="0x7fa510277ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510277c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fa51028fc78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fa51028fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51028d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51028d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51028d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51028d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa51028d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51028d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa51028d950"/>
        <function-ref name="clr" scoped="" ref="0x7fa51028dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fa510283e00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fa510283e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102821a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510282330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5102824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510282640"/>
        <function-ref name="get" scoped="" ref="0x7fa5102827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510282950"/>
        <function-ref name="set" scoped="" ref="0x7fa510282ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510282c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa51020a120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa51020a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51020a470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51020a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51020a780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51020a908"/>
        <function-ref name="get" scoped="" ref="0x7fa51020aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51020ac18"/>
        <function-ref name="set" scoped="" ref="0x7fa51020ada0"/>
        <function-ref name="clr" scoped="" ref="0x7fa510209020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5102075b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5102075b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510207908"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510207a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510207c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510207da0"/>
        <function-ref name="get" scoped="" ref="0x7fa510206020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102061a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510206330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102064b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa51020edc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa51020edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51020c170"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51020c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51020c480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51020c608"/>
        <function-ref name="get" scoped="" ref="0x7fa51020c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51020c918"/>
        <function-ref name="set" scoped="" ref="0x7fa51020caa0"/>
        <function-ref name="clr" scoped="" ref="0x7fa51020cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5102092a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5102092a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5102095f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510209780"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510209908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510209a90"/>
        <function-ref name="get" scoped="" ref="0x7fa510209c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510209da0"/>
        <function-ref name="set" scoped="" ref="0x7fa510208020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa510206740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa510206740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510206a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510206c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510206da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510205020"/>
        <function-ref name="get" scoped="" ref="0x7fa5102051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510205330"/>
        <function-ref name="set" scoped="" ref="0x7fa5102054b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510205640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa51020b020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa51020b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51020b370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51020b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51020b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51020b808"/>
        <function-ref name="get" scoped="" ref="0x7fa51020b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51020bb18"/>
        <function-ref name="set" scoped="" ref="0x7fa51020bca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa51020be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa510208430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa510208430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510208780"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510208908"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510208a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510208c18"/>
        <function-ref name="get" scoped="" ref="0x7fa510208da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510207020"/>
        <function-ref name="set" scoped="" ref="0x7fa5102071a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510207330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5102058c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5102058c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510205c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fa510205da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510204020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5102041a8"/>
        <function-ref name="get" scoped="" ref="0x7fa510204330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5102044b8"/>
        <function-ref name="set" scoped="" ref="0x7fa510204640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5102047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb43020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb43370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb434f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb43680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb43808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb43990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb43b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb43ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb43e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb40020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb40370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb404f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb40680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb40808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb40990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb40b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb40ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb40e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb3d020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb3d370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb3d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb3d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb3d808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb3d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb3db18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb3dca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb3de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb3a020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb3a370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb3a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb3a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb3a808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb3a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb3ab18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb3aca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb3ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb37020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb37370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb374f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb37680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb37808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb37990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb37b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb37ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb37e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb33020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb33370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb334f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb33680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb33808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb33990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb33b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb33ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb33e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb30020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb30370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb304f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb30680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb30808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb30990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb30b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb30ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb30e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eb2d020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eb2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eb2d370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eb2d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eb2d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eb2d808"/>
        <function-ref name="get" scoped="" ref="0x7fa50eb2d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eb2db18"/>
        <function-ref name="set" scoped="" ref="0x7fa50eb2dca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eb2de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa5101fcbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa5101fcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101fb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101fb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101fb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101fb4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101fb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101fb7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101fb950"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101fbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5101f8020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5101f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101f8370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101f84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101f8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101f8808"/>
        <function-ref name="get" scoped="" ref="0x7fa5101f8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101f8b18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101f8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101f8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa5101fe930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa5101fe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101fec80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101fee08"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101fd1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101fd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101fd4b8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101fd640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101fd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5101fbd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5101fbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101fa0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101fa260"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101fa3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101fa570"/>
        <function-ref name="get" scoped="" ref="0x7fa5101fa6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101fa880"/>
        <function-ref name="set" scoped="" ref="0x7fa5101faa08"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa5101f7120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa5101f7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101f7470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101f75f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101f7780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101f7908"/>
        <function-ref name="get" scoped="" ref="0x7fa5101f7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101f7c18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101f7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa5101fda50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa5101fda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101fdda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101fc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101fc330"/>
        <function-ref name="get" scoped="" ref="0x7fa5101fc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101fc640"/>
        <function-ref name="set" scoped="" ref="0x7fa5101fc7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101fc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa5101fae18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa5101fae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101f91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101f9330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101f94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101f9640"/>
        <function-ref name="get" scoped="" ref="0x7fa5101f97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101f9950"/>
        <function-ref name="set" scoped="" ref="0x7fa5101f9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101f9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5101f62a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5101f62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101f65f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101f6780"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101f6908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101f6a90"/>
        <function-ref name="get" scoped="" ref="0x7fa5101f6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101f6da0"/>
        <function-ref name="set" scoped="" ref="0x7fa5101f5020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eadc180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eadc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eadc4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eadc658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eadc7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eadc968"/>
        <function-ref name="get" scoped="" ref="0x7fa50eadcaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eadcc78"/>
        <function-ref name="set" scoped="" ref="0x7fa50eadce00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eadb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ead9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ead9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ead9450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ead95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ead9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ead98e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ead9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ead9bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ead9d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ead8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ead6100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ead6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ead6450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ead65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ead6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ead68e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ead6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ead6bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ead6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ead5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ead3100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ead3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ead3450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ead35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ead3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ead38e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ead3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ead3bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ead3d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ead2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ead0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ead0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ead0450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ead05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ead0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ead08e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ead0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ead0bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ead0d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eacf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eacd100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eacd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eacd450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eacd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eacd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eacd8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eacda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eacdbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eacdd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eacb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eac9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eac9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eac9450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eac95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eac9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eac98e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eac9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eac9bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eac9d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eac8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50eac6100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50eac6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eac6450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eac65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eac6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eac68e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eac6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eac6bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eac6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eac5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa5101ed740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa5101ed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101eda90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101edc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101ec020"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ec330"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ec4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101ec640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5101eabd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5101eabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101e9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101e91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101e9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101e94b8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101e9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101e97c8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101e9950"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101e9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa5101ef500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa5101ef500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ef850"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ef9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101efb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101efce8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101efe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ee020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ee1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101ee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5101ec8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5101ec8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ecc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ecda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101eb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101eb1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101eb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101eb4b8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101eb640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101eb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa5101e9d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa5101e9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101e70d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101e7260"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101e73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101e7570"/>
        <function-ref name="get" scoped="" ref="0x7fa5101e76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101e7880"/>
        <function-ref name="set" scoped="" ref="0x7fa5101e7a08"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa5101ee5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa5101ee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ee908"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101eea90"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101eec18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101eeda0"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ed1a8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ed330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa5101eba50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa5101eba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ebda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101ea1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101ea330"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ea4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ea640"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ea7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101ea950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5101e7e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5101e7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101e61a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101e6330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101e6640"/>
        <function-ref name="get" scoped="" ref="0x7fa5101e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101e6950"/>
        <function-ref name="set" scoped="" ref="0x7fa5101e6ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea75180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea75180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea754d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea75658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea757e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea75968"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea75af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea75c78"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea75e00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea72100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea72450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea725d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea72760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea728e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea72a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea72bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea72d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea6f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea6f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea6f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea6f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea6f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea6f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea6fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea6fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea6fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea6c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea6c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea6c450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea6c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea6c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea6c8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea6ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea6cbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea6cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea69100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea69450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea695d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea69760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea698e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea69a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea69bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea69d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea66100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea66100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea66450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea665d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea66760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea668e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea66a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea66bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea66d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea62100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea62100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea62450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea625d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea62760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea628e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea62a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea62bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea62d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea5f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea5f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea5f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea5f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea5f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea5f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea5fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea5fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea5fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa5101de120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa5101de120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101de470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101de5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101de780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101de908"/>
        <function-ref name="get" scoped="" ref="0x7fa5101dea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101dec18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101deda0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5101da5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5101da5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101da908"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101daa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101dac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101dada0"/>
        <function-ref name="get" scoped="" ref="0x7fa5101d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101d91a8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101d9330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101d94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa5101e1e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa5101e1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101e01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101e0348"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101e04d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101e0658"/>
        <function-ref name="get" scoped="" ref="0x7fa5101e07e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101e0968"/>
        <function-ref name="set" scoped="" ref="0x7fa5101e0af0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101e0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5101dd2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5101dd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101dd5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101dd780"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101dd908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101dda90"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ddc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ddda0"/>
        <function-ref name="set" scoped="" ref="0x7fa5101db020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa5101d9740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa5101d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101d9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101d9c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101d9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101d8020"/>
        <function-ref name="get" scoped="" ref="0x7fa5101d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101d8330"/>
        <function-ref name="set" scoped="" ref="0x7fa5101d84b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa5101df020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa5101df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101df370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101df4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101df680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101df808"/>
        <function-ref name="get" scoped="" ref="0x7fa5101df990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101dfb18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101dfca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101dfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa5101db430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa5101db430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101db780"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101db908"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101dba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101dbc18"/>
        <function-ref name="get" scoped="" ref="0x7fa5101dbda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101da020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101da1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5101d88c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5101d88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101d8c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101d8da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101d71a8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101d7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101d74b8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101d7640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101d77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea0e180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea0e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea0e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea0e658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea0e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea0e968"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea0eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea0ec78"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea0ee00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea0b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea0b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea0b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea0b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea0b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea0ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea0bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea0bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea08100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea08100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea08450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea085d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea08760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea088e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea08a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea08bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea08d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea05100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea05450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea055d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea05760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea058e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea05a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea05bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea05d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50ea02100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50ea02100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ea02450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ea025d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ea02760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ea028e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ea02a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ea02bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ea02d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ea01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9ff100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9ff450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9ff5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9ff760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9ff8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9ffa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9ffbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9ffd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9fc100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9fc450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9fc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9fc760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9fc8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9fca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9fcbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9fcd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9f8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9f8450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9f85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9f8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9f88e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9f8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9f8bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9f8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa5101cfbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa5101cfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ce020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ce1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101ce330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101ce4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ce640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ce7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ce950"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101cead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5101cb020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5101cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101cb370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101cb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101cb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101cb808"/>
        <function-ref name="get" scoped="" ref="0x7fa5101cb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101cbb18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101cbca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101cbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa5101d2930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa5101d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101d2c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101d2e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101d01a8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101d0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101d04b8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101d0640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5101ced60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5101ced60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101cd0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101cd260"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101cd3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101cd570"/>
        <function-ref name="get" scoped="" ref="0x7fa5101cd6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101cd880"/>
        <function-ref name="set" scoped="" ref="0x7fa5101cda08"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa5101ca120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa5101ca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ca470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ca5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101ca780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101ca908"/>
        <function-ref name="get" scoped="" ref="0x7fa5101caa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101cac18"/>
        <function-ref name="set" scoped="" ref="0x7fa5101cada0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa5101d0a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa5101d0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101d0da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101cf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101cf330"/>
        <function-ref name="get" scoped="" ref="0x7fa5101cf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101cf640"/>
        <function-ref name="set" scoped="" ref="0x7fa5101cf7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101cf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa5101cde18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa5101cde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101cc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101cc330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101cc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101cc640"/>
        <function-ref name="get" scoped="" ref="0x7fa5101cc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101cc950"/>
        <function-ref name="set" scoped="" ref="0x7fa5101ccad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101ccc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5101c92a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5101c92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101c95f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101c9780"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101c9908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101c9a90"/>
        <function-ref name="get" scoped="" ref="0x7fa5101c9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101c9da0"/>
        <function-ref name="set" scoped="" ref="0x7fa5101c8020"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9a7180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9a7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9a74d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9a7658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9a77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9a7968"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9a7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9a7c78"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9a7e00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9a4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9a4450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9a45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9a4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9a48e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9a4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9a4bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9a4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e9a1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e9a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e9a1450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9a15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e9a1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9a18e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e9a1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e9a1bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e9a1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e9a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e99e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e99e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e99e450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e99e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e99e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e99e8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e99ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e99ebf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e99ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e99d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e99b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e99b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e99b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e99b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e99b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e99b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e99ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e99bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e99bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e99a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e998100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e998100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e998450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9985d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e998760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9988e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e998a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e998bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e998d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e997020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e995100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e995100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e995450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9955d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e995760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9958e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e995a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e995bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e995d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e993020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e991100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e991100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e991450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9915d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e991760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9918e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e991a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e991bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e991d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e990020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fa5101c0740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fa5101c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101c0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101c0c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101c0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101bf020"/>
        <function-ref name="get" scoped="" ref="0x7fa5101bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101bf330"/>
        <function-ref name="set" scoped="" ref="0x7fa5101bf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fa5101bdbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fa5101bdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101bc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101bc330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101bc4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101bc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101bc7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101bc950"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101bcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fa5101c2500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fa5101c2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101c2850"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101c29d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101c2b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101c2ce8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101c2e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101c1020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101c11a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101c1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fa5101bf8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fa5101bf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101bfc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101bfda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101be020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101be1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101be330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101be4b8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101be640"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fa5101bcd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fa5101bcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101bb0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101bb260"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101bb3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101bb570"/>
        <function-ref name="get" scoped="" ref="0x7fa5101bb6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101bb880"/>
        <function-ref name="set" scoped="" ref="0x7fa5101bba08"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fa5101c15b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fa5101c15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101c1908"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101c1a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101c1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101c1da0"/>
        <function-ref name="get" scoped="" ref="0x7fa5101c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101c01a8"/>
        <function-ref name="set" scoped="" ref="0x7fa5101c0330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fa5101bea50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fa5101bea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101beda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101bd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101bd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101bd330"/>
        <function-ref name="get" scoped="" ref="0x7fa5101bd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101bd640"/>
        <function-ref name="set" scoped="" ref="0x7fa5101bd7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fa5101bbe18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fa5101bbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101ba1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101ba330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101ba640"/>
        <function-ref name="get" scoped="" ref="0x7fa5101ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101ba950"/>
        <function-ref name="set" scoped="" ref="0x7fa5101baad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101bac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e93e180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e93e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e93e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e93e658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e93e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e93e968"/>
        <function-ref name="get" scoped="" ref="0x7fa50e93eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e93ec78"/>
        <function-ref name="set" scoped="" ref="0x7fa50e93ee00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e93d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e93b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e93b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e93b450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e93b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e93b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e93b8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e93ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e93bbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e93bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e93a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e938100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e938100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e938450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9385d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e938760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9388e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e938a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e938bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e938d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e937020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e935100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e935100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e935450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9355d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e935760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9358e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e935a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e935bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e935d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e934020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e932100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e932100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e932450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9325d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e932760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9328e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e932a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e932bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e932d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e931020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e92f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e92f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e92f450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e92f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e92f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e92f8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e92fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e92fbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e92fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e92e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e92c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e92c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e92c450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e92c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e92c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e92c8e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e92ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e92cbf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e92cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e92b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa50e929100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa50e929100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50e929450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50e9295d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50e929760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50e9298e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e929a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50e929bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e929d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50e927020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa5101b33e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa5101b33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5101b3730"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101b38b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5101b3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101b3bc8"/>
        <function-ref name="get" scoped="" ref="0x7fa5101b3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51019c020"/>
        <function-ref name="set" scoped="" ref="0x7fa51019c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51019c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa510199c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa510199c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510198020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101981a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510198330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101984b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510198640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101987c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510198950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510198ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa5101933e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa5101933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510193730"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101938b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510193a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510193bc8"/>
        <function-ref name="get" scoped="" ref="0x7fa510193d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510192020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101921a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510192330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51018ec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51018ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51018d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51018d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51018d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51018d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa51018d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51018d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa51018d950"/>
        <function-ref name="clr" scoped="" ref="0x7fa51018dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa5101893e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa5101893e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510189730"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101898b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510189a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510189bc8"/>
        <function-ref name="get" scoped="" ref="0x7fa510189d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510188020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101881a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510188330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa510184c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa510184c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510183020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101831a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510183330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101834b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510183640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101837c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510183950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510183ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51017e480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51017e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51017e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51017e958"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51017eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51017ec68"/>
        <function-ref name="get" scoped="" ref="0x7fa51017edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51017d020"/>
        <function-ref name="set" scoped="" ref="0x7fa51017d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51017d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51017ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51017ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510179020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101791a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510179330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101794b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510179640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101797c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510179950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510179ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa510174520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa510174520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510174870"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101749f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510174b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510174d08"/>
        <function-ref name="get" scoped="" ref="0x7fa510173020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101731a8"/>
        <function-ref name="set" scoped="" ref="0x7fa510173330"/>
        <function-ref name="clr" scoped="" ref="0x7fa5101734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51016fcd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51016fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51016e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51016e228"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51016e3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51016e538"/>
        <function-ref name="get" scoped="" ref="0x7fa51016e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51016e848"/>
        <function-ref name="set" scoped="" ref="0x7fa51016e9d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa51016eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51016a3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51016a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51016a730"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51016a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51016aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51016abc8"/>
        <function-ref name="get" scoped="" ref="0x7fa51016ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa510169020"/>
        <function-ref name="set" scoped="" ref="0x7fa5101691a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa510169330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa510165c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa510165c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510164020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101641a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510164330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5101644b8"/>
        <function-ref name="get" scoped="" ref="0x7fa510164640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5101647c8"/>
        <function-ref name="set" scoped="" ref="0x7fa510164950"/>
        <function-ref name="clr" scoped="" ref="0x7fa510164ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa5101603e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa5101603e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa510160730"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5101608b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa510160a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa510160bc8"/>
        <function-ref name="get" scoped="" ref="0x7fa510160d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51015e020"/>
        <function-ref name="set" scoped="" ref="0x7fa51015e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa51015e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa51015bc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fa51015bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa51015a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa51015a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa51015a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa51015a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa51015a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa51015a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa51015a950"/>
        <function-ref name="clr" scoped="" ref="0x7fa51015aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa5101214b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa5101214b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa510121800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fa510121ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa510121ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fa510121e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fa510120020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fa5101201a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fa510120330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fa5101204b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fa510101418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa510101418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa510101768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa5102b3c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fa5102b3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa510102020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fa510102ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fa510102ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5101010a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fa510102308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fa510102308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa510102658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa5101027e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa510102968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa5103c4368" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fa5103c4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa5103c46b8"/>
        <function-ref name="runTask" scoped="" ref="0x7fa5103c4840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa5103c3b30" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fa5103c3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5103c3e80"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa5103f4030"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa5103f41b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa5102fa980" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fa5102fa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa5102facd0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa5102fae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fa5102f8e20" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fa5102f8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fa5102f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa5102fba18" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fa5102fba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5102fbd68"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa5102fa020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa5102fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fa5102d8668" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa5102d8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa5102d89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fa5103babc0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fa5103babc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fa5102dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fa5102d90f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fa5102d90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa5102d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa5100e9c38" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa5100e9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa5100f3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa5100f31a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fa5100f3330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa5100f34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa5100f3640"/>
        <function-ref name="get" scoped="" ref="0x7fa5100f37c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa5100f3950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa5100f2020"/>
        <function-ref name="set" scoped="" ref="0x7fa5100f3ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa5100f3c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa5100f3de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fa5100e4ce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fa5100e4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100e3228"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100e33b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100e3538"/>
        <function-ref name="get" scoped="" ref="0x7fa5100e36c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100e3848"/>
        <function-ref name="set" scoped="" ref="0x7fa5100e39d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100e3b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa5100e5020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa5100e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5100e5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fa5100e3e70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fa5100e3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100e21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100e2370"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100e24f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100e2680"/>
        <function-ref name="get" scoped="" ref="0x7fa5100e2808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100e2990"/>
        <function-ref name="set" scoped="" ref="0x7fa5100e2b18"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100e2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa5100e55e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa5100e55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa5100e5938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa5100e5ac0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa5100e5c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa5100e5dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa5100e4020"/>
        <function-ref name="get" scoped="" ref="0x7fa5100e41a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa5100e4330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa5100e4950"/>
        <function-ref name="set" scoped="" ref="0x7fa5100e44b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa5100e4640"/>
        <function-ref name="led2On" scoped="" ref="0x7fa5100e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fa5100e1020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fa5100e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100e1370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100e14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100e1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100e1808"/>
        <function-ref name="get" scoped="" ref="0x7fa5100e1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100e1b18"/>
        <function-ref name="set" scoped="" ref="0x7fa5100e1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100e1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fa5100c8e10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fa5100c8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100c51a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100c5330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100c54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100c5640"/>
        <function-ref name="get" scoped="" ref="0x7fa5100c57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100c5950"/>
        <function-ref name="set" scoped="" ref="0x7fa5100c5ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100c5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fa5100c4020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fa5100c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100c4370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100c44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100c4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100c4808"/>
        <function-ref name="get" scoped="" ref="0x7fa5100c4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100c4b18"/>
        <function-ref name="set" scoped="" ref="0x7fa5100c4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100c4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fa5100c22d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa5100c22d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa5100c2628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fa5100c31b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fa5100c31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa5100c3500"/>
        <function-ref name="isInput" scoped="" ref="0x7fa5100c3688"/>
        <function-ref name="toggle" scoped="" ref="0x7fa5100c3810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa5100c3998"/>
        <function-ref name="get" scoped="" ref="0x7fa5100c3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa5100c3ca8"/>
        <function-ref name="set" scoped="" ref="0x7fa5100c3e30"/>
        <function-ref name="clr" scoped="" ref="0x7fa5100c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x7fa50fb54aa0" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="Mts400TesterC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7fa50fb54aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fb53620"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fb53a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x7fa50fb521a8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="Mts400TesterC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7fa50fb521a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fb52cf0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fb511c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Resoure" ref="0x7fa50e862d98" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Resoure" scoped="" ref="0x7fa50e862d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e861170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e8612f8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e861480"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e861608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e861790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XRead" ref="0x7fa50e85f888" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XRead" scoped="" ref="0x7fa50e85f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e85e458"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e85e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x7fa50e864020" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7fa50e864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e864b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e863020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Resoure" ref="0x7fa50e861a58" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Resoure" scoped="" ref="0x7fa50e861a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e861da8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e85f020"/>
        <function-ref name="request" scoped="" ref="0x7fa50e85f1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e85f330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e85f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YRead" ref="0x7fa50e85d020" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YRead" scoped="" ref="0x7fa50e85d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e85db68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e85c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x7fa50e863700" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7fa50e863700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e862370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e8627c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x7fa510086258" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x7fa510086258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa510086da0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa510085238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa510088428" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa510088428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa510088778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa510088900"/>
        <function-ref name="request" scoped="" ref="0x7fa510088a88"/>
        <function-ref name="granted" scoped="" ref="0x7fa510088c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa510088d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x7fa5100859d8" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x7fa5100859d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa510084560"/>
        <function-ref name="readDone" scoped="" ref="0x7fa5100849b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YADC" ref="0x7fa510059a88" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YADC" scoped="" ref="0x7fa510059a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa510059dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7fa510058100" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7fa510058100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa510058450"/>
        <function-ref name="runTask" scoped="" ref="0x7fa5100585d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XADC" ref="0x7fa510059470" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XADC" scoped="" ref="0x7fa510059470"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa5100597c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7fa5100588a0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7fa5100588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa510058bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa510058d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x7fa51005e168" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x7fa51005e168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa51005ecb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa51005c158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7fa51005aa18" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa51005aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa51005ad68"/>
        <function-ref name="cancel" scoped="" ref="0x7fa510059020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa5100591a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa51005bdc0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa51005bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa51005a170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa51005a2f8"/>
        <function-ref name="request" scoped="" ref="0x7fa51005a480"/>
        <function-ref name="granted" scoped="" ref="0x7fa51005a608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa51005a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x7fa51005c838" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x7fa51005c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa51005b3d8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa51005b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa5100511c8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <component-ref qname="HplAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa5100511c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa510051518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa5100516a0"/>
        <function-ref name="request" scoped="" ref="0x7fa510051828"/>
        <function-ref name="granted" scoped="" ref="0x7fa5100519b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa510051b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa510048dc0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa510048dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa51004c170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa51004c2f8"/>
        <function-ref name="start" scoped="" ref="0x7fa51004c480"/>
        <function-ref name="stop" scoped="" ref="0x7fa51004c608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_X" ref="0x7fa5100473c0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7fa5100473c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa510047710"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa510047898"/>
        <function-ref name="openDone" scoped="" ref="0x7fa510047a20"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa510047ba8"/>
        <function-ref name="close" scoped="" ref="0x7fa510047d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_Y" ref="0x7fa510042150" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7fa510042150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa5100424a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa510042628"/>
        <function-ref name="openDone" scoped="" ref="0x7fa5100427b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa510042938"/>
        <function-ref name="close" scoped="" ref="0x7fa510042ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa510042da0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa510042da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa510041170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa5100412f8"/>
        <function-ref name="request" scoped="" ref="0x7fa510041480"/>
        <function-ref name="granted" scoped="" ref="0x7fa510041608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa510041790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccelPower" ref="0x7fa51004b578" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7fa51004b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa51004b8c8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa51004ba50"/>
        <function-ref name="openDone" scoped="" ref="0x7fa51004bbd8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa51004bd60"/>
        <function-ref name="close" scoped="" ref="0x7fa510047020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DcDcBoost33Channel" ref="0x7fa510043818" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7fa510043818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa510043b68"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa510043cf0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa510043e78"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa51004b030"/>
        <function-ref name="close" scoped="" ref="0x7fa51004b1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50ff27af8" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50ff27af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50ff27e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50ff26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50ff256d8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50ff256d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50ff25a48"/>
        <function-ref name="configure" scoped="" ref="0x7fa50ff25bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50ff26268" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50ff26268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50ff265b8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50ff26740"/>
        <function-ref name="granted" scoped="" ref="0x7fa50ff268c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50ff26a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50ff26bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50ff29d80" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50ff29d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50ff27170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50ff272f8"/>
        <function-ref name="request" scoped="" ref="0x7fa50ff27480"/>
        <function-ref name="granted" scoped="" ref="0x7fa50ff27608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50ff27790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50ff26e20" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50ff26e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50ff251a8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50ff25330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e836978" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e836978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e836cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e835020" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e835020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e835370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e8354f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e835680"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e835808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e833d58" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e833d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e8290f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e829278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e828980" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e828980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e828cf0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e828e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e827130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e827130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e827480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e827608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e827790"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e827918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e8294c0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e8294c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e829810"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e829998"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e829b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e829ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e829e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e827b60" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e827b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e825020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e8251a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e825330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e8254b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e825640"/>
        <function-ref name="get" scoped="" ref="0x7fa50e8257c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e825950"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e824020"/>
        <function-ref name="set" scoped="" ref="0x7fa50e825c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e825ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e825de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e833060" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e833060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e8333d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e833558"/>
        <function-ref name="request" scoped="" ref="0x7fa50e8336e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e833868"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e8339f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e8280e0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e8280e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e828430"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e8285b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e8242e8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e8242e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e824638"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e8247c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50ff21d50" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50ff21d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50fef50d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50fef5260"/>
        <function-ref name="start" scoped="" ref="0x7fa50fef53e8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fef5570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50fef57b8" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fef57b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50fef5b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50fef5d50" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fef5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fef40d8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fef4260"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fef43e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fef4570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fef46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50fef4940" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fef4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fef4c90"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fef4e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50e7f6740" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50e7f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50e7f6a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50e7f6c18"/>
        <function-ref name="start" scoped="" ref="0x7fa50e7f6da0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e7f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50e7f5268" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e7f5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50e7f55b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa50e7f3b90" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fa50e7f3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e7f2020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e7f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50e7f5800" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e7f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e7f5b50"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e7f5cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e7f5e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e7f3020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e7f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fa50e7f2470" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fa50e7f2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e7f27c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e7f2948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fa50e7f6020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fa50e7f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50e7f6370"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e7f64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50e7f33f0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e7f33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e7f3740"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e7f38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDin" ref="0x7fa50feedd58" loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7fa50feedd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feec0d8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feec260"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feec3e8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feec570"/>
        <function-ref name="close" scoped="" ref="0x7fa50feec6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_Y" ref="0x7fa50feee150" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7fa50feee150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feee4a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feee628"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feee7b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feee938"/>
        <function-ref name="close" scoped="" ref="0x7fa50feeeac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityData" ref="0x7fa50fee9558" loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7fa50fee9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee98a8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee9a30"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee9bb8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee9d40"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressurePower" ref="0x7fa50fee6e40" loc="89:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7fa50fee6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee51c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee5348"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee54d0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee5658"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee57e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDout" ref="0x7fa50feecac8" loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7fa50feecac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feece18"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feeb020"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feeb1a8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feeb330"/>
        <function-ref name="close" scoped="" ref="0x7fa50feeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelThermopile_Select_Cnt" ref="0x7fa50feeb908" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7fa50feeb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feebc58"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feebde0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feea020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feea1a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50feea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost5Channel" ref="0x7fa50fee1588" loc="106:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7fa50fee1588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee18d8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee1a60"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee1be8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee1d70"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityPower" ref="0x7fa50fee5ba0" loc="92:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7fa50fee5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee4020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee41a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee4330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee44b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityClock" ref="0x7fa50feea6f0" loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7fa50feea6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feeaa40"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feeabc8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feead50"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee9020"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelEepromPower" ref="0x7fa50fee49e8" loc="95:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelEepromPower" scoped="" ref="0x7fa50fee49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee4e38"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee3020"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee31a8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee3330"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelLightPower" ref="0x7fa50fee73c0" loc="83:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7fa50fee73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee7710"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee7898"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee7a20"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee7ba8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureClock" ref="0x7fa50feed020" loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7fa50feed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feed370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feed4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feed680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feed808"/>
        <function-ref name="close" scoped="" ref="0x7fa50feed990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fee07f0" loc="110:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fee07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fee0b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fee0cc8"/>
        <function-ref name="request" scoped="" ref="0x7fa50fee0e50"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fedf020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fedf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2PowerNull" ref="0x7fa50fee6110" loc="86:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2PowerNull" scoped="" ref="0x7fa50fee6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee6460"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee65e8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee6770"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee68f8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_X" ref="0x7fa50feef3b8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7fa50feef3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50feef708"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50feef890"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50feefa18"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50feefba0"/>
        <function-ref name="close" scoped="" ref="0x7fa50feefd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccelPower" ref="0x7fa50fee3858" loc="98:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7fa50fee3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee3ba8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee3d30"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee2020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee21a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost33Channel" ref="0x7fa50fee26d8" loc="101:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7fa50fee26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fee2a28"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fee2bb0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fee2d38"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fee1020"/>
        <function-ref name="close" scoped="" ref="0x7fa50fee11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50fedd698" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fedd698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50fedda08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50feddb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50feda3c8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50feda3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50feda738"/>
        <function-ref name="configure" scoped="" ref="0x7fa50feda8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50fedddd8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fedddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fedb170"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fedb2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fedb480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fedb608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fedb790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fede908" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fede908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fedec78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fedee00"/>
        <function-ref name="request" scoped="" ref="0x7fa50fedd020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fedd1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fedd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50fedb9d8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fedb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fedbd28"/>
        <function-ref name="userId" scoped="" ref="0x7fa50feda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e7d8020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e7d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e7d8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e7d85f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e7d85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e7d8948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e7d8ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e7d8c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e7d8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e7d5388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e7d5388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e7d56f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e7d5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e7d2020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e7d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e7d2390"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e7d2518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e7d27a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e7d27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e7d2af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e7d2c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e7d2e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e7d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e7d5ac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e7d5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e7d5e18"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e7d4020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e7d41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e7d4330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e7d44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e7d1268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e7d1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e7d15b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e7d1740"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e7d18c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e7d1a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e7d1bd8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e7d1d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e7d0020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e7d0640"/>
        <function-ref name="set" scoped="" ref="0x7fa50e7d0330"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e7d01a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e7d04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e7d6630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e7d6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e7d69a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e7d6b28"/>
        <function-ref name="request" scoped="" ref="0x7fa50e7d6cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e7d6e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e7d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e7d4700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e7d4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e7d4a50"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e7d4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e7d0908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e7d0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e7d0c58"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e7d0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7fa50fd092a8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7fa50fd092a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd095f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd09780"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd09908"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd09a90"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd09c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fa50fd0e430" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7fa50fd0e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0e780"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0e908"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0ea90"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0ec18"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd0eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7fa50fd0b8c8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7fa50fd0b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0bc18"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0bda0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0a020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0a1a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7fa50fd08020" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7fa50fd08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd08370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd084f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd08680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd08808"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd08990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7fa50fd0d060" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7fa50fd0d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0d3b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0d538"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0d6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0d848"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd0d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7fa50fd0a5b8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7fa50fd0a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0a908"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0aa90"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0ac18"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0ada0"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fa50fd0f7f8" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7fa50fd0f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0fb48"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0fcd0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0fe58"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0e020"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7fa50fd0dc58" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7fa50fd0dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd0b020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd0b1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd0b330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd0b4b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd0b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7fa50e799020" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7fa50e799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e799370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e7994f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e799680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e799808"/>
        <function-ref name="close" scoped="" ref="0x7fa50e799990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fa50e79d020" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7fa50e79d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79d370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79d4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79d680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79d808"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7fa50e79b5b8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7fa50e79b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79b908"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79ba90"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79bc18"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79bda0"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7fa50e799c18" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7fa50e799c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e797020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e7971a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e797330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e7974b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e797640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7fa50e79dc18" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7fa50e79dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79c020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79c1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79c330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79c4b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7fa50e79a2a8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7fa50e79a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79a5f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79a780"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79a908"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79aa90"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50e7933e0" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e7933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e793730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e7938b8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e793a40"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e793bc8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e793d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50e7979f0" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e7979f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e796598"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e7948b0"/>
        <function-ref name="write" scoped="" ref="0x7fa50e795150"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e795cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fa50e79e3d8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7fa50e79e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79e728"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79e8b0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79ea38"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79ebc0"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79ed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7fa50e79c8c8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7fa50e79c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e79cc18"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e79cda0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e79b020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e79b1a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e79b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7fa50e7742e8" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7fa50e7742e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e774638"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e7747c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7fa50e775060" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7fa50e775060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e7753d0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e775558"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e7756e0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e775868"/>
        <function-ref name="close" scoped="" ref="0x7fa50e7759f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e775c38" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e775c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e774020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e777888" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e777888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e777bd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e777d60"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e776020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e7761a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e776330"/>
        <function-ref name="get" scoped="" ref="0x7fa50e7764b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e776640"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e776c60"/>
        <function-ref name="set" scoped="" ref="0x7fa50e776950"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e7767c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e776ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50e779bc8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e779bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e777020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e7771a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e777330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e7774b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e777640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50e77c1e8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e77c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e77cd68"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e7790f8"/>
        <function-ref name="write" scoped="" ref="0x7fa50e77b928"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e77a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7fa50e774a88" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7fa50e774a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e774dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e773020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e7908e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e7908e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e790c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e790dc0"/>
        <function-ref name="request" scoped="" ref="0x7fa50e78f020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e78f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e78f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50e78f6c0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e78f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e78d3a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e78b790"/>
        <function-ref name="write" scoped="" ref="0x7fa50e78c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e78cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fe46538" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fe46538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fe46888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fe46a10"/>
        <function-ref name="request" scoped="" ref="0x7fa50fe46b98"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fe46d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fe45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50fe459b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fe459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fe44560"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50fe418b0"/>
        <function-ref name="write" scoped="" ref="0x7fa50fe43130"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fe43cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50fe3c388" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fe3c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50fe3c6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fe3c880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50fe3a020" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fe3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50fe3a390"/>
        <function-ref name="configure" scoped="" ref="0x7fa50fe3a518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50fe3cac8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fe3cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fe3ce18"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fe3b020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fe3b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fe3b330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fe3b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fe3e5f0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fe3e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fe3e960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fe3eae8"/>
        <function-ref name="request" scoped="" ref="0x7fa50fe3ec70"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fe3edf8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fe3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50fe3b700" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fe3b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fe3ba50"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fe3bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e742220" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e742220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e742570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e7427f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e7427f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e742b48"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e742cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e742e58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e741020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e73f698" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e73f698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e73fa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e73fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e73c3e8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e73c3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e73c758"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e73c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e73cb68" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e73cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e73b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e73b1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e73b330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e73b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e73fdd8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e73fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e73e170"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e73e2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e73e480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e73e608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e73e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e73b700" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e73b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e73ba50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e73bbd8"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e73bd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e73a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e73a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e73a330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e73a4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e73aad8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e73a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e73a640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e73a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e740830" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e740830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e740ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e740d28"/>
        <function-ref name="request" scoped="" ref="0x7fa50e73f020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e73f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e73f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e73e9d8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e73e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e73ed28"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e73c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e73ada0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e73ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e739170"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e7392f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50fe37020" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fe37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50fe37370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50fe375b8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fe375b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fe37908"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fe37a90"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fe37c18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fe37da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fe2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa50fe387f8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fe387f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50fe38b48"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fe38cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50fe2a268" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fe2a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fe2a5b8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fe2a740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fa50fde8420" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fa50fde8420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fa50fde8770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50fdeda10" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50fdeda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fdec5d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50fde98e8"/>
        <function-ref name="write" scoped="" ref="0x7fa50fdea190"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fdead10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50fde89f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50fde89f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50fde8d48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50fde7020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50fde71a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50fde7330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50fde74b8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fde7640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50fde77c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50fde7de8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fde7ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50fde7950"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50fde7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fe27140" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fe27140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fe274b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fe27638"/>
        <function-ref name="request" scoped="" ref="0x7fa50fe277c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fe27948"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fe27ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50fdf2020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fdf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fdf2bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50fdee020"/>
        <function-ref name="write" scoped="" ref="0x7fa50fdf0790"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fdef388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fa50fdeec70" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fa50fdeec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fded020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fded1a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50fded330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fded4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fded640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fa50fd7d318" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fa50fd7d318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fa50fd7d668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fa50fd7d930" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fa50fd7d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fa50fd7dc80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fa50fd7de08"/>
        <function-ref name="setStart" scoped="" ref="0x7fa50fd7c020"/>
        <function-ref name="status" scoped="" ref="0x7fa50fd7c1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fa50fd7c330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fd7c4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50fd7c640"/>
        <function-ref name="read" scoped="" ref="0x7fa50fd7c7c8"/>
        <function-ref name="init" scoped="" ref="0x7fa50fd7c950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fa50fd7cad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50fd7cc60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fa50fd7cde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50fd7b020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fa50fd7b2a8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fd7b430"/>
        <function-ref name="write" scoped="" ref="0x7fa50fd7b5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fa50fd7b740"/>
        <function-ref name="off" scoped="" ref="0x7fa50fd7b8c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fa50fd7ba50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fa50fd7bbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50fd7bd60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fa50fd7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fa50fd7a2e8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fa50fd7a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50fd7a638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50fd7a7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50fd7a948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50fd7aad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50fd7ac58"/>
        <function-ref name="get" scoped="" ref="0x7fa50fd7ade0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50fd79020"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50fd79640"/>
        <function-ref name="set" scoped="" ref="0x7fa50fd79330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50fd791a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50fd794b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fa50fd79908" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fa50fd79908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50fd79c58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50fd79de0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50fd78020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50fd781a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50fd78330"/>
        <function-ref name="get" scoped="" ref="0x7fa50fd784b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50fd78640"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50fd78c60"/>
        <function-ref name="set" scoped="" ref="0x7fa50fd78950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50fd787c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50fd78ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa50fde3e60" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fde3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50fd821e8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fd82370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50fd82700" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50fd82700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fd813a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50fd7e790"/>
        <function-ref name="write" scoped="" ref="0x7fa50fd80020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fd80ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fa50fd75828" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fa50fd75828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fa50fd75b78"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fa50fd75d00"/>
        <function-ref name="setStart" scoped="" ref="0x7fa50fd72020"/>
        <function-ref name="status" scoped="" ref="0x7fa50fd721a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fa50fd72330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fd724b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50fd72640"/>
        <function-ref name="read" scoped="" ref="0x7fa50fd727c8"/>
        <function-ref name="init" scoped="" ref="0x7fa50fd72950"/>
        <function-ref name="enableAck" scoped="" ref="0x7fa50fd72ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50fd72c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7fa50fd72de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50fd71020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fa50fd712a8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fd71430"/>
        <function-ref name="write" scoped="" ref="0x7fa50fd715b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fa50fd71740"/>
        <function-ref name="off" scoped="" ref="0x7fa50fd718c8"/>
        <function-ref name="setStop" scoped="" ref="0x7fa50fd71a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fa50fd71bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50fd71d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7fa50fd70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fa50fd6d1d8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fa50fd6d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fa50fd6d528"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fa50fd6d6b0"/>
        <function-ref name="setStart" scoped="" ref="0x7fa50fd6d838"/>
        <function-ref name="status" scoped="" ref="0x7fa50fd6d9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fa50fd6db48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fd6dcd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50fd6de58"/>
        <function-ref name="read" scoped="" ref="0x7fa50fd6c020"/>
        <function-ref name="init" scoped="" ref="0x7fa50fd6c1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x7fa50fd6c330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50fd6c4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x7fa50fd6c640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50fd6c7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fa50fd6ca50"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fd6cbd8"/>
        <function-ref name="write" scoped="" ref="0x7fa50fd6cd60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fa50fd6b020"/>
        <function-ref name="off" scoped="" ref="0x7fa50fd6b1a8"/>
        <function-ref name="setStop" scoped="" ref="0x7fa50fd6b330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fa50fd6b4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50fd6b640"/>
        <function-ref name="hasStop" scoped="" ref="0x7fa50fd6b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fa50fd6bb50" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fa50fd6bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fd6a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fd6a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fd6a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fd6a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fd6a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fd6a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fd6a950"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fd6aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fa50fd6ae08" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fa50fd6ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fd691a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fd69330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fd694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fd69640"/>
        <function-ref name="get" scoped="" ref="0x7fa50fd697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fd69950"/>
        <function-ref name="set" scoped="" ref="0x7fa50fd69ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fd69c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50fd35d08" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50fd35d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50fd320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa50fd32358" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50fd32358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50fd326a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50fd32830"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50fd329b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50fd32b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50fd32cc8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fd32e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50fd31020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50fd31640"/>
        <function-ref name="set" scoped="" ref="0x7fa50fd311a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50fd31330"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50fd314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7fa50fcfe020" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7fa50fcfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fcfe370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fcfe4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fcfe680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fcfe808"/>
        <function-ref name="close" scoped="" ref="0x7fa50fcfe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fa50fd02060" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7fa50fd02060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd023b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd02538"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd026c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd02848"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd029d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7fa50fd005b8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7fa50fd005b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd00908"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd00a90"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd00c18"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd00da0"/>
        <function-ref name="close" scoped="" ref="0x7fa50fcff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7fa50fcfec18" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7fa50fcfec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fcfc020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fcfc1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fcfc330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fcfc4b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fcfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7fa50fd02c58" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7fa50fd02c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd01020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd011a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd01330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd014b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd01640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7fa50fcff2a8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7fa50fcff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fcff5f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fcff780"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fcff908"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fcffa90"/>
        <function-ref name="close" scoped="" ref="0x7fa50fcffc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fa50fd03438" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7fa50fd03438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd03788"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd03910"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd03a98"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd03c20"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd03da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7fa50fd018c8" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7fa50fd018c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fd01c18"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fd01da0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fd00020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fd001a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fd00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7fa50e6af2a8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7fa50e6af2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6af5f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6af780"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6af908"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6afa90"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6afc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fa50e6b3430" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7fa50e6b3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b3780"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b3908"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b3a90"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b3c18"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7fa50e6b18c8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7fa50e6b18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b1c18"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b1da0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b0020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b01a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7fa50e6ad020" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7fa50e6ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6ad370"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6ad4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6ad680"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6ad808"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7fa50e6b2060" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7fa50e6b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b23b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b2538"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b26c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b2848"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6b29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7fa50e6b05b8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7fa50e6b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b0908"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b0a90"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b0c18"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b0da0"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50e6a9718" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e6a9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e6a9a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e6a9bf0"/>
        <function-ref name="request" scoped="" ref="0x7fa50e6a9d78"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e6a7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e6a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50e6add40" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6add40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e6ac8f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e6aac08"/>
        <function-ref name="write" scoped="" ref="0x7fa50e6ab4c8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e6aa088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fa50e6b46e8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7fa50e6b46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b4a38"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b4bc0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b4d48"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b3020"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7fa50e6b2c58" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7fa50e6b2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e6b1020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e6b11a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e6b1330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e6b14b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e6b1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7fa50e689020" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7fa50e689020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e689370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e6894f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7fa50e68bb90" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7fa50e68bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50e68a020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50e68a1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50e68a330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50e68a4b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50e68a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e68a888" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e68a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e68abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e68c3f0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e68c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e68c740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e68c8c8"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e68ca50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e68cbd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e68cd60"/>
        <function-ref name="get" scoped="" ref="0x7fa50e68b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e68b1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e68b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e68b4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e68b330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e68b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50e68d6e0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e68d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e68da30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e68dbb8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e68dd40"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e68c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e68c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50e692b98" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e692b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e691760"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e68fba0"/>
        <function-ref name="write" scoped="" ref="0x7fa50e690388"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e68f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7fa50e6897c0" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7fa50e6897c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e689b10"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e689c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e6a5e18" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e6a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e6a41a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e6a4330"/>
        <function-ref name="request" scoped="" ref="0x7fa50e6a44b8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e6a4640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e6a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50e6a4b58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50e6a4b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e6a3728"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50e6a1a28"/>
        <function-ref name="write" scoped="" ref="0x7fa50e6a2300"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e6a2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7fa50fcde020" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7fa50fcde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcde370"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcde4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fcde680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fcde808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fa50fcd5980" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fa50fcd5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7fa50fceade0" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7fa50fceade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce8170"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce82f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce8480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce8608"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce8790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce8918"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce8aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7fa50fce5328" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7fa50fce5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce5678"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce5800"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce5988"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce5b10"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce5c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce5e20"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce4020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fa50fcd4d00" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fa50fcd4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fa50fcd3a30" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fa50fcd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fa50fce27d0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fa50fce27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce2b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce2ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce1020"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce1330"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce14b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7fa50fcd6808" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7fa50fcd6808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcd6b58"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcd6ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcd6e68"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcd5020"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcd51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcd5330"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcd54b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fcd5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7fa50fcecad0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7fa50fcecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcece20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fceb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fceb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fceb330"/>
        <function-ref name="get" scoped="" ref="0x7fa50fceb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fceb640"/>
        <function-ref name="set" scoped="" ref="0x7fa50fceb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fceb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7fa50fce7020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7fa50fce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce7370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce7808"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce7b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7fa50fcd9858" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7fa50fcd9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcd9ba8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcd9d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fcd8020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fcd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fa50fcd4020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fa50fcd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7fa50fcd7680" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7fa50fcd7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcd79d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcd7b58"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcd7ce0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcd7e68"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcd6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcd61a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcd6330"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fcd64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7fa50fce44b0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7fa50fce44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce4800"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce4988"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce4b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce4c98"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce4e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce3020"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7fa50fcda2b0" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7fa50fcda2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcda700"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcda888"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fcdaa10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fcdab98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fa50fcd2340" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fa50fcd2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fa50fce1958" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fa50fce1958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce1ca8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce1e30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce01a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce04b8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce0640"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7fa50fcebc58" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7fa50fcebc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcea020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcea330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcea4b8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcea7c8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcea950"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fceaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7fa50fce6180" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7fa50fce6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce64d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce6658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce67e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce6968"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce6af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce6c78"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce6e00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fa50fcd4690" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fa50fcd4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fa50fcd33c0" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fa50fcd33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fa50fce3648" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fa50fce3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce3998"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fce3b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fce3ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fce3e30"/>
        <function-ref name="get" scoped="" ref="0x7fa50fce2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fce21a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fce2330"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fce24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7fa50fcdeba8" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7fa50fcdeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcd9020"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcd91a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fcd9330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fcd94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7fa50fcd84f8" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7fa50fcd84f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcd8848"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcd89d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcd8b58"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcd8ce0"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcd8e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcd7020"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcd71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fcd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fa50fcd29b0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fa50fcd29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcd2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7fa50fcef868" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7fa50fcef868"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fcefbb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcefd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcec1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcec4b8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcec640"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fcec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fa50fce0ae0" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fa50fce0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fce0e30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fcdf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fcdf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fcdf330"/>
        <function-ref name="get" scoped="" ref="0x7fa50fcdf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fcdf640"/>
        <function-ref name="set" scoped="" ref="0x7fa50fcdf7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fcdf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7fa50fcd1c28" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7fa50fcd1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7fa50fccd060" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7fa50fccd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fccd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7fa50fccdd40" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7fa50fccdd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fccc0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7fa50fcce340" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7fa50fcce340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcce690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7fa50fccc3f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7fa50fccc3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fccc748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7fa50fcce9b0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7fa50fcce9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcced00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7fa50fccd6d0" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7fa50fccd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fccda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7fa50fccca68" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7fa50fccca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7fa50fcccdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fa50fcb5b38" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fa50fcb5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb4020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb41a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb4330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb44b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb4640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fa50fcbec88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fa50fcbec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcbd020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcbd1a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcbd330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcbd4b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcbd640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcbd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fa50fcb7b38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fa50fcb7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb6020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb61a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb6330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb64b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb6640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fa50fcb4b38" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fa50fcb4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb3020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb31a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb3330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb34b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb3640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fa50fcbdb38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fa50fcbdb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb8020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb81a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb8330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb84b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb8640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fa50fcb6b38" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fa50fcb6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb5020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb51a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb5330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb54b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb5640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fa50fcb9da0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fa50fcb9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcbe170"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcbe2f8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcbe480"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcbe608"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcbe790"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcbe918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fa50fcb8b38" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fa50fcb8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fcb7020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fcb71a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fcb7330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fcb74b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fcb7640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fcb77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fa50fcab758" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fa50fcab758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcabaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fa50fcae020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fa50fcae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcae370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fa50fcad758" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fa50fcad758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcadaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fa50fcaa020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fa50fcaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcaa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fa50fcae758" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fa50fcae758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcaeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fa50fcab020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fa50fcab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcab370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fa50fcac850" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fa50fcac850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcacba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fa50fcad020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fa50fcad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fcad370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc8e258" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc8e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc8e5a8"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc8e730"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc8e8b8"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc8ea40"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc8ebc8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc8ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc7a060" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc7a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc77cf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc77cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc760a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc76228"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc763b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc76538"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc766c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc76848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc76b10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc76b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc76e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc737e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc737e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc73b38"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc73cc0"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc73e48"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc72020"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc721a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc72330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc725f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc725f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc72948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc6e3e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc6e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc6e730"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc6e8b8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc6ea40"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc6ebc8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc6ed50"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc6d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc6d2e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc6d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc6d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc6a020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc6a370"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc6a4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc6a680"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc6a808"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc6a990"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc6ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc6ade0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc6ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc69170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc67c38" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc67c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc66020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc661a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc66330"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc664b8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc66640"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc667c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc66a90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc66a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc66de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc627a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc627a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc62af8"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc62c80"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc62e08"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc61020"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc611a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc61330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc615f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc615f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc61948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fa50fc5e3e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fa50fc5e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc5e730"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc5e8b8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc5ea40"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc5ebc8"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc5ed50"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fa50fc5d2e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fa50fc5d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc5d638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fa50fc51060" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc51060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc513b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc51538"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc516c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc51848"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc519d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc51b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa50fc52578" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc52578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc528c8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc52a50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fc52bd8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fc52d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fa50fc40780" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc40780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc40ad0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc40c58"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc40de0"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc3f020"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc3f1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa50fc41c80" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc41c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc40020"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc401a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fc40330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fc404b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fa50fc3c020" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc3c370"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc3c4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc3c680"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc3c808"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc3c990"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc3cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa50fc3d458" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc3d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc3d7a8"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc3d930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fc3dab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fc3dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fa50fc38780" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fa50fc38780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50fc38ad0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fc38c58"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc38de0"/>
        <function-ref name="edge" scoped="" ref="0x7fa50fc37020"/>
        <function-ref name="enable" scoped="" ref="0x7fa50fc371a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc37330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa50fc3ac80" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fa50fc3ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50fc38020"/>
        <function-ref name="disable" scoped="" ref="0x7fa50fc381a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50fc38330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50fc384b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50fc211c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fc211c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50fc21518"/>
        <function-ref name="configure" scoped="" ref="0x7fa50fc216a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fa50fc1b420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fa50fc1b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50fc1b770"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fc1b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fa50fc23ac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa50fc23ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50fc23e10"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50fc22020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fc221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fc26e48" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fc26e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fc231c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fc23348"/>
        <function-ref name="request" scoped="" ref="0x7fa50fc234d0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fc23658"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fc237e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50fc196e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50fc196e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50fc19a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7fa50fc18e60" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7fa50fc18e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50fc171e8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fc17370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7fa50fc18508" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7fa50fc18508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50fc18858"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50fc189e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fc18b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7fa50fc08940" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fc08940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fa50fc08c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fa50fc08e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fa50fc16020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fc161a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fa50fc16330"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fa50fc164b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fa50fc16640"/>
        <function-ref name="isComplete" scoped="" ref="0x7fa50fc167c8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50fc16950"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fa50fc16ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fa50fc16c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fa50fc16de8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa50fc15020"/>
        <function-ref name="isStarted" scoped="" ref="0x7fa50fc152a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fa50fc15430"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fa50fc155b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fa50fc15740"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fc158c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fc15a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa50fc19d18" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fc19d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50fc180a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fc18228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fa50fc15d30" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fa50fc15d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fa50fc070d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fa50fc07260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fa50fc073e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fa50fc07570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fa50fc076f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fa50fc1aa18" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fc1aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fa50fc1ad68"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fa50fbd6020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fa50fbd61a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fbd6330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fa50fbd64b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fa50fbd6640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fa50fbd67c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7fa50fbd6950"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50fbd6ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fa50fbd6c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fa50fbd6de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fa50fbd5020"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa50fbd51a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7fa50fbd5430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fa50fbd55b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fa50fbd5740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fa50fbd58c8"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fbd5a50"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fbd5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7fa50fbd4cd0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7fa50fbd4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fa50fbd10a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fa50fbd1228"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fa50fbd13b0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fa50fbd1538"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fa50fbd16c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fa50fbd1848"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fa50fbd19d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fa50fbd1b58"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50fbd1ce0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fa50fbd1e68"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fa50fbd0020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fa50fbd01a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7fa50fbd0330"/>
        <function-ref name="isStarted" scoped="" ref="0x7fa50fbd05b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fa50fbd0740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fa50fbd08c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fa50fbd0a50"/>
        <function-ref name="getValue" scoped="" ref="0x7fa50fbd0bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fbd0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fa50fbcf0c0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fa50fbcf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa50fbcf410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50fb6fd18" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fb6fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50fb6e0d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fb6e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50fb6d960" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fb6d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50fb6dcd0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50fb6de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50fb6e4a8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb6e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fb6e7f8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fb6e980"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fb6eb08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fb6ec90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fb6ee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fb6f020" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fb6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fb6f390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fb6f518"/>
        <function-ref name="request" scoped="" ref="0x7fa50fb6f6a0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fb6f828"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fb6f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50fb6d0e0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fb6d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fb6d430"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fb6d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e5fc738" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e5fc738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e5fca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fa50e5fcd10" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fa50e5fcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e5fb0a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e5fb228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e5fb3b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e5fb538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e5f9af8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e5f9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e5f9e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e5f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e5f76f8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e5f76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e5f7a68"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e5f7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e5f7e78" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e5f7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e5f61f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e5f6380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e5f6508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e5f6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e5f8268" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e5f8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e5f85b8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e5f8740"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e5f88c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e5f8a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e5f8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e5f68d8" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e5f68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e5f6c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e5f6db0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e5f4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e5f41a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e5f4330"/>
        <function-ref name="get" scoped="" ref="0x7fa50e5f44b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e5f4640"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e5f4c60"/>
        <function-ref name="set" scoped="" ref="0x7fa50e5f4950"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e5f47c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e5f4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e5fad80" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e5fad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e5f9170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e5f92f8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e5f9480"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e5f9608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e5f9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e5f8e20" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5f8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e5f71a8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e5f7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e5f3020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e5f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e5f3370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e5f34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50fb68c30" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fb68c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50fb60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50fb60268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fb60268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fb605b8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fb60740"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fb608c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fb60a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fb60bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa50fb68510" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50fb68510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50fb68860"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fb689e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50fb60e20" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fb60e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fb5f1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fb5f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50e5c2740" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e5c2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50e5c2a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50e5c2cd8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e5c2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e5c10a0"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e5c1228"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e5c13b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e5c1538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e5c16c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa50e5c2020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50e5c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50e5c2370"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e5c24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50e5c1908" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5c1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e5c1c58"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e5c1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x7fa50fb4eb70" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7fa50fb4eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f880020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f8801a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Cal" ref="0x7fa50e5b45f8" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7fa50e5b45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50e5b4948"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50e5b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PressRead" ref="0x7fa50e5b5020" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PressRead" scoped="" ref="0x7fa50e5b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e5b5b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e5b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fa50e5b8888" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x7fa50e5b8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e5b7458"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e5b78a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50e5b99b0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e5b99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e5b9d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e5b8020"/>
        <function-ref name="request" scoped="" ref="0x7fa50e5b81a8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e5b8330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e5b84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x7fa50e5b9250" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7fa50e5b9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e5b95a0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e5b9728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x7fa50fb0c608" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x7fa50fb0c608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fb0a198"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fb0a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x7fa50fb0ac50" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7fa50fb0ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50fb09020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50fb091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7fa50fb0ee18" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7fa50fb0ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50fb0d9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50fb0de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fb0e020" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fb0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fb0e370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fb0e4f8"/>
        <function-ref name="request" scoped="" ref="0x7fa50fb0e680"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fb0e808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fb0e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x7fa50faa4908" loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x7fa50faa4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50faa4c58"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50faa4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50faa3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50faa31a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50faa3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50faa34b8"/>
        <function-ref name="set" scoped="" ref="0x7fa50faa3640"/>
        <function-ref name="clr" scoped="" ref="0x7fa50faa37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x7fa50faad700" loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x7fa50faad700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50faac370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50faac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x7fa50faacd98" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7fa50faacd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fa50faab170"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50faab2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x7fa50faa3a90" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x7fa50faa3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50faa3de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50faa2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50faa21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50faa2330"/>
        <function-ref name="get" scoped="" ref="0x7fa50faa24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50faa2640"/>
        <function-ref name="set" scoped="" ref="0x7fa50faa27c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50faa2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gotInterrupt" ref="0x7fa50faa2c18" loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="gotInterrupt" scoped="" ref="0x7fa50faa2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50faa1020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50faa11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x7fa50faa6740" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x7fa50faa6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50faa6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50faa6c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50faa6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50faa4020"/>
        <function-ref name="get" scoped="" ref="0x7fa50faa41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50faa4330"/>
        <function-ref name="set" scoped="" ref="0x7fa50faa44b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50faa4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7fa50faae020" loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7fa50faae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50faaeb68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50faad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPITask" ref="0x7fa50faa1470" loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPITask" scoped="" ref="0x7fa50faa1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50faa17c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50faa1948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50faab6c8" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50faab6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50faa7a18"/>
        <function-ref name="fired" scoped="" ref="0x7fa50faa8158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50faa8e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50faa89f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50faa62e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50faa7e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50faa85a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50faa9370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50faa7448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50faa9810"/>
        <function-ref name="stop" scoped="" ref="0x7fa50faa9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fa9a1c8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <component-ref qname="HplIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fa9a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fa9a518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fa9a6a0"/>
        <function-ref name="request" scoped="" ref="0x7fa50fa9a828"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fa9a9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fa9ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50fa99ce8" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50fa99ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50fa960a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50fa96228"/>
        <function-ref name="start" scoped="" ref="0x7fa50fa963b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa96538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDin" ref="0x7fa50fa94570" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7fa50fa94570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fa948c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fa94a48"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fa94bd0"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fa94d58"/>
        <function-ref name="close" scoped="" ref="0x7fa50fa93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x7fa50fa8b820" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x7fa50fa8b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fa8bb70"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fa8bcf8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fa8be80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fa8a030"/>
        <function-ref name="get" scoped="" ref="0x7fa50fa8a1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fa8a340"/>
        <function-ref name="set" scoped="" ref="0x7fa50fa8a4c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fa8a650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x7fa50fa8a9b8" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x7fa50fa8a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fa8ad08"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fa89020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fa891a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fa89330"/>
        <function-ref name="get" scoped="" ref="0x7fa50fa894b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fa89640"/>
        <function-ref name="set" scoped="" ref="0x7fa50fa897c8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fa89950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressurePower" ref="0x7fa50fa96918" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7fa50fa96918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fa96c68"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fa96df0"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fa95020"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fa951a8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fa95330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDout" ref="0x7fa50fa933f0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7fa50fa933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fa93740"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fa938c8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fa93a50"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fa93bd8"/>
        <function-ref name="close" scoped="" ref="0x7fa50fa93d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x7fa50fa8d520" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x7fa50fa8d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50fa8d870"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50fa8d9f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50fa8db80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50fa8dd08"/>
        <function-ref name="get" scoped="" ref="0x7fa50fa8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50fa8b1a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50fa8b330"/>
        <function-ref name="clr" scoped="" ref="0x7fa50fa8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureClock" ref="0x7fa50fa95710" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7fa50fa95710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50fa95a60"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50fa95be8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50fa95d70"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50fa94020"/>
        <function-ref name="close" scoped="" ref="0x7fa50fa941a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50fa89c30" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fa89c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fa88020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fa881a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50fa88330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fa884b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fa88640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50fa92188" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50fa92188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50fa8e5f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fa90a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50fa8f8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50fa8f470"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50fa8d020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50fa8ea40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50fa8f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50fa92cd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50fa8e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50fa90198"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa90638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50fa62820" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50fa62820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50fa62b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fa62d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50fa60550" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50fa60550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50fa608c0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50fa60a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50fa61020" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fa61370"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fa614f8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fa61680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fa61808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fa61990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50fa63ad0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50fa63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fa63e40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50fa62020"/>
        <function-ref name="request" scoped="" ref="0x7fa50fa621a8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fa62330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fa624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50fa61bd8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa61bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fa60020"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fa601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e55d6e0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e55d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e55da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e55dcb8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e55dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e55b0a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e55b228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e55b3b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e55b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e559af8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e559af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e559e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e558020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e5576f8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e5576f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e557a68"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e557bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e557e78" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e557e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e5561f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e556380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e556508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e556690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e558268" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e558268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e5585b8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e558740"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e5588c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e558a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e558bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e5568d8" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e5568d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e556c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e556db0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e555020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e5551a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e555330"/>
        <function-ref name="get" scoped="" ref="0x7fa50e5554b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e555640"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e555c60"/>
        <function-ref name="set" scoped="" ref="0x7fa50e555950"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e5557c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e555ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e55ad80" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e55ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e559170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e5592f8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e559480"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e559608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e559790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e558e20" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e558e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e5571a8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e557330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e554020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e554020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e554370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e5544f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50fa5e800" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50fa5e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50fa5eb50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50fa5ecd8"/>
        <function-ref name="start" scoped="" ref="0x7fa50fa5ee60"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50fa5d268" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50fa5d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50fa5d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50fa5d800" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50fa5d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50fa5db50"/>
        <function-ref name="requested" scoped="" ref="0x7fa50fa5dcd8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50fa5de60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50fa5c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50fa5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50fa5c3f0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50fa5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50fa5c740"/>
        <function-ref name="userId" scoped="" ref="0x7fa50fa5c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50e514740" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50e514740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50e514a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50e514c18"/>
        <function-ref name="start" scoped="" ref="0x7fa50e514da0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e513020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50e513268" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e513268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50e5135b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa50e512b90" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fa50e512b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e510020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e5101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50e513800" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e513800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e513b50"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e513cd8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e513e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e512020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e5121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fa50e510470" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fa50e510470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e5107c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e510948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fa50e514020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fa50e514020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50e514370"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e5144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50e5123f0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e5123f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e512740"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e5128c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50fa54a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50fa54a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f894d60"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f895470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f8941c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f895d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f893648"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f8931f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f8958c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f896620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f894790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f896ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f895020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa50fa4a3c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa4a3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50fa466c8"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fa49db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50fa48ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50fa48688"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50fa45020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50fa46b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50fa48238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50fa49020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50fa460f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50fa494c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa49960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa50fa42b18" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fa50fa42b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50fa3ed98"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fa3f4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50fa3e1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50fa3fd78"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50fa3d688"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50fa3d238"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50fa3f928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50fa406f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50fa3e7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50fa40b90"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa3f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa50fa3b108" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50fa3b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50fa3bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50fa45dd0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50fa45dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50fa42170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fa50fa28150" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fa50fa28150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50fa25020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50fa25930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50fa254a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50fa25db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50fa37728" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50fa37728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50fa37a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fa50fa34020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fa50fa34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50fa2c690"/>
        <function-ref name="fired" scoped="" ref="0x7fa50fa336f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50fa2c088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50fa33b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50fa2cb18"/>
        <function-ref name="start" scoped="" ref="0x7fa50fa34d70"/>
        <function-ref name="stop" scoped="" ref="0x7fa50fa33270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50f9307c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50f9307c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f92c020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f92e020"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50f92e930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f92e4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50f92c4a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f92f578"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f92fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50f930020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50f930020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fa5103e97c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fa5103e97c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f930370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa50f92ca90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50f92ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f92b828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50f92a190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50f92bcb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50f92a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fa50e4ebb60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50e4ebb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fa50e4ea020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fa50e4ea1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fa50e4ea330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fa50e4ea4b8"/>
        <function-ref name="setControlB" scoped="" ref="0x7fa50e4ea640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fa50e4ea7c8"/>
        <function-ref name="getControlB" scoped="" ref="0x7fa50e4ea950"/>
        <function-ref name="setControlA" scoped="" ref="0x7fa50e4eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50e4f67c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50e4f67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50e4f3020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50e4f4020"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50e4f4930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50e4f44a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50e4f34a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50e4f5578"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e4f5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e4f6020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e4f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e4f6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa50e4f3a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50e4f3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50e4f1828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50e4f0190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50e4f1cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50e4f0618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fa50e4e5060" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fa50e4e5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fa50e4e53b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fa50e4e5538"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fa50e4e56c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fa50e4e5848"/>
        <function-ref name="countBusy" scoped="" ref="0x7fa50e4e59d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fa50e4e5b58"/>
        <function-ref name="getAssr" scoped="" ref="0x7fa50e4e5ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fa50e4e5e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fa50e4eae68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fa50e4eae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50e4e6798"/>
        <function-ref name="fired" scoped="" ref="0x7fa50e4e74f8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e4e9a18"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e4e7980"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50e4e6c20"/>
        <function-ref name="set" scoped="" ref="0x7fa50e4e7020"/>
        <function-ref name="start" scoped="" ref="0x7fa50e4e7e08"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e4e6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50e4f0b98" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50e4f0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50e4ecdb8"/>
        <function-ref name="test" scoped="" ref="0x7fa50e4ec4a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e4ef760"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50e4eb270"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50e4eb748"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e4ee580"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50e4ee0f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50e4ec930"/>
        <function-ref name="set" scoped="" ref="0x7fa50e4efbe8"/>
        <function-ref name="start" scoped="" ref="0x7fa50e4eea08"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e4ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fa50f99e3c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50f99e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fa50f99e710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fa50f99e898"/>
        <function-ref name="getControlA" scoped="" ref="0x7fa50f99ea20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fa50f99eba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7fa50f99ed30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fa50f99d020"/>
        <function-ref name="getControlB" scoped="" ref="0x7fa50f99d1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7fa50f99d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fa50f99a9e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fa50f99a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fa50f99ad38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fa50f998020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fa50f9981a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fa50f998330"/>
        <function-ref name="countBusy" scoped="" ref="0x7fa50f9984b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fa50f998640"/>
        <function-ref name="getAssr" scoped="" ref="0x7fa50f9987c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7fa50f998950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa50f99d7f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fa50f99d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50f99a020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f99cd08"/>
        <function-ref name="get" scoped="" ref="0x7fa50f99c3a8"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f99b1f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50f99a4a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f99c830"/>
        <function-ref name="start" scoped="" ref="0x7fa50f99b680"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f99bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f9a4288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f9a4288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50f9a04a8"/>
        <function-ref name="test" scoped="" ref="0x7fa50f9a1a40"/>
        <function-ref name="get" scoped="" ref="0x7fa50f9a4e08"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50f9a0930"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50f9a0e08"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f9a2c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50f9a27e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50f9a0020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f9a2310"/>
        <function-ref name="start" scoped="" ref="0x7fa50f9a1130"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f9a15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fa50f98f020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50f98f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fa50f98f370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fa50f98f4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fa50f98f680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fa50f98f808"/>
        <function-ref name="setControlB" scoped="" ref="0x7fa50f98f990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fa50f98fb18"/>
        <function-ref name="getControlB" scoped="" ref="0x7fa50f98fca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fa50f98fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fa50f98a578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa50f98a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa50f98a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fa50f98ac78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fa50f98ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fa50f989020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fa50f9891a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fa50f989330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fa50f9894b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7fa50f989640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fa50f9897c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fa50f989950"/>
        <function-ref name="setAssr" scoped="" ref="0x7fa50f989ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa50f98e340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fa50f98e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50f98cc20"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f98d980"/>
        <function-ref name="get" scoped="" ref="0x7fa50f98d020"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f98de08"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50f98a0f8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f98d4a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f98c310"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f98c798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f997e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f997e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50f9900f8"/>
        <function-ref name="test" scoped="" ref="0x7fa50f992798"/>
        <function-ref name="get" scoped="" ref="0x7fa50f994a18"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50f990580"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50f990a58"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f993980"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50f9934f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50f992c20"/>
        <function-ref name="set" scoped="" ref="0x7fa50f993020"/>
        <function-ref name="start" scoped="" ref="0x7fa50f993e08"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f992310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fa50f8facf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fa50f8facf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f8f90a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f8f9228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa50f8fec70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50f8fec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f8fa410"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f8fc4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50f8fcdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f8fc930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50f8fa898"/>
        <function-ref name="start" scoped="" ref="0x7fa50f8fd9f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f8fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f903ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f903ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f8ffd60"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f901470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f8ff1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f901d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f8fe648"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f8fe1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f9018c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f902620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f8ff790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f902ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f901020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fa50f8ac930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fa50f8ac930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f8acc80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f8ace08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fa50f8b1858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fa50f8b1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f8adbc0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f8ae1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f8ad020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f8aea60"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f8ac4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f8ac088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f8ae610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f8b03d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f8ad5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f8b0878"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f8b0d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f8b75e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f8b75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f8b3988"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f8b4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f8b4d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f8b4900"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f8b12d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f8b3df8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f8b4490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f8b6198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f8b3398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f8b6658"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f8b6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa50f8a7128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50f8a7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f8a7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa50f89e330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50f89e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f89c0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50f89c9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50f89c548"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50f89ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f88a228" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f88a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f8865f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f889b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f8888c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f888470"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f885020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f886a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f888020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f88ad70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f886020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f889238"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f8896d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fa50f74bd98" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa50f74bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa50f749170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fa50f74c7c0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7fa50f74c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f74b370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f74b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fa50f74c0a0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa50f74c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa50f74c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fa50f74eaa8" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7fa50f74eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f74d620"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f74da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fa50e47fda0" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7fa50e47fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa50e47e170"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa50e47e2f8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa50e47e480"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa50e47e608"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa50e47e790"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e47e918"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa50e47eaa0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa50e47ec28"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa50e47edb0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa50e47d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fa50e484328" loc="48:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fa50e484328"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa50e484678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fa50e484a48" loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7fa50e484a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e483620"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e483a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fa50e486628" loc="46:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fa50e486628"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fa50e486978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fa50e4820a0" loc="51:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7fa50e4820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e4823f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e482578"/>
        <function-ref name="request" scoped="" ref="0x7fa50e482700"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e482888"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e482a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fa50e481988" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7fa50e481988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa50e481cd8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa50e481e60"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa50e47f020"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa50e47f1a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa50e47f330"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e47f4b8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa50e47f640"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa50e47f7c8"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa50e47f950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa50e47fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fa50e482cd8" loc="52:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7fa50e482cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e4810a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e481228"/>
        <function-ref name="request" scoped="" ref="0x7fa50e4813b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e481538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e4816c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fa50e486d48" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7fa50e486d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e4858b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e485d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fa50f82f850" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f82f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa50f82fba0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa50f82fd28"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa50f82e020"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa50f82e1a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa50f82e330"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f82e4b8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa50f82e640"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa50f82e7c8"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa50f82e950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa50f82ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f830598" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f830598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f8308e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f830a70"/>
        <function-ref name="request" scoped="" ref="0x7fa50f830bf8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f830d80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f82f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fa50f7b5470" loc="58:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7fa50f7b5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f7b57c0"/>
        <function-ref name="disable" scoped="" ref="0x7fa50f7b5948"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50f7b5ad0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50f7b5c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fa50f7aed98" loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7fa50f7aed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f7ad170"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f7ad2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fa50f7ae5f8" loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7fa50f7ae5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f7ae948"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f7aead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fa50f7b62e8" loc="57:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7fa50f7b62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f7b6638"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f7b67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f7b6948"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f7b6ad0"/>
        <function-ref name="get" scoped="" ref="0x7fa50f7b6c58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f7b6de0"/>
        <function-ref name="set" scoped="" ref="0x7fa50f7b5020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f7b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fa50f7b9bd8" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7fa50f7b9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fa50f7b8020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fa50f7b81a8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fa50f7b8330"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fa50f7b84b8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fa50f7b8640"/>
        <function-ref name="reset" scoped="" ref="0x7fa50f7b87c8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fa50f7b8950"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fa50f7b8ad8"/>
        <function-ref name="resetDone" scoped="" ref="0x7fa50f7b8c60"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fa50f7b8de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fa50f7b7100" loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7fa50f7b7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f7b7450"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f7b75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f7b7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f7b78e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50f7b7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f7b7bf8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f7b7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f7b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50f7af020" loc="62:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50f7af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50f7af370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50f7af4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50f7af680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50f7af808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50f7af990"/>
        <function-ref name="get" scoped="" ref="0x7fa50f7afb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50f7afca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50f7ae330"/>
        <function-ref name="set" scoped="" ref="0x7fa50f7ae020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50f7afe28"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50f7ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50f7b4020" loc="60:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f7b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f7b02b8"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f7b3978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f7b16c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f7b1278"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f7b0b58"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f7b0708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f7b3dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f7b4b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f7b1c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f7b3088"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f7b3528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fa50f7a4a18" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7fa50f7a4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f7a4d68"/>
        <function-ref name="disable" scoped="" ref="0x7fa50f7a3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa50f7a31a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa50f7a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fa50f7a5800" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fa50f7a5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f7a5b50"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f7a5cd8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f7a5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f7a4020"/>
        <function-ref name="get" scoped="" ref="0x7fa50f7a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f7a4330"/>
        <function-ref name="set" scoped="" ref="0x7fa50f7a44b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f7a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fa50f7a7688" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7fa50f7a7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f7a79d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f7a7b60"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f7a7ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f7a7e70"/>
        <function-ref name="get" scoped="" ref="0x7fa50f7a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f7a51a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f7a5330"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f7a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f7a8878" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f7a8878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f7a8bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f7a8d50"/>
        <function-ref name="request" scoped="" ref="0x7fa50f7a7020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f7a71a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f7a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f7a28d0" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f7a28d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f7a2c20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f7a2da8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f79f020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f79f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityData" ref="0x7fa50f799578" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7fa50f799578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50f7998c8"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50f799a50"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50f799bd8"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50f799d60"/>
        <function-ref name="close" scoped="" ref="0x7fa50f798020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fa50f796368" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fa50f796368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f7966b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f796840"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f7969c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f796b50"/>
        <function-ref name="get" scoped="" ref="0x7fa50f796cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f796e60"/>
        <function-ref name="set" scoped="" ref="0x7fa50f795020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f7951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fa50f7970f0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7fa50f7970f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50f797440"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50f7975c8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50f797750"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50f7978d8"/>
        <function-ref name="get" scoped="" ref="0x7fa50f797a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50f797be8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f797d70"/>
        <function-ref name="clr" scoped="" ref="0x7fa50f796020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityClock" ref="0x7fa50f79a730" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7fa50f79a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50f79aa80"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50f79ac08"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50f79ad90"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50f799020"/>
        <function-ref name="close" scoped="" ref="0x7fa50f7991a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityPower" ref="0x7fa50f798400" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7fa50f798400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50f798750"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50f7988d8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50f798a60"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50f798be8"/>
        <function-ref name="close" scoped="" ref="0x7fa50f798d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50f795488" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f795488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f7957d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f795960"/>
        <function-ref name="request" scoped="" ref="0x7fa50f795ae8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f795c70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f795df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50f79f5b0" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f79f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f79b8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f79d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f79dd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f79d8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f79a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f79bd40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f79d470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f79e158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f79b320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f79e5f8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f79ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f7775e8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f7775e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f7748f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f775020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f775d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f7758c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f7721c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f774d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f775470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f776158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f774320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f7765f8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f776a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50f76f6a8" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f76f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50f76fa18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f76fba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50f76d3c8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f76d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50f76d738"/>
        <function-ref name="configure" scoped="" ref="0x7fa50f76d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50f76fde8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f76e170"/>
        <function-ref name="requested" scoped="" ref="0x7fa50f76e2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f76e480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f76e608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f76e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f770980" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f770980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f770cf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f770e78"/>
        <function-ref name="request" scoped="" ref="0x7fa50f76f030"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f76f1b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f76f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50f76e9d8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f76e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50f76ed28"/>
        <function-ref name="userId" scoped="" ref="0x7fa50f76d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e416dc0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e416dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e415170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e4153f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e4153f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e415748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e4158d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e415a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e415be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e411200" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e411200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e411570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e4116f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e410e18" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e410e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e40f1c0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e40f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e40f5d0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e40f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e40f920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e40faa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e40fc30"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e40fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e411940" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e411940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e411c90"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e411e18"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e410020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e4101a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e410330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e40e060" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e40e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e40e3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e40e538"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e40e6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e40e848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e40e9d0"/>
        <function-ref name="get" scoped="" ref="0x7fa50e40eb58"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e40ece0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e40d330"/>
        <function-ref name="set" scoped="" ref="0x7fa50e40d020"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e40ee68"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e40d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e4124b0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e4124b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e412820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e4129a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e412b30"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e412cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e412e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e410578" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e410578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e4108c8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e410a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e40d5f8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e40d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e40d948"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e40dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50f76b548" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f76b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f76b898"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f76ba20"/>
        <function-ref name="start" scoped="" ref="0x7fa50f76bba8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f76bd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50f76a020" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50f76a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50f76a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50f76a5b8" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f76a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f76a908"/>
        <function-ref name="requested" scoped="" ref="0x7fa50f76aa90"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f76ac18"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f76ada0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f768020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50f768268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f768268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50f7685b8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50f768740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50e3ded58" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50e3ded58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50e3dd0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50e3dd260"/>
        <function-ref name="start" scoped="" ref="0x7fa50e3dd3e8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e3dd570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50e3dd7b8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e3dd7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50e3ddb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa50e3db120" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fa50e3db120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e3db470"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e3db5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50e3ddd50" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e3ddd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e3dc0d8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e3dc260"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e3dc3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e3dc570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e3dc6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fa50e3db8c0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fa50e3db8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e3dbc10"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e3dbd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fa50e3de638" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fa50e3de638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50e3de988"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e3deb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50e3dc940" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e3dc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e3dcc90"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e3dce18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f75ea60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f75ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f75ad60"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f75b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f75a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f75bd10"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f759648"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f7591f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f75b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f75d620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f75a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f75dac0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f75b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7fa50f67dc28" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="Mts400TesterC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7fa50f67dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f67b7e8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f67bc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7fa50f67e558" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="Mts400TesterC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7fa50f67e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f67d0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f67d548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRRead" ref="0x7fa50e3be700" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRRead" scoped="" ref="0x7fa50e3be700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e3bd370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e3bd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7fa50e3c3020" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7fa50e3c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e3c3b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e3c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLRead" ref="0x7fa50e3bf060" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLRead" scoped="" ref="0x7fa50e3bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e3bfba8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e3be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLResource" ref="0x7fa50e3c25f8" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLResource" scoped="" ref="0x7fa50e3c25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e3c2948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e3c2ad0"/>
        <function-ref name="request" scoped="" ref="0x7fa50e3c2c58"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e3c2de0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e3c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7fa50e3c5920" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7fa50e3c5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50e3c4490"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50e3c48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRResource" ref="0x7fa50e3c02e8" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRResource" scoped="" ref="0x7fa50e3c02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e3c0638"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e3c07c0"/>
        <function-ref name="request" scoped="" ref="0x7fa50e3c0948"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e3c0ad0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e3c0c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7fa50f717ac8" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7fa50f717ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f716658"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f716aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7fa50f714298" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7fa50f714298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f714de0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f713278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f718c58" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f718c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f717020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f7171a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50f717330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f7174b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f717640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7fa50f6e7020" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7fa50f6e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f6e7b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f6e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7fa50f6de5f8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7fa50f6de5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f6de948"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f6dead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7fa50f6dd5c0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7fa50f6dd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f6dd910"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f6dda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7fa50f6e6700" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7fa50f6e6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f6e4370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f6e47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fa50f6df8b8" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fa50f6df8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6dfc08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6dfd90"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6de020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6de1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6de330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50f6e4e60" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6e4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f6e3a18"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50f6e1d10"/>
        <function-ref name="write" scoped="" ref="0x7fa50f6e25c8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f6e1190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fa50f6ded98" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x7fa50f6ded98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f6dd170"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f6dd2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f6d84d0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <component-ref qname="HplTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f6d84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6d8820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6d89a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6d8b30"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6d8cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6d8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f6d4020" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f6d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f6d4370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f6d44f8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f6d4680"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f6d4808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x7fa50f6c4e30" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x7fa50f6c4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f6c31a8"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f6c3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7fa50f6c4020" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7fa50f6c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50f6c4370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50f6c44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fa50f6c9828" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fa50f6c9828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6c9b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6c9d00"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6c8020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6c81a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6c8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelLightPower" ref="0x7fa50f6d4bc8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7fa50f6d4bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7fa50f6d3020"/>
        <function-ref name="isOpen" scoped="" ref="0x7fa50f6d31a8"/>
        <function-ref name="openDone" scoped="" ref="0x7fa50f6d3330"/>
        <function-ref name="closeDone" scoped="" ref="0x7fa50f6d34b8"/>
        <function-ref name="close" scoped="" ref="0x7fa50f6d3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50f6c8610" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f6c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6c8960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6c8ae8"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6c8c70"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6c8df8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fa50f6cec50" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6cec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f6cc820"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50f6caba0"/>
        <function-ref name="write" scoped="" ref="0x7fa50f6cb3c8"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f6ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50f6d3ac0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f6d3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f6cfd60"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f6d0470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f6cf1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f6d0d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f6ce648"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f6ce1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f6d08c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f6d2658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f6cf790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f6d2af8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f6d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50f6a3820" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f6a3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50f6a3b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f6a3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50f6a1550" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f6a1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50f6a18c0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50f6a1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50f6a2020" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f6a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6a2370"/>
        <function-ref name="requested" scoped="" ref="0x7fa50f6a24f8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6a2680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6a2808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f6a2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f6a4a00" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f6a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f6a4d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6a3020"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6a31a8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6a3330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50f6a2bd8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f6a2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50f6a1020"/>
        <function-ref name="userId" scoped="" ref="0x7fa50f6a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e390020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e390020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e390370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e3905f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e3905f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e390948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e390ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e390c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e390de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e38d388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e38d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e38d6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e38d880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e38a020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e38a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e38a390"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e38a518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e38a7a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e38a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e38aaf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e38ac78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e38ae00"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e389020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa50e38dac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e38dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e38de18"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e38b020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e38b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e38b330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e38b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50e389268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50e389268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50e3895b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50e389740"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50e3898c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50e389a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50e389bd8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e389d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50e388020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50e388640"/>
        <function-ref name="set" scoped="" ref="0x7fa50e388330"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50e3881a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50e3884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e38e630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e38e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e38e9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e38eb28"/>
        <function-ref name="request" scoped="" ref="0x7fa50e38ecb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e38ee38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e38d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e38b700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e38b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e38ba50"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e38bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e388908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e388908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e388c58"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e388de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50f69f800" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f69f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f69fb50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f69fcd8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f69fe60"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f69e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50f69e268" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50f69e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50f69e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50f69e800" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50f69e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f69eb50"/>
        <function-ref name="requested" scoped="" ref="0x7fa50f69ecd8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f69ee60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f69d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f69d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50f69d3f0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f69d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50f69d740"/>
        <function-ref name="userId" scoped="" ref="0x7fa50f69d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50e358268" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50e358268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50e3585b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50e358740"/>
        <function-ref name="start" scoped="" ref="0x7fa50e3588c8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e358a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa50e358c98" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa50e358c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa50e357020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fa50e3565f8" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fa50e3565f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e356948"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e356ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa50e357268" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa50e357268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e3575b8"/>
        <function-ref name="requested" scoped="" ref="0x7fa50e357740"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e3578c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e357a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e357bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fa50e356d98" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7fa50e356d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e355170"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e3552f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fa50e35aaf0" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fa50e35aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50e35ae40"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e358020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa50e357e20" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e357e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e3561a8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e356330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50f6982b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplTaos2550C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50f6982b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f6955f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f697c08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa50f696928"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa50f6964d8"/>
        <function-ref name="getdt" scoped="" ref="0x7fa50f693020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa50f695a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f696088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa50f698df8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa50f695020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa50f697318"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f6977b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f692b00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f692b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f692e50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f691020"/>
        <function-ref name="request" scoped="" ref="0x7fa50f6911a8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f691330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f6914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50f691848" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f691848"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f690410"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50f68d790"/>
        <function-ref name="write" scoped="" ref="0x7fa50f68f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f68fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f688bf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f688bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f687020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f6871a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50f687330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f6874b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f687640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fa50f6879d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fa50f6879d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fa50fec4bb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fa50fec4e58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50f686598"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa50f6838b0"/>
        <function-ref name="write" scoped="" ref="0x7fa50f685150"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50f685cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f636660" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f636660"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f6369b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f636b38"/>
        <function-ref name="start" scoped="" ref="0x7fa50f636cc0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f636e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50f5f6680" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f5f6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f5f69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50f5ee9f8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50f5ee9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f5eed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f600020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f6001a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f600330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f6004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50f5ffab0" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50f5ffab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f5ffe00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f634020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f6341a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f634330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f6344b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa50f6331c8" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fa50f6331c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f633518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa50f5d3848" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5d3848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa50f5d3b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa50f5d3d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa50f5ef020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa50f5ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f5fc5e0" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f5fc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f5fc930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa50f5d70d0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5d70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f5d7420"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f5d75a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f5d7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa50f5cb828" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5cb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa50f5cbb78"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa50f5cbd00"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa50f5dc020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa50f5dc1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa50f5dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50f5de190" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5de190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f5de4e0"/>
        <function-ref name="source" scoped="" ref="0x7fa50f5de668"/>
        <function-ref name="address" scoped="" ref="0x7fa50f5de7f0"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f5de978"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f5deb00"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f5dec88"/>
        <function-ref name="type" scoped="" ref="0x7fa50f5dee10"/>
        <function-ref name="setType" scoped="" ref="0x7fa50f5f9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f5f91a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f5f9330"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50f5f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fa50f5c74a0" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f5c74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fa50f5c77f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f5c7978"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f5c7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7fa50f5c9260" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fa50f5c9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f5c6700"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f5c6de0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f5c6020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f5be4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa50f5bd130" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f5bd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f5bc700"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f5bcde0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f5bc020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f5ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f5b96d8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5b96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f5b9a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f5b9bb0"/>
        <function-ref name="start" scoped="" ref="0x7fa50f5b9d38"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f5b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fa50f5a1d28" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f5a1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f59e388"/>
        <function-ref name="get" scoped="" ref="0x7fa50f5a0e00"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f5a08f0"/>
        <function-ref name="set" scoped="" ref="0x7fa50f59e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa50f595130" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f595130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f594588"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f594c68"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f595e80"/>
        <function-ref name="set" scoped="" ref="0x7fa50f592380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50f5b2020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f5b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f5b2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50f5b1e38" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50f5b1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f5b01c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f5b0348"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f5b04d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5b0658"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f5b07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50f5b6798" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50f5b6798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f5b6ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f5b6c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5b6df8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f5b5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f5b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa50f5b3498" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fa50f5b3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f5b37e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fa50f5a4870" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f5a4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f5a1020"/>
        <function-ref name="get" scoped="" ref="0x7fa50f5a39a0"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f5a3490"/>
        <function-ref name="set" scoped="" ref="0x7fa50f5a1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa50f5aeaf8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5aeaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa50f5aee48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa50f5ad020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa50f5ad1a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa50f5ad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f5b5928" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f5b5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f5b5c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fa50f59b190" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f59b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f59a700"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f59ade0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f59a020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f5964f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fa50f599d80" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f599d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f59c928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fa50f5a5330" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f5a5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f5aba40"/>
        <function-ref name="get" scoped="" ref="0x7fa50f5ab530"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f5ab020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f5a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa50f5ae1a0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f5ae1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f5ae4f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f5ae678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f5ae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fa50f5b2be0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f5b2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f5b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa50f5ad5e0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5ad5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa50f5ad930"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa50f5adab8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa50f5adc40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa50f5addc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa50f5ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50f5b0a80" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50f5b0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f5b0dd0"/>
        <function-ref name="source" scoped="" ref="0x7fa50f5af020"/>
        <function-ref name="address" scoped="" ref="0x7fa50f5af1a8"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f5af330"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f5af4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f5af640"/>
        <function-ref name="type" scoped="" ref="0x7fa50f5af7c8"/>
        <function-ref name="setType" scoped="" ref="0x7fa50f5af950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f5afad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f5afc60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50f5afde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fa50f5ac2e8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f5ac2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fa50f5ac738"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f5ac8c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f5aca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa50f599570" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f599570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa50f5998c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fa50f5b1860" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f5b1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f5b1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f5914a0" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f5914a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f5917f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f591978"/>
        <function-ref name="start" scoped="" ref="0x7fa50f591b00"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f591c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fa50f569348" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f569348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f568a40"/>
        <function-ref name="get" scoped="" ref="0x7fa50f568530"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f568020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f567020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7fa50f584020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fa50f584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f584370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7fa50f584be0" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7fa50f584be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f57e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f57e228"/>
        <function-ref name="request" scoped="" ref="0x7fa50f57e3b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f57e538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f57e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50f58ccd0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f58ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f58b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50f58e498" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50f58e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f58e7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f58e970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f58eaf8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f58ec80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f58ee08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa50f58c1c8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fa50f58c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f58c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fa50f5749c0" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f5749c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fa50f574d10"/>
        <function-ref name="address" scoped="" ref="0x7fa50f57c020"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f57c1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f57c330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f57c4b8"/>
        <function-ref name="pan" scoped="" ref="0x7fa50f57c640"/>
        <function-ref name="setPan" scoped="" ref="0x7fa50f57c7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f57c950"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50f57cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7fa50f57b020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fa50f57b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f57b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f57b4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f57b680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f57b808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f57b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fa50f56c020" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f56c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f56b608"/>
        <function-ref name="get" scoped="" ref="0x7fa50f56b0f8"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f56cba0"/>
        <function-ref name="set" scoped="" ref="0x7fa50f56bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa50f5726a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f5726a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa50f5729f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa50f572b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa50f572d08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa50f571020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7fa50f5871e0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fa50f5871e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f587530"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f5876b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f587840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5879c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f587b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f58d5b0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f58d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f58d900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fa50f564298" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f564298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f563900"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f562020"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f563220"/>
        <function-ref name="set" scoped="" ref="0x7fa50f562700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fa50f567e78" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f567e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f565a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fa50f570b78" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f570b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f56e190"/>
        <function-ref name="get" scoped="" ref="0x7fa50f56fc38"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f56f728"/>
        <function-ref name="set" scoped="" ref="0x7fa50f56e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa50f57bcb8" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f57bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f5720a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f572228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f5723b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fa50f57fb00" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f57fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f57fe50"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f585020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5851a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f585330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f5854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fa50f58b910" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f58b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f58bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa50f5712d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fa50f5712d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa50f571620"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa50f5717a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa50f571930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa50f571ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa50f571c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fa50f570020" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f570020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fa50f570370"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f5704f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f570680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50f589ac0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50f589ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f589e10"/>
        <function-ref name="source" scoped="" ref="0x7fa50f588020"/>
        <function-ref name="address" scoped="" ref="0x7fa50f5881a8"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f588330"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f5884b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f588640"/>
        <function-ref name="type" scoped="" ref="0x7fa50f5887c8"/>
        <function-ref name="setType" scoped="" ref="0x7fa50f588950"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f588ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f588c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50f588de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa50f560378" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f560378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f55f7d8"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f55e020"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f55f0f8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f55e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fa50f585818" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f585818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f585b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa50f567668" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f567668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa50f5679b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fa50f5894d0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f5894d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f589820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7fa50f53dc00" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7fa50f53dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fa50f538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7fa50f542ad0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7fa50f542ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7fa50f542e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7fa50f531130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fa50f531130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f531480"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fa50f531608"/>
        <function-ref name="source" scoped="" ref="0x7fa50f531790"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f531918"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f531aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f531c28"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f531db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7fa50f541020" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7fa50f541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7fa50f541370"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7fa50f5414f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7fa50f541680"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7fa50f541808"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7fa50f541990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50f5108d8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f5108d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f510c28"/>
        <function-ref name="wait" scoped="" ref="0x7fa50f510db0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f515020"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50f5151a8"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50f515330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7fa50f50ab20" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7fa50f50ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f50ae70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f514020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5141a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f514330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f5144b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f514640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa50f514bc8" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50f514bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f508150"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f508830"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f50fa40"/>
        <function-ref name="set" scoped="" ref="0x7fa50f507020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7fa50f554e48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fa50f554e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f5581c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f558348"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f5584d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fa50f558658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fa50f5587e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7fa50f5445a0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7fa50f5445a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7fa50f5448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7fa50f54ba78" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fa50f54ba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fa50f54bdc8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fa50f557020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50f5571a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fa50f557330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fa50f5574b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fa50f557640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50f5577c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50f557950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fa50f517cb8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f517cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fa50f52f0a0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fa50f52f228"/>
        <function-ref name="setFCF" scoped="" ref="0x7fa50f52f3b0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fa50f52f538"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fa50f52f6c0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fa50f52f848"/>
        <function-ref name="setDSN" scoped="" ref="0x7fa50f52f9d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fa50f52fb58"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fa50f52fce0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fa50f52fe68"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fa50f52e020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fa50f52e1a8"/>
        <function-ref name="localAddr" scoped="" ref="0x7fa50f52e330"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50f52e5b8"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50f52e740"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fa50f52e8c8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fa50f52ea50"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fa50f52ebd8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fa50f52ed60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f516020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50f5161a8"/>
        <function-ref name="getFCF" scoped="" ref="0x7fa50f516330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50f5164b8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fa50f516640"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fa50f5167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7fa50f546a90" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fa50f546a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fa50f546de0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fa50f552020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fa50f5521a8"/>
        <function-ref name="getSender" scoped="" ref="0x7fa50f552330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7fa50f53fdd8" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fa50f53fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fa50f545170"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fa50f5452f8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fa50f545480"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fa50f545608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fa50f4b0910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f4b0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f4b0c80"/>
        <function-ref name="wait" scoped="" ref="0x7fa50f4b0e08"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f484020"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50f4841a8"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50f484330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa50f484958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50f484958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50f475020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50f4770c0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50f4779d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50f477548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50f4754a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f478730"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f478c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fa50e312658" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50e312658"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50e3129c8"/>
        <function-ref name="wait" scoped="" ref="0x7fa50e312b50"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e312cd8"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50e312e60"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50e311020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa50e3114d8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50e3114d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50e30fc88"/>
        <function-ref name="fired" scoped="" ref="0x7fa50e310d08"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50e30f680"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50e30f1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50e30e150"/>
        <function-ref name="start" scoped="" ref="0x7fa50e3103a8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e310880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fa50e30e528" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fa50e30e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fa50e30e878"/>
        <function-ref name="suspend" scoped="" ref="0x7fa50e30ea00"/>
        <function-ref name="resume" scoped="" ref="0x7fa50e30eb88"/>
        <function-ref name="run" scoped="" ref="0x7fa50e30ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7fa50f483220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fa50f483220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fa50f483570"/>
        <function-ref name="suspend" scoped="" ref="0x7fa50f4836f8"/>
        <function-ref name="resume" scoped="" ref="0x7fa50f483880"/>
        <function-ref name="run" scoped="" ref="0x7fa50f483a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f3c4020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f3c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f3c4370"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f3c44f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f3c4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f3c4908" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f3c4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f3c4c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50f3c8c28" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f3c8c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f3c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50f3ca3f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50f3ca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f3ca740"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f3ca8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f3caa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f3cabd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f3cad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50f3c9100" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50f3c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f3c9470"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f3c95f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f3c9780"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f3c9908"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f3c9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa50f3c8550" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fa50f3c8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f3c88c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f3c5180" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f3c5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f3c54d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f3c5658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f3c57e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f3c5968"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f3c5af0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f3c5c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f3c3020" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f3c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f3c3370"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fa50f3c34f8"/>
        <function-ref name="source" scoped="" ref="0x7fa50f3c3680"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f3c3808"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f3c3990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f3c3b18"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f3c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f3c9df8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f3c9df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f3c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fa50f3c63c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50f3c63c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f3c6738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50f3cce30" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50f3cce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50f3cb1a8"/>
        <function-ref name="source" scoped="" ref="0x7fa50f3cb330"/>
        <function-ref name="address" scoped="" ref="0x7fa50f3cb4b8"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f3cb640"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f3cb7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f3cb950"/>
        <function-ref name="type" scoped="" ref="0x7fa50f3cbad8"/>
        <function-ref name="setType" scoped="" ref="0x7fa50f3cbc60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f3cbde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50f3ca020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50f3ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fa50f3c6ae0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50f3c6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f3c6e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50e2ef908" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50e2ef908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e2efc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50e2ef020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50e2ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e2ef370"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e2ef4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e2ef680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50e2f2b58" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50e2f2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50e2f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50e2f5268" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50e2f5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e2f55b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e2f5740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e2f58c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e2f5a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e2f5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50e2f4020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50e2f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e2f4390"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e2f4518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e2f46a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e2f4828"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e2f49b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa50e2f2480" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fa50e2f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e2f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50e2fbde0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50e2fbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e2f7170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e2f72f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e2f7480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e2f7608"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e2f7790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e2f7918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50e2ee020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50e2ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50e2ee470"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fa50e2ee5f8"/>
        <function-ref name="source" scoped="" ref="0x7fa50e2ee780"/>
        <function-ref name="destination" scoped="" ref="0x7fa50e2ee908"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50e2eea90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50e2eec18"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50e2eeda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa50e2ed020" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50e2ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa50e2ed370"/>
        <function-ref name="changed" scoped="" ref="0x7fa50e2ed4f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa50e2ed680"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa50e2ed808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50e2f0180" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50e2f0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e2f04d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e2f0658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e2f07e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e2f0968"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e2f0af0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e2f0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50e2f4d18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50e2f4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e2f20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7fa50e2f13c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7fa50e2f13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e2f1738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50e2f7b60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50e2f7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50e2f6020"/>
        <function-ref name="source" scoped="" ref="0x7fa50e2f61a8"/>
        <function-ref name="address" scoped="" ref="0x7fa50e2f6330"/>
        <function-ref name="destination" scoped="" ref="0x7fa50e2f64b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50e2f6640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50e2f67c8"/>
        <function-ref name="type" scoped="" ref="0x7fa50e2f6950"/>
        <function-ref name="setType" scoped="" ref="0x7fa50e2f6ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50e2f6c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50e2f6de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50e2f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7fa50e2f1ae0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7fa50e2f1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e2f1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fa50f3e5560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50f3e5560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa50f3e58b0"/>
        <function-ref name="changed" scoped="" ref="0x7fa50f3e5a38"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa50f3e5bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa50f3e5d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f3bc768" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f3bc768"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f3bcab8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f3bcc40"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f3bcdc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa50f3ad060" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f3ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f3ad3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f3ad538"/>
        <function-ref name="request" scoped="" ref="0x7fa50f3ad6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f3ad848"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f3ad9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa50f3bdde0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fa50f3bdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f3bc170"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f3bc2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f3bc480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50f36a510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50f36a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50f36a880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50f36aa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50f368550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50f368550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50f3688c0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50f368a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50f36b748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50f36b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50f36bab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50f36bc40"/>
        <function-ref name="request" scoped="" ref="0x7fa50f36bdc8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50f36a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50f36a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50f36ac50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50f36ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50f368020"/>
        <function-ref name="userId" scoped="" ref="0x7fa50f3681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e29d7e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e29d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e29db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e29ddc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e29ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e29c170"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e29c2f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e29c480"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e29c608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e2999a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e2999a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e299d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e298020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e298b08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e298b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e298e78"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e297030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e2972b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e2972b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e297608"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e297790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e297918"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e297aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e29bb80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e29bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e299020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e2991a8"/>
        <function-ref name="request" scoped="" ref="0x7fa50e299330"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e2994b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e299640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e298268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e298268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e2985b8"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e298740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e297d68" loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e297d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e2960f0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e296278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f3320a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f3320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f3323f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f332578"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f332700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f332988" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f332988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f332cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa50f337b50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fa50f337b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa50f336020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50f365b38" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50f365b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f338020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f3381a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f338330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f3384b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f338640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fa50f3332e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f3332e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f333630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f3337b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f333940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f333ac8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f333c50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f333dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fa50f3362c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f3362c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fa50f336618"/>
        <function-ref name="getDSN" scoped="" ref="0x7fa50f3367a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7fa50f336928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fa50f336ab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fa50f336c38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fa50f336dc0"/>
        <function-ref name="setDSN" scoped="" ref="0x7fa50f335020"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fa50f3351a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fa50f335330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fa50f3354b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fa50f335640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fa50f3357c8"/>
        <function-ref name="localAddr" scoped="" ref="0x7fa50f335950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50f335bd8"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50f335d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fa50f334020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fa50f3341a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fa50f334330"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fa50f3344b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f334640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50f3347c8"/>
        <function-ref name="getFCF" scoped="" ref="0x7fa50f334950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50f334ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fa50f334c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fa50f334de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fa50f338888" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f338888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f338bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50f338d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f337020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f3371a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f337330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fa50f3375b8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f3375b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f337908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f2f7928" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f2f7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f2f7c78"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f2f7e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f2f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f2f62a8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f2f62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f2f65f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fa50f2fbc10" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f2fbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f2f9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f2f91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f2f9330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f2f94b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f2f9640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f2f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7fa50f2f8430" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7fa50f2f8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f2f8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f2f6880" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f2f6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f2f6bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f2f6d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f2f5020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f2f51a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f2f5330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f2f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7fa50f2f9a50" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7fa50f2f9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f2f9da0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f2f8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f2f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fa50f32ad20" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fa50f32ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f2fb0a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f2fb228"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f2fb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fa50f2fb638" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fa50f2fb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f2fb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7fa50f2f8a08" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7fa50f2f8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f2f8d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f2f7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f2f71a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f2f7330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f2f74b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f2f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fa50f267900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50f267900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fa50f267c50"/>
        <function-ref name="address" scoped="" ref="0x7fa50f267dd8"/>
        <function-ref name="destination" scoped="" ref="0x7fa50f265020"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50f2651a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50f265330"/>
        <function-ref name="pan" scoped="" ref="0x7fa50f2654b8"/>
        <function-ref name="setPan" scoped="" ref="0x7fa50f265640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f2657c8"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50f265950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f265b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f265b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f264020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f2641a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f264330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f2644b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f264640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f2647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fa50f26a980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50f26a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fa50f26acd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fa50f26ae58"/>
        <function-ref name="setFCF" scoped="" ref="0x7fa50f269020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fa50f2691a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fa50f269330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fa50f2694b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7fa50f269640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fa50f2697c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fa50f269950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fa50f269ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fa50f269c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fa50f269de8"/>
        <function-ref name="localAddr" scoped="" ref="0x7fa50f268020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50f2682a8"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50f268430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fa50f2685b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fa50f268740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fa50f2688c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fa50f268a50"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50f268bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50f268d60"/>
        <function-ref name="getFCF" scoped="" ref="0x7fa50f267020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50f2671a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fa50f267330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fa50f2674b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f264ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f264ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f264e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f263020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f2631a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f263330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f2634b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f263640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fa50e231778" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fa50e231778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fa50e231ac8"/>
        <function-ref name="address" scoped="" ref="0x7fa50e231c50"/>
        <function-ref name="destination" scoped="" ref="0x7fa50e231dd8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50e230020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50e2301a8"/>
        <function-ref name="pan" scoped="" ref="0x7fa50e230330"/>
        <function-ref name="setPan" scoped="" ref="0x7fa50e2304b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50e230640"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50e2307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50e230a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50e230a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e230d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e22f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e22f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e22f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e22f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e22f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fa50e2347f8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fa50e2347f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fa50e234b48"/>
        <function-ref name="getDSN" scoped="" ref="0x7fa50e234cd0"/>
        <function-ref name="setFCF" scoped="" ref="0x7fa50e234e58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fa50e233020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fa50e2331a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fa50e233330"/>
        <function-ref name="setDSN" scoped="" ref="0x7fa50e2334b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fa50e233640"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fa50e2337c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fa50e233950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fa50e233ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fa50e233c60"/>
        <function-ref name="localAddr" scoped="" ref="0x7fa50e233de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50e232120"/>
        <function-ref name="localPan" scoped="" ref="0x7fa50e2322a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fa50e232430"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fa50e2325b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fa50e232740"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fa50e2328c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50e232a50"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50e232bd8"/>
        <function-ref name="getFCF" scoped="" ref="0x7fa50e232d60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50e231020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fa50e2311a8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fa50e231330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa50e22f8e8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa50e22f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa50e22fc38"/>
        <function-ref name="changed" scoped="" ref="0x7fa50e22fdc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa50e22e020"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa50e22e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50e22e430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50e22e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e22e780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e22e908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e22ea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e22ec18"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e22eda0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e22d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f1fc510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f1fc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1fc860"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1fc9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1fcb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f1fcdf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1fcdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1fb170"/>
        <function-ref name="header" scoped="" ref="0x7fa50f1fb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50f1fd470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50f1fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1fd7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1fd948"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1fdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f1fb580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f1fb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fa50f1fb8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fa50f1fba58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fa50f1fbbe0"/>
        <function-ref name="getSender" scoped="" ref="0x7fa50f1fbd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f1fdd18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1fdd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1fc0a0"/>
        <function-ref name="header" scoped="" ref="0x7fa50f1fc228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50e1e1458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50e1e1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e1e17a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e1e1930"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e1e1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50e1e1d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50e1e1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1e00d8"/>
        <function-ref name="header" scoped="" ref="0x7fa50e1e0260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fa50e1dfbd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50e1dfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e1dd020"/>
        <function-ref name="clearAll" scoped="" ref="0x7fa50e1dd1a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e1dd330"/>
        <function-ref name="set" scoped="" ref="0x7fa50e1dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50e1e6da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50e1e6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e1e2170"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e1e22f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e1e2480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fa50e1df020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fa50e1df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fa50e1df370"/>
        <function-ref name="insertNode" scoped="" ref="0x7fa50e1df4f8"/>
        <function-ref name="getNode" scoped="" ref="0x7fa50e1df680"/>
        <function-ref name="evicted" scoped="" ref="0x7fa50e1df808"/>
        <function-ref name="getIndex" scoped="" ref="0x7fa50e1df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50e1e26c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e1e26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1e2a18"/>
        <function-ref name="header" scoped="" ref="0x7fa50e1e2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e1e2de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e1e2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e1e1170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7fa50e1e04a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fa50e1e04a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fa50e1e07f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fa50e1e0980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fa50e1e0b08"/>
        <function-ref name="getSender" scoped="" ref="0x7fa50e1e0c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fa50f230d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fa50f230d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fa50f22d0d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7fa50f22d260"/>
        <function-ref name="getNode" scoped="" ref="0x7fa50f22d3e8"/>
        <function-ref name="evicted" scoped="" ref="0x7fa50f22d570"/>
        <function-ref name="getIndex" scoped="" ref="0x7fa50f22d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fa50f229b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50f229b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f229e68"/>
        <function-ref name="clearAll" scoped="" ref="0x7fa50f228020"/>
        <function-ref name="get" scoped="" ref="0x7fa50f2281a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50f228330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fa50f22a850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fa50f22a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fa50f22aba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fa50f22ad28"/>
        <function-ref name="getNode" scoped="" ref="0x7fa50f229020"/>
        <function-ref name="evicted" scoped="" ref="0x7fa50f2291a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7fa50f229330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50f22a238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50f22a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f22a588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fa50e1db140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fa50e1db140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e1db490"/>
        <function-ref name="clearAll" scoped="" ref="0x7fa50e1db618"/>
        <function-ref name="get" scoped="" ref="0x7fa50e1db7a0"/>
        <function-ref name="set" scoped="" ref="0x7fa50e1db928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f1ebc38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ebc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1ea020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1ea1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1ea330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f1ea5b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1ea5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1ea908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7fa50f1e6100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fa50f1e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f1e6450"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f1e65d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f1e6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50f1ed2e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50f1ed2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1ed638"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1ed7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1ed948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f1ece20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1ece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f1eb1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f1eb330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f1eb4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f1eb640"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f1eb7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f1eb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f1eab90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1eab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f1e8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f1e81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f1e8330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f1e84b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f1e8640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f1e87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7fa50f1e7470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fa50f1e7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa50f1e77c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa50f1e7948"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa50f1e7ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa50f1e7c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa50f1e7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f1edbd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f1edbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fa50f1e8a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f1e8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f1e8d60"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f1e7020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f1e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa50f1ec268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fa50f1ec268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa50f1ec5b8"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa50f1ec740"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa50f1ec8c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa50f1eca50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa50f1ecbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f1e1988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f1e1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f1e1cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f1e1e60"/>
        <function-ref name="start" scoped="" ref="0x7fa50f1ce020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f1ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f1ca5c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f1ca5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1ca918"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1caaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1cac28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f1c9020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1c9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50f1ce430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50f1ce430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f1ce780"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f1ce908"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f1cea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f1cc2e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f1cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f1cc638"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f1cc7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f1cc948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f1ccad0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f1ccc58"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f1ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa50f1cb060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50f1cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa50f1cb3b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa50f1cb538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa50f1cb6c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa50f1cb848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa50f1cbb30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fa50f1cbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f1cbe80"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f1ca030"/>
        <function-ref name="start" scoped="" ref="0x7fa50f1ca1b8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f1ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f1ced18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f1ced18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f1cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f1c95f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f1c95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f1c9948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f1c9ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f1c9c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f1c9de0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f1c8020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f1c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa50e1b8458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa50e1b8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa50e1b87a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa50e1b8930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa50e1b8ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa50e1b8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f15d270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f15d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f15d5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f15d748"/>
        <function-ref name="start" scoped="" ref="0x7fa50f15d8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f15da58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fa50f15b5d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50f15b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f15b928"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f15bab0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f15bc38"/>
        <function-ref name="done" scoped="" ref="0x7fa50f15bdc0"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f15a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f15a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50f15dce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50f15dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f15c0a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f15c228"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f15c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fa50f15ac98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f15ac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f159020"/>
        <function-ref name="header" scoped="" ref="0x7fa50f1591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50f15c638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50f15c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f15c988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fa50f15a3f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f15a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f15a740"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f15a8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f15aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fa50f15cbd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fa50f15cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fa50f15b020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f15b1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f15b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50e1b1870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50e1b1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50e1b1bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50e1b1d48"/>
        <function-ref name="start" scoped="" ref="0x7fa50e1b0020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e1b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fa50e1b0430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa50e1b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e1b0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fa50e1ad450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50e1ad450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50e1ad7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50e1ad928"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50e1adab0"/>
        <function-ref name="done" scoped="" ref="0x7fa50e1adc38"/>
        <function-ref name="standby" scoped="" ref="0x7fa50e1addc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50e1ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50e1b0a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50e1b0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e1b0d58"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e1ae020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e1ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fa50e1aa4f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fa50e1aa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e1aa840"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e1aa9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fa50e1ab578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e1ab578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1ab8c8"/>
        <function-ref name="header" scoped="" ref="0x7fa50e1aba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7fa50e1aac90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7fa50e1aac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e1a9020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e1a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50e1ae430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50e1ae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1ae780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7fa50e1abd18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7fa50e1abd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e1aa0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e1aa228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fa50e1acc98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50e1acc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e1ab020"/>
        <function-ref name="ready" scoped="" ref="0x7fa50e1ab1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e1ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fa50e1ae9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fa50e1ae9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fa50e1aed18"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50e1ad020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50e1ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fa50e1ac268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fa50e1ac268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fa50e1ac5b8"/>
        <function-ref name="suspend" scoped="" ref="0x7fa50e1ac740"/>
        <function-ref name="resume" scoped="" ref="0x7fa50e1ac8c8"/>
        <function-ref name="run" scoped="" ref="0x7fa50e1aca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f1040c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f1040c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f104410"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f104598"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f104720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f1049a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f1049a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f104cf8"/>
        <function-ref name="header" scoped="" ref="0x7fa50f104e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50f1030f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f1030f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f103440"/>
        <function-ref name="wait" scoped="" ref="0x7fa50f1035c8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f103750"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50f1038d8"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50f103a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f103ce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f103ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fa50f1020a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fa50f102228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fa50f1023b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fa50f102538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f1058c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f1058c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f105c18"/>
        <function-ref name="header" scoped="" ref="0x7fa50f105da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50f105020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f105020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f105370"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f1054f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f105680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50e173d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50e173d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e1710d8"/>
        <function-ref name="ready" scoped="" ref="0x7fa50e171260"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e1713e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50e171670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50e171670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1719c0"/>
        <function-ref name="header" scoped="" ref="0x7fa50e171b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50e171d90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50e171d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50e170170"/>
        <function-ref name="wait" scoped="" ref="0x7fa50e1702f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e170480"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50e170608"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50e170790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa50e1709d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fa50e1709d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa50e170d28"/>
        <function-ref name="rand32" scoped="" ref="0x7fa50e16f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50e16f2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50e16f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fa50e16f5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fa50e16f780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fa50e16f908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fa50e16fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50e173578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50e173578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50e1738c8"/>
        <function-ref name="header" scoped="" ref="0x7fa50e173a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50e175b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50e175b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e173020"/>
        <function-ref name="ready" scoped="" ref="0x7fa50e1731a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e173330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7fa50e16fd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7fa50e16fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e16e0d8"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e16e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa50f11b690" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fa50f11b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa50f11b9e0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa50f11bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa50f119668" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fa50f119668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f11b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50f11f930" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50f11f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f11fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa50f1154c8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fa50f1154c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa50f115818"/>
        <function-ref name="rand32" scoped="" ref="0x7fa50f1159a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa50f1163b0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fa50f1163b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f115020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50f11ab30" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50f11ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50f11ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f0d4d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f0d4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0d20d8"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f0d2260"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0d23e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f0d2670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0d29c0"/>
        <function-ref name="header" scoped="" ref="0x7fa50f0d2b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50f0d2d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50f0d2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50f0d1170"/>
        <function-ref name="wait" scoped="" ref="0x7fa50f0d12f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f0d1480"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50f0d1608"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50f0d1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7fa50f0d0bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fa50f0d0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0cf020"/>
        <function-ref name="get" scoped="" ref="0x7fa50f0cf1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50f0cf330"/>
        <function-ref name="set" scoped="" ref="0x7fa50f0cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f0d1a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f0d1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fa50f0d1d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fa50f0d0020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fa50f0d01a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fa50f0d0330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fa50f0d04b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fa50f0d0640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fa50f0d07c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fa50f0d0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f0fcb50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f0fcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0d4020"/>
        <function-ref name="header" scoped="" ref="0x7fa50f0d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50f0fc2a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f0fc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0fc5f8"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f0fc780"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0fc908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa50f0d43f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa50f0d43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50f0d4740"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50f0d48c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50f0d4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f0b7978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f0b7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f0b7cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f0b7e50"/>
        <function-ref name="start" scoped="" ref="0x7fa50f0b6020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f0b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fa50f0b2020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f0b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50f0b2370"/>
        <function-ref name="request" scoped="" ref="0x7fa50f0b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f0ae5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f0ae5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0ae908"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f0aea90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0aec18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f0ad020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0ad370"/>
        <function-ref name="header" scoped="" ref="0x7fa50f0ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fa50f0b4268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50f0b4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f0b45b8"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f0b4740"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f0b48c8"/>
        <function-ref name="done" scoped="" ref="0x7fa50f0b4a50"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f0b4bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f0b4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f0b2740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f0b2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0b2a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f0b2c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f0b2da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f0b1020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f0b11a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f0b1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fa50f0af638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fa50f0af638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f0afa88"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f0afc10"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f0afd98"/>
        <function-ref name="done" scoped="" ref="0x7fa50f0ae020"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f0ae1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f0ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fa50f0b15b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fa50f0b15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fa50f0b1908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f0b38c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f0b38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0b3c18"/>
        <function-ref name="header" scoped="" ref="0x7fa50f0b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fa50f0af060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fa50f0af060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0af3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa50f0b1bf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fa50f0b1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f0b0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f0b01a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f0b0330"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f0b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f0ab020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f0ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0ab370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f0ab4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f0ab680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f0ab808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f0ab990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f0abb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa50f0b6c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fa50f0b6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f0abda0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f0abda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fa50f0aa170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fa50f0b0740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fa50f0b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0b0a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f0b0c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50f0b3020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f0b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0b3370"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f0b34f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0b3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fa50f0ad780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fa50f0ad780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50f0adad0"/>
        <function-ref name="request" scoped="" ref="0x7fa50f0adc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa50f0b63f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fa50f0b63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f0b6740"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f0b68c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f0b6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fa50f0498c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fa50f0498c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f049c18"/>
        <function-ref name="get" scoped="" ref="0x7fa50f049da0"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50f048020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f0481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f04d9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f04d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f04dd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f04c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f04c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f04c330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f04c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f04c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f04b9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f04b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f04bd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f049020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f0491a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f049330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f0494b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f049640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fa50f050020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50f050020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f04e478"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f04eb58"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f050d70"/>
        <function-ref name="set" scoped="" ref="0x7fa50f04d278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fa50f04ca30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50f04ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f04b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa50f053270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50f053270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50f052700"/>
        <function-ref name="clear" scoped="" ref="0x7fa50f052de0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50f052020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f0514f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fa50e120e60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fa50e120e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e11f1e8"/>
        <function-ref name="get" scoped="" ref="0x7fa50e11f370"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50e11f4f8"/>
        <function-ref name="set" scoped="" ref="0x7fa50e11f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50e120080" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50e120080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e1203d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e120558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e1206e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e120868"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e1209f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e120b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50e11dac0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50e11dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e11de10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e11c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e11c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e11c330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50e11c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50e11c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fa50e124660" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fa50e124660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50e123ad0"/>
        <function-ref name="clear" scoped="" ref="0x7fa50e1221f0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50e1233f0"/>
        <function-ref name="set" scoped="" ref="0x7fa50e1228d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fa50e11fa10" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50e11fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50e11e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fa50e11eaf8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa50e11eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50e11d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa50e128958" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa50e128958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50e127e10"/>
        <function-ref name="clear" scoped="" ref="0x7fa50e125558"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50e127730"/>
        <function-ref name="set" scoped="" ref="0x7fa50e125c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa50f05adc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50f05adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510342ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa510341088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50f057968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f0250e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f0250e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f025430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f0255b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f025740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f0258c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f025a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f025bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f024020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f024020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f024370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f0244f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f024680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f024808"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f024990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f024b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7fa50f043660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7fa50f043660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0439d0"/>
        <function-ref name="get" scoped="" ref="0x7fa50f043b58"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50f043ce0"/>
        <function-ref name="set" scoped="" ref="0x7fa50f043e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa50f022b78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50f022b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f021020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f0211a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f021330"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f0214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fa50f01d3f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f01d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50f01d740"/>
        <function-ref name="request" scoped="" ref="0x7fa50f01d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa50f0198c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fa50f0198c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f019c18"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f019da0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f018020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa50f0182a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fa50f0182a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f0185f8"/>
        <function-ref name="header" scoped="" ref="0x7fa50f018780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fa50f0205b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50f0205b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f020908"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f020a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f020c18"/>
        <function-ref name="done" scoped="" ref="0x7fa50f020da0"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f01e020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f01e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f01db10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f01db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f01de60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f01c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f01c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f01c330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f01c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f01c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fa50f01aa08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fa50f01aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f01ae58"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f019020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f0191a8"/>
        <function-ref name="done" scoped="" ref="0x7fa50f019330"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f0194b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f019640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fa50f01c8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fa50f01c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fa50f01cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f01ec98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f01ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f01d020"/>
        <function-ref name="header" scoped="" ref="0x7fa50f01d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fa50f01a430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fa50f01a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f01a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa50f01b020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fa50f01b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50f01b370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50f01b4f8"/>
        <function-ref name="start" scoped="" ref="0x7fa50f01b680"/>
        <function-ref name="stop" scoped="" ref="0x7fa50f01b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fa50f0162a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fa50f0162a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0165f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f016780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f016908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f016a90"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f016c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f016da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa50f020020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fa50f020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f020370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50f015060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50f015060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fa50f0153b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fa50f01ba90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fa50f01ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f01bde0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f01a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f01a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50f01e3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f01e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f01e740"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f01e8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f01ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fa50f018a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fa50f018a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50f018d58"/>
        <function-ref name="request" scoped="" ref="0x7fa50f016020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa50f021700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fa50f021700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f021a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50f021bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f021d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fa50f00d448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fa50f00d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50f00d798"/>
        <function-ref name="request" scoped="" ref="0x7fa50f00d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fa50f0080c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50f0080c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f0076a0"/>
        <function-ref name="get" scoped="" ref="0x7fa50f007190"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f008c48"/>
        <function-ref name="set" scoped="" ref="0x7fa50f007bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fa50eff3020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fa50eff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50eff3370"/>
        <function-ref name="get" scoped="" ref="0x7fa50eff34f8"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50eff3680"/>
        <function-ref name="set" scoped="" ref="0x7fa50eff3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa50eff8730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50eff8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50eff7c58"/>
        <function-ref name="clear" scoped="" ref="0x7fa50eff5380"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50eff7578"/>
        <function-ref name="set" scoped="" ref="0x7fa50eff5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fa50f0113e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50f0113e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50f011730"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50f0118b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50f011a40"/>
        <function-ref name="done" scoped="" ref="0x7fa50f011bc8"/>
        <function-ref name="standby" scoped="" ref="0x7fa50f011d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50f00e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50eff2768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50eff2768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50eff2ab8"/>
        <function-ref name="wait" scoped="" ref="0x7fa50eff2c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50eff2dc8"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50eff1020"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50eff11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fa50f00ccd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50f00ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f00a388"/>
        <function-ref name="get" scoped="" ref="0x7fa50f00be00"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f00b8f0"/>
        <function-ref name="set" scoped="" ref="0x7fa50f00a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50f00dbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50f00dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f00c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50f00c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50f00c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50f00c4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50f00c640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50f00c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50eff95c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50eff95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50eff9a18"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50eff9ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50eff9d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fa50eff8020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fa50eff81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50f00ebf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50f00ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50f00d020"/>
        <function-ref name="header" scoped="" ref="0x7fa50f00d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50effd4b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50effd4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50effbb18"/>
        <function-ref name="fired" scoped="" ref="0x7fa50effcb90"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50effb510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50effb088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50eff9020"/>
        <function-ref name="start" scoped="" ref="0x7fa50effc230"/>
        <function-ref name="stop" scoped="" ref="0x7fa50effc708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa50f005458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa50f005458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f004a40"/>
        <function-ref name="get" scoped="" ref="0x7fa50f004530"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f004020"/>
        <function-ref name="set" scoped="" ref="0x7fa50f003020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fa50effe220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50effe220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50effeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50f00e2c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50f00e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50f00e618"/>
        <function-ref name="ready" scoped="" ref="0x7fa50f00e7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50f00e928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fa50f003860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50f003860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50f001e30"/>
        <function-ref name="get" scoped="" ref="0x7fa50f001920"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50f001410"/>
        <function-ref name="set" scoped="" ref="0x7fa50f000388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fa50eff3b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fa50eff3b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50eff2020"/>
        <function-ref name="get" scoped="" ref="0x7fa50eff21a8"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50eff2330"/>
        <function-ref name="set" scoped="" ref="0x7fa50eff24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fa50eff4378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fa50eff4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50eff46c8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eff4850"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50eff49d8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eff4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa50f0009d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50f0009d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa50f000d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fa50efe82c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fa50efe82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fa50efe8610"/>
        <function-ref name="request" scoped="" ref="0x7fa50efe8798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fa50efcabf8" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fa50efcabf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa50efce970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fa50efe3020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fa50efe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efe2608"/>
        <function-ref name="get" scoped="" ref="0x7fa50efe20f8"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50efe3ba0"/>
        <function-ref name="set" scoped="" ref="0x7fa50efe2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fa50efc7988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fa50efc7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efc7cd8"/>
        <function-ref name="get" scoped="" ref="0x7fa50efc7e60"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50efc6020"/>
        <function-ref name="set" scoped="" ref="0x7fa50efc61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fa50efebbf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa50efebbf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50efea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa50efc52b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa50efc52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa50efc4910"/>
        <function-ref name="clear" scoped="" ref="0x7fa50efc2020"/>
        <function-ref name="isValid" scoped="" ref="0x7fa50efc4230"/>
        <function-ref name="set" scoped="" ref="0x7fa50efc2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fa50efd5df0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fa50efd5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50efd1170"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50efd12f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50efd1480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50efd1608"/>
        <function-ref name="get" scoped="" ref="0x7fa50efd1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50efd1918"/>
        <function-ref name="set" scoped="" ref="0x7fa50efd1aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50efd1c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fa50efc1ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fa50efc1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa50efc1e08"/>
        <function-ref name="wait" scoped="" ref="0x7fa50efc0020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50efc01a8"/>
        <function-ref name="isFree" scoped="" ref="0x7fa50efc0330"/>
        <function-ref name="getNow" scoped="" ref="0x7fa50efc04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fa50efea2d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fa50efea2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fa50efea620"/>
        <function-ref name="turnOn" scoped="" ref="0x7fa50efea7a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa50efea930"/>
        <function-ref name="done" scoped="" ref="0x7fa50efeaab8"/>
        <function-ref name="standby" scoped="" ref="0x7fa50efeac40"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa50efeadc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fa50efcb020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50efcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50efcbba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fa50efe7b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fa50efe7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efe4190"/>
        <function-ref name="get" scoped="" ref="0x7fa50efe6c38"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50efe6728"/>
        <function-ref name="set" scoped="" ref="0x7fa50efe46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fa50efe8a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fa50efe8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efe8da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50efe7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50efe71a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50efe7330"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50efe74b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50efe7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7fa50efd6b90" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fa50efd6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50efd5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50efd51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50efd5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50efd54b8"/>
        <function-ref name="get" scoped="" ref="0x7fa50efd5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50efd57c8"/>
        <function-ref name="set" scoped="" ref="0x7fa50efd5950"/>
        <function-ref name="clr" scoped="" ref="0x7fa50efd5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fa50efc8100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fa50efc8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50efc8450"/>
        <function-ref name="headerLength" scoped="" ref="0x7fa50efc85d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fa50efc8760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fa50efc88e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fa50efc8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fa50efe99e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fa50efe99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50efe9d38"/>
        <function-ref name="header" scoped="" ref="0x7fa50efe8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7fa50ef33368" loc="861:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7fa50ef33368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50ef336b8"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50ef33840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa50efe03b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa50efe03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efdfa40"/>
        <function-ref name="get" scoped="" ref="0x7fa50efdf530"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50efdf020"/>
        <function-ref name="set" scoped="" ref="0x7fa50efdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fa50efeb138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fa50efeb138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fa5103e9b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50efeb488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa50efd84f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fa50efd84f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50efd8848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50efd89d0"/>
        <function-ref name="request" scoped="" ref="0x7fa50efd8b58"/>
        <function-ref name="granted" scoped="" ref="0x7fa50efd8ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50efd8e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7fa50efd9130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fa50efd9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50efd9580"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50efd9708"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50efd9890"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50efd9a18"/>
        <function-ref name="get" scoped="" ref="0x7fa50efd9ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50efd9d28"/>
        <function-ref name="set" scoped="" ref="0x7fa50efd8020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50efd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fa50efdd860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fa50efdd860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efdce30"/>
        <function-ref name="get" scoped="" ref="0x7fa50efdc920"/>
        <function-ref name="isSet" scoped="" ref="0x7fa50efdc410"/>
        <function-ref name="set" scoped="" ref="0x7fa50efdb388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fa50efe90c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fa50efe90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50efe9410"/>
        <function-ref name="ready" scoped="" ref="0x7fa50efe9598"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50efe9720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7fa50efcc590" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fa50efcc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa50efcc8e0"/>
        <function-ref name="disable" scoped="" ref="0x7fa50efcca68"/>
        <function-ref name="captured" scoped="" ref="0x7fa50efccbf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa50efccd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7fa50efd6080" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50efd6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa50efd63d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa50efd6558"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa50efd66e0"/>
        <function-ref name="write" scoped="" ref="0x7fa50efd6868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fa50efc6518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fa50efc6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efc6868"/>
        <function-ref name="get" scoped="" ref="0x7fa50efc69f0"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50efc6b78"/>
        <function-ref name="set" scoped="" ref="0x7fa50efc6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fa50efc8e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fa50efc8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50efc71a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50efc7330"/>
        <function-ref name="setValue" scoped="" ref="0x7fa50efc74b8"/>
        <function-ref name="set" scoped="" ref="0x7fa50efc7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa50efdb9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa50efdb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa50efdbd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fa50efc1020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fa50efc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fa50efc1370"/>
        <function-ref name="suspend" scoped="" ref="0x7fa50efc14f8"/>
        <function-ref name="resume" scoped="" ref="0x7fa50efc1680"/>
        <function-ref name="run" scoped="" ref="0x7fa50efc1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fa50eef0338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fa50eef0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eef0688"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eef0810"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eef0998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eef0b20"/>
        <function-ref name="get" scoped="" ref="0x7fa50eef0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eef0e30"/>
        <function-ref name="set" scoped="" ref="0x7fa50eeef020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eeef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7fa50eef1140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fa50eef1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eef1490"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eef1618"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eef17a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eef1928"/>
        <function-ref name="get" scoped="" ref="0x7fa50eef1ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eef1c38"/>
        <function-ref name="set" scoped="" ref="0x7fa50eef1dc0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eef0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50eeee2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50eeee2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50eeec928"/>
        <function-ref name="fired" scoped="" ref="0x7fa50eeed9e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50eeec320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50eeede70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50eeecdb0"/>
        <function-ref name="start" scoped="" ref="0x7fa50eeed088"/>
        <function-ref name="stop" scoped="" ref="0x7fa50eeed560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7fa50eef3990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fa50eef3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50eef3ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50eef3e68"/>
        <function-ref name="request" scoped="" ref="0x7fa50eef2020"/>
        <function-ref name="granted" scoped="" ref="0x7fa50eef21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50eef2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7fa50eef6710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fa50eef6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eef6a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eef6be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eef6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eef3020"/>
        <function-ref name="get" scoped="" ref="0x7fa50eef31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eef3330"/>
        <function-ref name="set" scoped="" ref="0x7fa50eef34b8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eef3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fa50eeef4c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fa50eeef4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa50eeef810"/>
        <function-ref name="disable" scoped="" ref="0x7fa50eeef998"/>
        <function-ref name="captured" scoped="" ref="0x7fa50eeefb20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa50eeefca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa50eef25e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eef25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa50eef2938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa50eef2ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa50eef2c48"/>
        <function-ref name="write" scoped="" ref="0x7fa50eef2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fa50eeea438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fa50eeea438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TRadio" ref="0x7fa50f637d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50eee9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7fa50eedac18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7fa50eedac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eed9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eed91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eed9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eed94b8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eed9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eed97c8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eed9950"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eed9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7fa50eedc540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fa50eedc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fa50eeda6f8"/>
        <function-ref name="test" scoped="" ref="0x7fa50eee3db8"/>
        <function-ref name="get" scoped="" ref="0x7fa50eee40f8"/>
        <function-ref name="captured" scoped="" ref="0x7fa50eee4a58"/>
        <function-ref name="reset" scoped="" ref="0x7fa50eee3020"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50eeda270"/>
        <function-ref name="set" scoped="" ref="0x7fa50eee4580"/>
        <function-ref name="start" scoped="" ref="0x7fa50eee34a8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50eee3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7fa50eed9e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7fa50eed9e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50eed81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50eed8330"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50eed84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50eed8640"/>
        <function-ref name="get" scoped="" ref="0x7fa50eed87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50eed8950"/>
        <function-ref name="set" scoped="" ref="0x7fa50eed8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50eed8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fa50eee6870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fa50eee6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50eee6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fa50eee9cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fa50eee9cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa50eee60a0"/>
        <function-ref name="disable" scoped="" ref="0x7fa50eee6228"/>
        <function-ref name="captured" scoped="" ref="0x7fa50eee63b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa50eee6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa50eebd1d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fa50eebd1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50eebd528"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50eebd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa50eec6388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fa50eec6388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa50eec66d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50eee7cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50eee7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50eeca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa50eec69d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eec69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa50eec6d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa50eec9020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa50eec91a8"/>
        <function-ref name="write" scoped="" ref="0x7fa50eec9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50eebde80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50eebde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50eec81f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50eec8380"/>
        <function-ref name="request" scoped="" ref="0x7fa50eec8508"/>
        <function-ref name="granted" scoped="" ref="0x7fa50eec8690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50eec8818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa50eeb9de0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50eeb9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50eeb8170"/>
        <function-ref name="configure" scoped="" ref="0x7fa50eeb82f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fa50ee7c020" loc="294:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fa50ee7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50ee7c370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50ee7c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa50eeb9120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fa50eeb9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50eeb9470"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50eeb95f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa50eebb020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fa50eebb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa50eebb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50eec4a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50eec4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50eec4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fa50ee9ec78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fa50ee9ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fa50eeb7020"/>
        <function-ref name="sleep" scoped="" ref="0x7fa50ee9d4b8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fa50eeb7330"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50ee9d640"/>
        <function-ref name="initMaster" scoped="" ref="0x7fa50eeb7640"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fa50eeb77c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50eeb7950"/>
        <function-ref name="read" scoped="" ref="0x7fa50eeb7ad8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fa50eeb7c60"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50eeb7de8"/>
        <function-ref name="setClock" scoped="" ref="0x7fa50eeb6020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50eeb61a8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fa50eeb6330"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fa50eeb65b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fa50eeb6740"/>
        <function-ref name="write" scoped="" ref="0x7fa50eeb68c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa50eeb6a50"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fa50eeb6bd8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fa50eeb6d60"/>
        <function-ref name="getClock" scoped="" ref="0x7fa50ee9d020"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50ee9d1a8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fa50eeb71a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fa50eeb74b8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fa50ee9d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa50eebb628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa50eebb628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa50eebb978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa50eebbb00"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa50eebbc88"/>
        <function-ref name="write" scoped="" ref="0x7fa50eebbe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fa50ee9d910" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fa50ee9d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa50ee9dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fa50ee60a20" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fa50ee60a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fa50ee60d70"/>
        <function-ref name="sleep" scoped="" ref="0x7fa50ee5b330"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fa50ee5d1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50ee5b4b8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fa50ee5d4b8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fa50ee5d640"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50ee5d7c8"/>
        <function-ref name="read" scoped="" ref="0x7fa50ee5d950"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fa50ee5dad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50ee5dc60"/>
        <function-ref name="setClock" scoped="" ref="0x7fa50ee5dde8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50ee5c020"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fa50ee5c1a8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fa50ee5c430"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fa50ee5c5b8"/>
        <function-ref name="write" scoped="" ref="0x7fa50ee5c740"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa50ee5c8c8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fa50ee5ca50"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fa50ee5cbd8"/>
        <function-ref name="getClock" scoped="" ref="0x7fa50ee5cd60"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50ee5b020"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fa50ee5d020"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fa50ee5d330"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fa50ee5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fa50ee514c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fa50ee514c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ee51810"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ee51998"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ee51b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ee51ca8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ee51e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ee50020"/>
        <function-ref name="set" scoped="" ref="0x7fa50ee501a8"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ee50330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fa50ee53180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fa50ee53180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ee534d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ee53658"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ee537e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ee53968"/>
        <function-ref name="get" scoped="" ref="0x7fa50ee53af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ee53c78"/>
        <function-ref name="set" scoped="" ref="0x7fa50ee53e00"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ee52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fa50ee54020" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fa50ee54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ee54370"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ee544f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ee54680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ee54808"/>
        <function-ref name="get" scoped="" ref="0x7fa50ee54990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ee54b18"/>
        <function-ref name="set" scoped="" ref="0x7fa50ee54ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ee54e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa50ee55650" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa50ee55650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa50ee559a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ee55b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fa50ee50660" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fa50ee50660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa50ee509b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fa50ee5a8d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fa50ee5a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fa50ee5ac28"/>
        <function-ref name="sleep" scoped="" ref="0x7fa50ee551a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fa50ee57020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fa50ee55330"/>
        <function-ref name="initMaster" scoped="" ref="0x7fa50ee57330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fa50ee574b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fa50ee57640"/>
        <function-ref name="read" scoped="" ref="0x7fa50ee577c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fa50ee57950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fa50ee57ad8"/>
        <function-ref name="setClock" scoped="" ref="0x7fa50ee57c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa50ee57de8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fa50ee56020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fa50ee562a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fa50ee56430"/>
        <function-ref name="write" scoped="" ref="0x7fa50ee565b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa50ee56740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fa50ee568c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fa50ee56a50"/>
        <function-ref name="getClock" scoped="" ref="0x7fa50ee56bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fa50ee56d60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fa50ee5adb0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fa50ee571a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fa50ee55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fa50ee52338" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fa50ee52338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa50ee52688"/>
        <function-ref name="isInput" scoped="" ref="0x7fa50ee52810"/>
        <function-ref name="toggle" scoped="" ref="0x7fa50ee52998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa50ee52b20"/>
        <function-ref name="get" scoped="" ref="0x7fa50ee52ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa50ee52e30"/>
        <function-ref name="set" scoped="" ref="0x7fa50ee51020"/>
        <function-ref name="clr" scoped="" ref="0x7fa50ee511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50ee08510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50ee08510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50ee08880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50ee08a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50ee06550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50ee06550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50ee068c0"/>
        <function-ref name="configure" scoped="" ref="0x7fa50ee06a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50ee09748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50ee09748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50ee09ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50ee09c40"/>
        <function-ref name="request" scoped="" ref="0x7fa50ee09dc8"/>
        <function-ref name="granted" scoped="" ref="0x7fa50ee08020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50ee081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50ee08c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50ee08c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50ee06020"/>
        <function-ref name="userId" scoped="" ref="0x7fa50ee061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50e0d4020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50e0d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50e0d4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa50e0d45f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa50e0d45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e0d4948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e0d4ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e0d4c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e0d4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa50e0d10c8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa50e0d10c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa50e0d1438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa50e0d15c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa50e0cf100" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa50e0cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa50e0cf470"/>
        <function-ref name="configure" scoped="" ref="0x7fa50e0cf5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa50e0cf880" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fa50e0cf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa50e0cfbd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa50e0cfd58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa50e0ce020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa50e0ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa50e0d2390" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fa50e0d2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa50e0d2700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa50e0d2888"/>
        <function-ref name="request" scoped="" ref="0x7fa50e0d2a10"/>
        <function-ref name="granted" scoped="" ref="0x7fa50e0d2b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa50e0d2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa50e0d1808" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa50e0d1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa50e0d1b58"/>
        <function-ref name="userId" scoped="" ref="0x7fa50e0d1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa50e0ce470" loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fa50e0ce470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50e0ce7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50e0ce948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fa50edef910" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50edef910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fa50edefc60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fa50edefde8"/>
        <function-ref name="getControlA" scoped="" ref="0x7fa50edf7020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fa50edf71a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fa50edf7330"/>
        <function-ref name="setControlB" scoped="" ref="0x7fa50edf74b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fa50edf7640"/>
        <function-ref name="getControlB" scoped="" ref="0x7fa50edf77c8"/>
        <function-ref name="setControlC" scoped="" ref="0x7fa50edf7950"/>
        <function-ref name="setControlA" scoped="" ref="0x7fa50edf7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa50edf6020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fa50edf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fa50edeb270"/>
        <function-ref name="test" scoped="" ref="0x7fa50edec930"/>
        <function-ref name="get" scoped="" ref="0x7fa50edf6ba0"/>
        <function-ref name="captured" scoped="" ref="0x7fa50edee560"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edeea38"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edecdb8"/>
        <function-ref name="set" scoped="" ref="0x7fa50edee088"/>
        <function-ref name="start" scoped="" ref="0x7fa50edec020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50edec4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa50edebe18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fa50edebe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50ede7798"/>
        <function-ref name="fired" scoped="" ref="0x7fa50ede94f8"/>
        <function-ref name="get" scoped="" ref="0x7fa50edeaa18"/>
        <function-ref name="reset" scoped="" ref="0x7fa50ede9980"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50ede7c20"/>
        <function-ref name="set" scoped="" ref="0x7fa50ede9020"/>
        <function-ref name="start" scoped="" ref="0x7fa50ede9e08"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ede7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50ee00d00" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50ee00d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50edfae20"/>
        <function-ref name="test" scoped="" ref="0x7fa50edfa510"/>
        <function-ref name="get" scoped="" ref="0x7fa50edfd8f0"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50edf9310"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50edf97e8"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edfb738"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50edfb2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edfa998"/>
        <function-ref name="set" scoped="" ref="0x7fa50edfdd78"/>
        <function-ref name="start" scoped="" ref="0x7fa50edfbbc0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50edfa088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fa50eddd160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fa50eddd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fa50eddd4b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fa50eddd638"/>
        <function-ref name="getControlA" scoped="" ref="0x7fa50eddd7c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fa50eddd948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fa50edddad0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fa50edddc58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fa50edddde0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fa50eddc020"/>
        <function-ref name="setControlC" scoped="" ref="0x7fa50eddc1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7fa50eddc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fa50edd7020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fa50edd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50edd57a8"/>
        <function-ref name="fired" scoped="" ref="0x7fa50edd6560"/>
        <function-ref name="get" scoped="" ref="0x7fa50edd7ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edd69e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edd5c30"/>
        <function-ref name="set" scoped="" ref="0x7fa50edd6088"/>
        <function-ref name="start" scoped="" ref="0x7fa50edd6e70"/>
        <function-ref name="stop" scoped="" ref="0x7fa50edd5320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa50eddc808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fa50eddc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fa50edd8930"/>
        <function-ref name="test" scoped="" ref="0x7fa50edd8020"/>
        <function-ref name="get" scoped="" ref="0x7fa50eddb3c8"/>
        <function-ref name="captured" scoped="" ref="0x7fa50eddbd28"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edda238"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edd84a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50eddb850"/>
        <function-ref name="start" scoped="" ref="0x7fa50edda6c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50eddab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fa50edd3360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fa50edd3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50edd1c20"/>
        <function-ref name="fired" scoped="" ref="0x7fa50edd2980"/>
        <function-ref name="get" scoped="" ref="0x7fa50edd2020"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edd2e08"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edcf0f8"/>
        <function-ref name="set" scoped="" ref="0x7fa50edd24a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50edd1310"/>
        <function-ref name="stop" scoped="" ref="0x7fa50edd1798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fa50edcf770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fa50edcf770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50edcc020"/>
        <function-ref name="fired" scoped="" ref="0x7fa50edced08"/>
        <function-ref name="get" scoped="" ref="0x7fa50edce3a8"/>
        <function-ref name="reset" scoped="" ref="0x7fa50edcd1f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50edcc4a8"/>
        <function-ref name="set" scoped="" ref="0x7fa50edce830"/>
        <function-ref name="start" scoped="" ref="0x7fa50edcd680"/>
        <function-ref name="stop" scoped="" ref="0x7fa50edcdb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa50ede2180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50ede2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50eddf270"/>
        <function-ref name="test" scoped="" ref="0x7fa50ede0930"/>
        <function-ref name="get" scoped="" ref="0x7fa50ede2d00"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50eddf6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50eddfbd0"/>
        <function-ref name="reset" scoped="" ref="0x7fa50ede1b58"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ede16d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50ede0db8"/>
        <function-ref name="set" scoped="" ref="0x7fa50ede11f8"/>
        <function-ref name="start" scoped="" ref="0x7fa50ede0020"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ede04a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50ed07578" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50ed07578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50ed05c88"/>
        <function-ref name="fired" scoped="" ref="0x7fa50ed06d08"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50ed05680"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50ed051f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50ed03150"/>
        <function-ref name="start" scoped="" ref="0x7fa50ed063a8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ed06880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa50ed4e4e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fa50ed4e4e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fa5103e97c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fa5103e97c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa50ed4e838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50ed4ec08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50ed4ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50ed3fdb8"/>
        <function-ref name="test" scoped="" ref="0x7fa50ed3f4a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ed41820"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50ed3d270"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50ed3d748"/>
        <function-ref name="reset" scoped="" ref="0x7fa50ed40658"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ed401d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50ed3f930"/>
        <function-ref name="set" scoped="" ref="0x7fa50ed41ca8"/>
        <function-ref name="start" scoped="" ref="0x7fa50ed40ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ed3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa50e0a65c8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fa50e0a65c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fa5103e9460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fa5103e9460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa50e0a4c88"/>
        <function-ref name="fired" scoped="" ref="0x7fa50e0a5d08"/>
        <function-ref name="startAt" scoped="" ref="0x7fa50e0a4680"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa50e0a41f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa50e0a2150"/>
        <function-ref name="start" scoped="" ref="0x7fa50e0a53a8"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e0a5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fa50e09d650" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fa50e09d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fa50e09be20"/>
        <function-ref name="fired" scoped="" ref="0x7fa50e09cb80"/>
        <function-ref name="get" scoped="" ref="0x7fa50e09c220"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e09b088"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50e09a310"/>
        <function-ref name="set" scoped="" ref="0x7fa50e09c6a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50e09b510"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e09b998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fa50e0a2670" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fa50e0a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50e09f798"/>
        <function-ref name="test" scoped="" ref="0x7fa50e0a0e20"/>
        <function-ref name="get" scoped="" ref="0x7fa50e0a1220"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50e09fc20"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50e09d130"/>
        <function-ref name="reset" scoped="" ref="0x7fa50e0a0088"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50e0a1b80"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50e09f310"/>
        <function-ref name="set" scoped="" ref="0x7fa50e0a16a8"/>
        <function-ref name="start" scoped="" ref="0x7fa50e0a0510"/>
        <function-ref name="stop" scoped="" ref="0x7fa50e0a0998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa50ed02e68" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50ed02e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecffa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa50ecfeb18" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50ecfeb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecfb8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50ecfa230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50ecfbd80"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ecfa6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa50ecf7b90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50ecf7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TOne" ref="0x7fa5102ff698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ece5930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50ece4270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50ece5db8"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ece46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa50ece4c58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fa50ece4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fa50ece0db8"/>
        <function-ref name="test" scoped="" ref="0x7fa50ece04a8"/>
        <function-ref name="get" scoped="" ref="0x7fa50ece3820"/>
        <function-ref name="setScale" scoped="" ref="0x7fa50ecdf270"/>
        <function-ref name="getScale" scoped="" ref="0x7fa50ecdf748"/>
        <function-ref name="reset" scoped="" ref="0x7fa50ece1658"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ece11d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fa50ece0930"/>
        <function-ref name="set" scoped="" ref="0x7fa50ece3ca8"/>
        <function-ref name="start" scoped="" ref="0x7fa50ece1ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ece0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa50ecbf2b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fa50ecbf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecbd088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50ecbd998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50ecbd510"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ecbde20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa50ecc10e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50ecc10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecc1e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50ecc0798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50ecc0310"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ecc0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa50ecbb988" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fa50ecbb988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecba560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa50ecbab88" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fa50ecbab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa50ecb8930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa50ecb7270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa50ecb8db8"/>
        <function-ref name="overflow" scoped="" ref="0x7fa50ecb76f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fa50ecaf268" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fa50ecaf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa510340078"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa5103403d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa50ecad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50ebd0390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50ebd0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50ebd06e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebd0868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebd09f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50ebd0b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50ebd0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50ebcf020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50ebcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50ebcf370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50ebcf4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebcf680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebcf808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50ebcf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50ebcfbd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebcfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50ebce020"/>
        <function-ref name="source" scoped="" ref="0x7fa50ebce1a8"/>
        <function-ref name="address" scoped="" ref="0x7fa50ebce330"/>
        <function-ref name="destination" scoped="" ref="0x7fa50ebce4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50ebce640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50ebce7c8"/>
        <function-ref name="type" scoped="" ref="0x7fa50ebce950"/>
        <function-ref name="setType" scoped="" ref="0x7fa50ebcead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50ebcec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50ebcede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50ebcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa50ebcd2a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fa50ebcd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50ebcd5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50ebcd780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50ebcd908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50e06c100" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50e06c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e06c450"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e06c5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e06c760"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e06c8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e06ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50e06ccb8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50e06ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50e06b0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50e06b228"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e06b3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e06b538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50e06b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50e06b908" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50e06b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50e06bc58"/>
        <function-ref name="source" scoped="" ref="0x7fa50e06bde0"/>
        <function-ref name="address" scoped="" ref="0x7fa50e06a020"/>
        <function-ref name="destination" scoped="" ref="0x7fa50e06a1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50e06a330"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50e06a4b8"/>
        <function-ref name="type" scoped="" ref="0x7fa50e06a640"/>
        <function-ref name="setType" scoped="" ref="0x7fa50e06a7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50e06a950"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50e06aad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50e06ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa50e069020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fa50e069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa50e069370"/>
        <function-ref name="noAck" scoped="" ref="0x7fa50e0694f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa50e069680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa50e060378" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50e060378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e0606c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e060850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e0609d8"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e060b60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e060ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fa50e05f020" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50e05f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50e05f370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50e05f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50e05f680"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50e05f808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50e05f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa50e05fbd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50e05fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50e05e020"/>
        <function-ref name="source" scoped="" ref="0x7fa50e05e1a8"/>
        <function-ref name="address" scoped="" ref="0x7fa50e05e330"/>
        <function-ref name="destination" scoped="" ref="0x7fa50e05e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50e05e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50e05e7c8"/>
        <function-ref name="type" scoped="" ref="0x7fa50e05e950"/>
        <function-ref name="setType" scoped="" ref="0x7fa50e05ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50e05ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50e05ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50e05d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50ec2b020" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50ec2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50ec2b370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ec2b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ec2b680"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50ec2b808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50ec2b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa50ebe3060" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50ebe3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50ebe33d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebe3558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebe36e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50ebe3868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50ebe39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa50ebe42c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fa50ebe42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50ebe4638"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebe47c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebe4948"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50ebe4ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50ebe4c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa50ebe1268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50ebe1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50ebe15b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50ebe1740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebe18c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebe1a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50ebe1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fa50ebe0020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fa50ebe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50ebe0370"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50ebe04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fa50ebe07c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fa50ebe07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa50ebe0b10"/>
        <function-ref name="runTask" scoped="" ref="0x7fa50ebe0c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa50ebe3c38" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebe3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50ebe2020"/>
        <function-ref name="source" scoped="" ref="0x7fa50ebe21a8"/>
        <function-ref name="address" scoped="" ref="0x7fa50ebe2330"/>
        <function-ref name="destination" scoped="" ref="0x7fa50ebe24b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50ebe2640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50ebe27c8"/>
        <function-ref name="type" scoped="" ref="0x7fa50ebe2950"/>
        <function-ref name="setType" scoped="" ref="0x7fa50ebe2ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50ebe2c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50ebe2de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50ebe1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa50ebc6328" loc="39:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fa50ebc6328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa50ebc6678"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa50ebc6800"/>
        <function-ref name="start" scoped="" ref="0x7fa50ebc6988"/>
        <function-ref name="stop" scoped="" ref="0x7fa50ebc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fa50ebc8718" loc="37:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fa50ebc8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa50ebc8a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa50ebb70c0" loc="54:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50ebb70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50ebb7410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50ebb7598"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebb7720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebb78a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50ebb7a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa50ebba5f8" loc="47:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fa50ebba5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa50ebba948"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50ebbaad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50ebbac58"/>
        <function-ref name="cancel" scoped="" ref="0x7fa50ebbade0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa50ebb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7fa50ebbf020" loc="44:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7fa50ebbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebbfb68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x7fa50ebc5020" loc="40:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7fa50ebc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebc5b68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InfraredLight" ref="0x7fa50ebbc020" loc="46:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7fa50ebbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebbcb68"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fa50ebb8910" loc="51:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50ebb8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50ebb8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa50ebc8d20" loc="38:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fa50ebc8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa50ebc70a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa50ebc7228"/>
        <function-ref name="led1On" scoped="" ref="0x7fa50ebc73b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa50ebc7538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa50ebc76c0"/>
        <function-ref name="get" scoped="" ref="0x7fa50ebc7848"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa50ebc79d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa50ebc6020"/>
        <function-ref name="set" scoped="" ref="0x7fa50ebc7b58"/>
        <function-ref name="led0On" scoped="" ref="0x7fa50ebc7ce0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa50ebc7e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VisibleLight" ref="0x7fa50ebbe7f8" loc="45:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7fa50ebbe7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebbd370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebbd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7fa50ebc27c0" loc="43:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7fa50ebc27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebc1370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebc17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa50ebb9300" loc="50:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50ebb9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50ebb9650"/>
        <function-ref name="source" scoped="" ref="0x7fa50ebb97d8"/>
        <function-ref name="address" scoped="" ref="0x7fa50ebb9960"/>
        <function-ref name="destination" scoped="" ref="0x7fa50ebb9ae8"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50ebb9c70"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50ebb9df8"/>
        <function-ref name="type" scoped="" ref="0x7fa50ebb8020"/>
        <function-ref name="setType" scoped="" ref="0x7fa50ebb81a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50ebb8330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50ebb84b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50ebb8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Axis" ref="0x7fa50ebc47c8" loc="41:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7fa50ebc47c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebc3370"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebc37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Intersema" ref="0x7fa50ebc3db8" loc="42:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7fa50ebc3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa50ebc2170"/>
        <function-ref name="readDone" scoped="" ref="0x7fa50ebc22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa50eb83268" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="Mts400TesterC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fa50eb83268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa50eb835b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa50eb83740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa50eb838c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa50eb83a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa50eb83bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa50eb89c88" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="Mts400TesterC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fa50eb89c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa50eb83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa50eb83e20" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="Mts400TesterC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fa50eb83e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa50eb821a8"/>
        <function-ref name="source" scoped="" ref="0x7fa50eb82330"/>
        <function-ref name="address" scoped="" ref="0x7fa50eb824b8"/>
        <function-ref name="destination" scoped="" ref="0x7fa50eb82640"/>
        <function-ref name="setSource" scoped="" ref="0x7fa50eb827c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa50eb82950"/>
        <function-ref name="type" scoped="" ref="0x7fa50eb82ad8"/>
        <function-ref name="setType" scoped="" ref="0x7fa50eb82c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa50eb82de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa50eb81020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa50eb811a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa5102b7bf0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fa5102b87b0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fa5102aab30" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fa5102aa8c0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fa5102af328" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fa5102afd20" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fa5102afab0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fa5102ad7d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fa5102ad560" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fa5102aa070" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fa510299ab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fa5102981d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fa51029bd20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fa510297020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa510299400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fa510298890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa51029b020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fa51029b690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa510d72840" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fa5103c37c0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fa5103c3020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fa5103bb290" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fa5103bba80" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fa5102f8b18" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fa5102d81d8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fa51036a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fa5102dcd10" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fa5100ee020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fa5100ee758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fa5100ec020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fa5100ece70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fa5100ea480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa5100eac18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fa5100ec738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa5100e9768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fa5100e94f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fa5100ef7e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fa5100eb608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fa5100ebd20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fa5100b8020" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa5100b8020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fa5100b8858" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa5100b75a0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa5100b8020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa5100b7020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa5100b7320" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa5100b8020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa5100aab90" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fa5100abc90" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fa5100ab3a0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa5100aa460" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa5100a9848" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7fa510073448" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fa510077440" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa510078758" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fa510078ab0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fa510078e18" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fa5100771a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa510076c80" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa510076408" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa510077e48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fa510076188" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fa5100494e8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa510049278" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fa510048a40" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa5100487d0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa51004a8b0" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa510049cd0" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Channel" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <short>&#10; Open or close a channel and retrieve the open status of the channel.</short>
        <long>&#10; Open or close a channel and retrieve the open status of the channel.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <function command="" provided="0" name="open" ref="0x7fa5100461d8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Open the channel.</short>
          <long>&#10; Open the channel.&#10; &#10; @return SUCCESS if the openDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOpen" ref="0x7fa510044070" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Determine if the channel is open.</short>
          <long>&#10; Determine if the channel is open.&#10; &#10; @return TRUE if the channel is open, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="openDone" ref="0x7fa5100449e0" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been opened.</short>
          <long>&#10; Notify the caller that the channel has been opened.&#10; &#10; @param error SUCCESS if the channel was opened without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa510044770" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeDone" ref="0x7fa5100433b0" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been closed.</short>
          <long>&#10; Notify the caller that the channel has been closed.&#10; &#10; @param error SUCCESS if the channel was closed without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa510043140" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7fa510046900" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Close the channel.</short>
          <long>&#10; Close the channel.&#10; &#10; @return SUCCESS if the closeDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fa51001cc90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa510019580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fa51000f8c0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fa51000f110" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa510016a78" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fa510015a70" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa510016258" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa5100152a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa510014360" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fa510011020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fa510011810" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fa510006620" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa510010818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa5100063b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa510010818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fa510008688" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fa510007290" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa510010818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa510007020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa510010818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa510007b30" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fa510010818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fa50ff1d710" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa50ff171d8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50ff17978" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7fa50fec0208" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fa50fec0208"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fa50febf700" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fa50fec1250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fa50fec0a88" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fa50fec1250"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa50fec0db8" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fa50febf108" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa50febf460" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fa50feb8c78" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50feb8020" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa50feb8350" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fa50feb8680" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa50feb89d8" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa50febe448" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fa50fec1250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fa50febc7b0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fa50fec1250"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa50febcae0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fa50febce10" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa50febe1a8" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa50feba0d8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50febb420" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa50febb750" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fa50febba80" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa50febbdd8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa50fe33110" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50fe338e8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fa50fe19960" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fa50fdd8db8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fa50fdd74c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fa50fdd64c8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fa50fdd6258" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fa50fdd86f8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fa50fdd3b68" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fa50fdce700" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fa50fdd24d8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fa50fdd2268" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fa50fdcde18" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fa50fdda8f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fa50fdda680" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fa50fdd34a0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fa50fdd3230" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fa50fdd2d10" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fa50fdd6ba0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fa50fdd1c50" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fa50fdd7ba8" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fa50fdce020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fa50fdcfd00" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa50fdcd750" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50fdcd4e0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fa50fdd14f8" loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fa50fdd8020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fa50fdd54b0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fa50fdd5240" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fa50fdcf6c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fa50fdcf450" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fa50fdcee28" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fa50fdd5b78" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa50fcdbe70" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa50fcdb720" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fa50fcdb020" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fa50fcdc648" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa50fcba020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa50fcb9a48" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa50fcbc8d0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fa50fcb9290" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fa50fcb9020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fa50fcbc1d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fa50fcba760" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa50fcac4e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fa50fc1e138" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa50fc1f420" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fa50fc1f778" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fa50fc1fae0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fa50fc1fe30" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa50fc1dda8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50fc1ed00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fa50fc1d060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fa50fc1d398" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fa50fc1d748" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fa50fc1daf8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fa50fc0c0d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fa50fc14258" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa51034c020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7fa51034c4d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fa50fc0a338" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fa50fc0a0c8" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fa50fc0c918" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fa50fc11d68" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fa50fc14c30" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa51034c020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fa51034c4d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fa50fc149c0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa51034c020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7fa51034c4d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fa50fc10bc0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fa50fc0b870" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50fc0aad0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fa50fc10480" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fa50fc0fa80" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fa50fc0f360" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fa50fc0d1d8" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fa50fc0b0d8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fa50fc12e30" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa510346a18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fa510345178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fa50fc12bc0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa510346a18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fa510345178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fa50fc0d990" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fa50fc12440" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa510346a18"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fa510345178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fa50fc11608" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa50fc08640" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50fc083d0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intersema" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa50fb4cde0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa50fb48a98" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x7fa510ce2690"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50fb48490" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="mesResult" ref="0x7fa50fb48818" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x7fa510ce2690"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Calibration" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
      <function command="" provided="0" name="getData" ref="0x7fa50fb40650" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa50fb3d348" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50fb40cb0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="calibration" ref="0x7fa50fb3d0c8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50fb017e0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50fb017e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa50faf8110" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa50fafdc88" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fa50fafb898" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa50fafb300" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa50fafb618" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fa50fafcb78" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fa50faf7070" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fa50faf8830" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa50fafc3e0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fa50fafe338" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa50fafe0c8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fa50faf97c8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa50faf9230" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa50faf9548" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fa50fafed78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa50fafeb08" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50fafd600" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50fa39340" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50fa39340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa50fa39bd0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50fa2a7b0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50fa2a7b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa50fa2a9e0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa2a9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa50fa272a8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa2a9e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa50fa26328" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa50fa27ac0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa50fa26a18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50fa32548" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50fa32548"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa50fa32778" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa50fa2d020" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa50fa301d8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fa50fa2f6a8" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa50fa2f108" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fa50fa2f428" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa50fa30920" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fa50fa2d7a0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa50fa31290" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa50fa31020" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50fa32778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50fa31a60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fa50f9f9290" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fa50f9fb178" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fa50f9fd020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fa50f9fbae8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fa50f9fb878" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fa50f9fc9d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa50f9fc760" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fa50f9f9c08" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fa50f9f9998" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fa50f9fd750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fa50f9fc0a8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa50f9fde08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fa50f9e97f0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fa50f9ec800" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fa50f9ea020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fa50f9ea7f0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fa50f9e8020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fa50f9e9020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fa50f9ed650" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fa510326358"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fa510326760"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fa50f9ec030" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fa510326358"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fa510326760"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fa50f9edd98" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fa510326358"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fa510326760"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fa50f9fe6a0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f9fe6a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fa50f9f3e20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa50f9f50d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50f9f6020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f9fe6a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fa50f9f57e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fa50f9f25c0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50f9f6968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f9fe6a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fa50f9f66f8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f9fe6a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa50f9f3020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50f9f3708" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fa50fa0d678" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50fa0d678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fa50fa06cf0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fa50fa07e20" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50fa0a020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50fa0d678"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fa50fa05690" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fa50fa05420" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fa50fa05e10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fa50fa097f8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa50fa090d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fa50fa065c8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50fa0a958" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50fa0d678"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fa50fa0a6e8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fa50fa0d678"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa50fa07020" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50fa07708" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fa50f87a8b0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fa50f865d28" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa50f865788" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa50f865aa8" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fa50f864520" loc="92:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fa50f865020" loc="76:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fa50f867a58" loc="61:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fa50f862ce8" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fa50f862a78" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fa50f86b830" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fa50f861768" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa50f8614f8" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fa50f8622e0" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa50f864cf0" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa50f862060" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fa50f867290" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa50f867020" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fa50f8667e8" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa50f866248" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa50f866568" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fa50f5f8880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fa50f5f82a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa50f5f8600" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa50f5f7838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5f75c8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fa50f5f4830" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5f45c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa50f5f1948" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5f1380" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f5f1690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50f5f0ab8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fa50f5f2bd0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5f2640" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f5f2950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7fa50f606398" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa50f608a50" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa50f608db0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f606108" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa50f602708" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f602140" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f602450" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50f6018e0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50f605670" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f605400" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50f604ab0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f604508" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa50f604830" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa50f5fda00" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
              <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5fd100" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fa50f5fd428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f5fd738" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fa50f5d5d88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5d57a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fa50f5d5b08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fa50f5d3020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5d4c48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fa50f5d5020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fa50f5d6678" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fa50f5d6408" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fa50f5db520" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5db2b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fa50f5da630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5da3c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fa50f5d9700" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5d9490" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fa50f5cc0a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5cddd0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fa50f5d0348" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5efce8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fa50f5d00c8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fa50f5cd118" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5cfe78" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fa50f5cf6b0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5cf0c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fa50f5cf430" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fa50f5cb020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5ccd30" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fa50f5e0c60" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e09f0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fa50f5ead18" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5eaaa8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fa50f5ec290" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa50f5ecce8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5eca78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa50f5e75d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e7020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f5e7358" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa50f5eb0b8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e9a98" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f5e9dd0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fa50f5e38c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e3658" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fa50f5e2b70" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e25f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fa50f5e28f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa50f6253b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa50f5e6788" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5e6518" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fa50f5e10b8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa50f5dfa80" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa50f5dfdb0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fa50f5e1e20" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7fa50f5c8a48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fa50f5c8290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa50f5c8020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fa50f5c71d8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50f5d1250" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50f5d1250"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa50f5d1480" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f5d1480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fa50f5c3290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f5d1480"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5c3020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fa50f5c2370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5c2100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fa50f5c4020" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5d1d30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50f5c05e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f5d1480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5c0020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa50f5c0360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50f5d1480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7fa50f5a9180" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fa50f5a9180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7fa50f5a6108" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5a7e18" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50f5a7690" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fa50f5a9180"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5a7420" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fa50f5a9c90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5a9a20" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50f5a6da0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fa50f5a9180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5a67d8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa50f5a6b20" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fa50f5a9180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fa50f59dbd8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f59d968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7fa50f5795f0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f579380" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fa50f57a290" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa50f57ac40" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f57a9d0" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa50f576020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f578978" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f578ce8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa50f5782e0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f579cb8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f578060" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7fa50f5752d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fa50f630198"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f575060" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7fa50f574020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fa50f630198"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f575948" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa50f575ca8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fa50f630198"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa50f576940" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5766d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fa50f574728" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fa50f630198"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa50f5832b0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa50f586830" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa50f586b90" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f583020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa50f57f708" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f57f140" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50f57f450" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50f5808f0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50f582030" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f583d90" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50f580020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f582960" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa50f582c88" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7fa50f53d920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7fa50f542808" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f542598" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7fa50f533670" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f533400" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7fa50f532ce0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f532a70" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fa50f535020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f536d38" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa50f537910" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5376a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa50f535cb0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5356f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f535a30" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa50f536618" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f536060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f536398" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fa50f532348" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f533d40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa50f5320c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7fa50f53c328" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7fa50f53cb60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7fa50f53abf0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f53a980" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7fa50f53b630" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f53b3c0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7fa50f53a108" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f53be48" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7fa50f511e60" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7fa50f511020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7fa50f513d78" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50f511758" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7fa50f513598" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7fa50f510600" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fa50f636170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7fa50f50a770" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f50a500" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fa50f50ed60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f50eaf0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50f50b328" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fa50f50db00" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f50d550" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa50f50d880" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fa50f50e290" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f50e020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fa50f50bd40" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f50bad0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50f556c90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fa50f5564e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f556278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fa50f555700" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f555490" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7fa50f554020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7fa50f554b28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5548b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7fa50f544290" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f544020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7fa50f54b788" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7fa50f54b020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50f54c8b8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f54cc18" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fa50f550cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f550a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7fa50f54f718" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f54f4a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7fa50f54d600" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50f54d020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f54d380" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7fa50f551468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fa50f5502a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f551bf8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f550020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fa50f54c118" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f54de80" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7fa50f520a28" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5207b8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7fa50f521290" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f521020" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7fa50f52c020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f52da08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7fa50f52dd28" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7fa50f529020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f52bce8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7fa50f51b748" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51b198" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f51b4c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7fa50f52b4e8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f52b278" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7fa50f520040" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f521a88" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7fa50f521d98" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7fa50f528868" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50f528288" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f5285e8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7fa50f51ca20" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51c7b0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7fa50f52ca60" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f52c7f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7fa50f525290" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f525020" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7fa50f5276e0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50f527100" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f527460" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7fa50f518d08" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fa50f630588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fa50f51a290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51a020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fa50f518578" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fa50f630198"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7fa50f51c020" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51e9d0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa50f51ed00" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7fa50f529a28" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5297b8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7fa50f523798" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5231f8" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7fa50f523518" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7fa50f51f798" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51f1f8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7fa50f51f518" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa50f5176f0" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f517480" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fa50f524020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5259f0" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fa50f525ce8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7fa50f52d290" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f52d020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fa50f51acf0" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51aa80" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7fa50f51e290" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f51e020" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7fa50f524a48" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5247d8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fa50f546020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5479f8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7fa50f547d28" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7fa50f546778" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fa50f549830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5495c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7fa50f547290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f547020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7fa50f540860" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f5405f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7fa50f54adc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f54ab50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7fa50f53f070" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7fa50f53fac0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f53f850" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7fa50f49da18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7fa50f49c328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7fa50f49cc40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7fa50f49d328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7fa50f4688c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f468658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50f464290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f464020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50f4657a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f4651f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa50f465520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fa50f467c10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
              <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f467968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fa50f4508f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fa50f44e7c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fa50f44e0d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fa50f450118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fa50f453ae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa50f625760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa50f453e20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fa50f25be70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
              <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f25bbc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7fa50f25b290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f25b020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa50f248020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f249c40" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7fa50f248790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50f252c70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f252a00" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50f2495a0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f249330" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7fa50f24f020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f250d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7fa50f24e4a8" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa50f24e238" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7fa50f24fab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f24f840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7fa50f24c020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa50f24ecb0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7fa50f2505b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa50f250340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa50f625b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7fa50f1c0748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7fa50f1bc790" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fa50f1bb290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa50f1bb020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7fa50f1bb9f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7fa50f1bc020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fa50f1ba1d8" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7fa50f1bfdf8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f1bfb88" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7fa50f1b61d8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50f1b89a0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50f1b8730" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fa50f147d18" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fa50f147580" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fa510ce16a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fa50f11c508" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa50f11c508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fa50f119020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa50f11c508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fa50f11cd40" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa50f11c508"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7fa50f0f3d70" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f0f3b00" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50f0f7dc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f0f7b50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7fa50f0f4a90" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f0f4500" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa50f0f4810" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50f0f3408" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50f0f3198" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7fa50f0c05b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa50f0c0348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fa50f0c5b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa50efcf8c8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa50efcf8c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa50efcfaf8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50efcfaf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fa50efca5c8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50efcfaf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa50efca358" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50efcfaf8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fa50efcd178" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa50efcc258" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa50efcdaa0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa50efcd830" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fa50efd0968" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fa50efd4020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50efd7ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fa50efd3290" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50efd3020" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fa50efd4820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa50efd3c30" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50efd39c0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fa50eee54d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fa50eedc020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fa50eedec98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fa50eedfe18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa50eee5d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa50eee0108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fa50eee1e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fa50eee0848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fa50eede5c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa50eee16f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fa50eee1480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa50eee54d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa50eedf020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa50eedf708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa50eec3b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa50eec3278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa50eec35d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50eec38f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50eebf020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa50eec22b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa50eec2610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50eec2930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fa510ce2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa50eec2c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fa50eec6020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fa50eecac18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fa50eeaed30" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fa50eea45c0" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fa50eea7258" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fa50eea2020" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fa50eea4cf8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fa50eeae5f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fa50eea6c78" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fa50eea6a08" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fa50eeaaa38" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fa50eeaa7c8" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fa50eeadbf0" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fa50ee9e960" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fa50ee9e6f0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fa50eea91d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fa50eea10a8" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fa50eea2dd8" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fa50eea0020" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fa50eea5e48" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fa50eea5bd8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fa50ee9e020" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fa50eea7ba8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fa50eea7938" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa50eeab578" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50eeab308" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fa50eea9ae8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fa50eea9878" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fa50eea54a8" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fa50eea2728" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fa50eea1798" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fa50eea0768" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fa50eea6328" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa5103ebcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fa50eead488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fa50eeaa020" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa50eeabc90" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7fa50edf4728" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fa50edf2a98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fa50edf57d0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fa50edf0c08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fa50edf04a8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fa50edf0238" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fa50edf39d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa50edf3760" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fa50edef5b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fa50edef348" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fa50edf4020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7fa50edf2338" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa50edf20c8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fa50edf30a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa50edf4de0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa50ec452a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50ec49c30" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50ec45020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa50ec3f5e8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50ec3f020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa50ec3f330" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa50ec40740" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa510ce2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa50ec444e8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50ec44278" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa50ec428f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa50ec42348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa50f60bd10"/>
                <typename><typedef-ref name="message_t" ref="0x7fa50f6082e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa50ec42670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa5103bfe58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
