<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="49:Mts400TesterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6f29cf1718"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6f2b35fd68"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6f2b35fd68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6f2b35ac38"/></to>
    </wire>
    <wire loc="50:Mts400TesterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6f29cf1d20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2b18c5e8"/></to>
    </wire>
    <wire loc="51:Mts400TesterC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f29ce25f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f29cf8390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f29cf8390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f291a9100"/></to>
    </wire>
    <wire loc="52:Mts400TesterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f29cef328"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a75e660"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a75e660"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6e16d8"/></to>
    </wire>
    <wire loc="53:Mts400TesterC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x7f6f29ced020"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x7f6f2ac7daa0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x7f6f2ac7daa0"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x7f6f299a1020"/></to>
    </wire>
    <wire loc="54:Mts400TesterC.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x7f6f29cec7c8"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x7f6f2ac7a1a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x7f6f2ac7a1a8"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x7f6f299a0700"/></to>
    </wire>
    <wire loc="55:Mts400TesterC.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x7f6f29cebdb8"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x7f6f2ac76b70"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x7f6f2ac76b70"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x7f6f296f6250"/></to>
    </wire>
    <wire loc="56:Mts400TesterC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f6f29cea7c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f6f2a876aa8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f6f2a876aa8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f6f295c4d48"/></to>
    </wire>
    <wire loc="57:Mts400TesterC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f6f29ce7020"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f6f2a8747c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f6f2a8747c0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f6f295c1a48"/></to>
    </wire>
    <wire loc="58:Mts400TesterC.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7f6f29ce67f8"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7f6f2a7a6558"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7f6f2a7a6558"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7f6f29502920"/></to>
    </wire>
    <wire loc="59:Mts400TesterC.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7f6f29ce4020"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7f6f2a7a5c28"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7f6f2a7a5c28"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7f6f29500020"/></to>
    </wire>
    <wire loc="60:Mts400TesterC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f29ce12e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f29cf7020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f29cf7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f291a9cb8"/></to>
    </wire>
    <wire loc="61:Mts400TesterC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f29ce0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f29cf7bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f29cf7bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f291a8908"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29211020"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2a113bf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2a242b30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f292ed430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2a352238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2931fde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f293da7e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f294cd020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29553dc0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2ab6ddd0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2969a6e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2973a738"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f297c7888"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2987f220"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f298b2c38"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29915020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2996b978"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b1a9308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b469b30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b469b30"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b3a1a18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b1a9ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2a00e870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b1a9ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2a113138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b1a9ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2b357130"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2b357130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2b34e020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b1a8418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f6f2b356cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29e764e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f6f2b356cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2ad416e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2b356020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2b1c8ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f6f2b34ed88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2b1c84b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6f2b34e6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2b1692d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6f2b34e6c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b350558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b350558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b345020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f6f2b350be8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f6f2b356cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f6f2b33e388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f6f2b335e00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f6f2b335e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2af430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f6f2b3444f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f6f2b350be8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f6f2b302968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b21b520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f6f2b31c4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b286020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b286020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b48100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f6f2b3104d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b275d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b275d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29adb100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f6f2b3071a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2668c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2668c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a72100"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f6f2b2fb658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b202c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f6f2b3311a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b2ad740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b2ad740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c76020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f6f2b30ae00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2685b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2685b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a78100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f6f2b32f4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2a5930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2a5930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c19180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f6f2b324658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b294740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b294740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29bac100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f6f2b319968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b283430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b283430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b3f100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f6f2b30d968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b271120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b271120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ad2100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f6f2b338968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2b3020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2b3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c85020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f6f2b32c968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2a2d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2a2d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c10100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f6f2b321af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b291bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b291bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ba3100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f6f2b315e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b27f8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b27f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b36100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f6f2b304658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b263d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b263d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a69100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f6f2b2fe348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b20cc38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f6f2b3121a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b278a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b278a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ae1100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2af430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c7c020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f6f2b328020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b29e120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b29e120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c07100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f6f2b300020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b217cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f6f2b326348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b296500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b296500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29bb2180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f6f2b31b658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b285120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b285120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b45100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f6f2b30f658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b274e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b274e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ad8100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f6f2b306348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b265a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b265a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a6f100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f6f2b330348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2ac8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2ac8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c6b020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f6f2b32e658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2a4a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2a4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c16100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f6f2b3237e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2938c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2938c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ba9100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f6f2b317af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2815b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2815b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b3c100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f6f2b30caf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2702a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2702a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29acf100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f6f2b337af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2b1120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2b1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c82020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f6f2b32baf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2a1e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2a1e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c0d100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f6f2b320c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b290d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b290d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ba0100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f6f2b3037e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b262e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b262e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a66100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f6f2b31d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b288e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b288e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b4b180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f6f2b311348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b276bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b276bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ade100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f6f2b308020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b267740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b267740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a75100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f6f2b2fc4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b2073e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f6f2b332020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2ae5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2ae5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c79020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f6f2b3271a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b29d2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b29d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c04100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f6f2b30bc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b269500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b269500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a7b180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f6f2b3254d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2955b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2955b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29baf100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f6f2b31a7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2842a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2842a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b42100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f6f2b30e7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b272020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b272020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ad5100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f6f2b3054d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b264bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b264bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29a6c100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f6f2b347790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2b5dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2b5dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c89db8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f6f2b32d7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2a3bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2a3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c13100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f6f2b322968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6f2b292a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6f2b292a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ba6100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f6f2b316c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6f2b280740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6f2b280740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b39100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f6f2b2ff1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f2b2113e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f6f2b313020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6f2b279930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6f2b279930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29ae4180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f6f2b31fe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6f2b28fe18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6f2b28fe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29b9d100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f6f2b336c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2b02a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2b02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c7f020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f6f2b32ae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6f2b29f020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6f2b29f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6f29c0a100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b3a0980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f6f2b39ee20"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f6f2b460bc0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6f2b37e668"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6f2aab2578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2b1692d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2b18c020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6f2b18bce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f6f2b18de10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f6f2b18de10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f6f2b337af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6f2b18ae70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f6f2b16c020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f6f2b16c020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f6f2b338968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6f2b188020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f6f2b16a1b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f6f2b16a1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f6f2b347790"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Resoure" scoped="" ref="0x7f6f2999fd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b12f428"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="XRead" scoped="" ref="0x7f6f2999d888"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x7f6f2b12e258"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XAxis" scoped="" ref="0x7f6f2b12e258"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x7f6f2b105168"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Resoure" scoped="" ref="0x7f6f2999ea58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b12f428"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="YRead" scoped="" ref="0x7f6f2999a020"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x7f6f2b12c9d8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YAxis" scoped="" ref="0x7f6f2b12c9d8"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x7f6f2b104838"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b12f428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b0f81c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b0f81c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b051d80"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b102dc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2ad4fe48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2b101a18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2ad4bac0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2ad4bac0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2ad40508"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XADC" scoped="" ref="0x7f6f2b100470"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f6f2adfc020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f6f2adfc020"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f6f2adf6340"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YADC" scoped="" ref="0x7f6f2b100a88"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f6f2adfc690"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f6f2adfc690"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f6f2adf69b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f6f2b0ff100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7f6f2b0ff8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b051d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29967060"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2b049d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2b0efdc0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b01c940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b04ee20"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b04ee20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f299650e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b01dd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b04e268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b04e268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f299664c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f6f2b0ea818"/></from>
      <to><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f6f2b00a6d8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f6f2b00a6d8"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae26020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f6f2b0f2578"/></from>
      <to><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f6f2b00b858"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f6f2b00b858"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae272a8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f6f2b0ee3c0"/></from>
      <to><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f6f2b0173b8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f6f2b0173b8"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae377f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f6f2b0e9150"/></from>
      <to><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f6f2b016150"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f6f2b016150"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae36430"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b0e9da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2b04faf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29967d58"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29965980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2b04d6d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f29964130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2996a020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f299622e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f29933740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2b049d50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29932268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2b01d7b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29932800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b01dd50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f299313f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b01c940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f6f29931b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f6f29930470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f6f2b015d58"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae35c58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae35c58"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f6f298d98c8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae36430"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f6f298da020"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f6f2b011558"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae30020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae30020"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f6f298d6c18"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f6f2b00ee40"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae2ac58"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae2ac58"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f6f297ef060"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f6f2b014ac8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae348c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae348c8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f6f298d85b8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7f6f2b013908"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae325b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae325b8"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f6f298d72a8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7f6f2b009588"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae26c18"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae26c18"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f6f297eb020"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f6f2b00dba0"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae298c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae298c8"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f6f297efc58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f6f2b0126f0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae312a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae312a8"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f6f298d6020"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelEepromPower" scoped="" ref="0x7f6f2b00c9e8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae285b8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae285b8"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f6f297ee8c8"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7f6f2b0103c0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae2b438"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae2b438"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f6f297f16e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f6f2b015020"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae35060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae35060"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f6f298dac18"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b006908"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2b006908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29913630"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Channel2PowerNull" scoped="" ref="0x7f6f2b00e110"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae2a060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae2a060"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f6f297f0430"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae377f8"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f6f298db3d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae272a8"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f6f297ed5b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae26020"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f6f297ec2a8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2b005698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29912388"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b005dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29912ac8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b0039d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29911700"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29910020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2b0023c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f299107a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f299155f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f2990d908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f6f298d6020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f6f298da020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f6f298d85b8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f6f298d6c18"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f6f298dac18"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f6f298d72a8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f6f298db3d8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f6f298d98c8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298d59f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298cc6c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298cc6c0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f298d03e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f298cd8e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f298cd8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298b91e8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298d59f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f298b6bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f298d03e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6f298b4888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f6f298b12e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7f6f298b1a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af4f140"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af1a020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f6f2af16c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af665f0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2af665f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2987d830"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2af15a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2aeaa700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f6f2af10420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f6f2aea5318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2af607f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2af0be60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2af5f5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2af64ac8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2af64ac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2987cdd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f6f2aea5930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f6f2ae9d828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f6f2ae9d828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f6f2ae951d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f6f2aea22e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2ae5a358"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f6f2aea1908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2ae5a358"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2af64388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2987c698"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2af63700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2987b9d8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2987a3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2af62020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f2987ab68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2987f7f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f29877da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f6f2ae93b50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f6f2b31d020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f6f2ae92e08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f6f2b31c4d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f6f297ec2a8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f6f297f0430"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f6f297ee8c8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f6f297eb020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f6f297ef060"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f6f297ed5b8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f6f297f16e8"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f6f297efc58"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297ebd40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297e2b58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297e2b58"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f297e6718"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f297e3e18"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f297e3e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297cfb98"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297ebd40"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f297ca6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f297e6718"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6f297c93f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f6f297c6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7f6f297c67c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f6f2ae06020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad6ac80"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f6f2adfd980"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f6f2adf9c28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f6f2ae12de0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f6f2b3237e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f6f2ae0d328"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f6f2b320c78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f6f2adfcd00"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f6f2adf5060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f6f2adfba30"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f6f2adf5d40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f6f2ae0a7d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f6f2b30e7e0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f6f2adfe808"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f6f2b31a7e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f6f2ae14ad0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f6f2b3254d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f6f2ae10020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f6f2b322968"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f6f2ae05858"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad63c80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f6f2adff680"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f6f2b31b658"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f6f2ae0c4b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f6f2b31fe00"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f6f2ae022b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad7b578"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f6f2adfa340"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f6f2adf43f8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f6f2ae09958"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f6f2b30d968"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f6f2ae13c58"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f6f2b324658"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f6f2ae0e180"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f6f2b321af0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f6f2adfb3c0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f6f2adf56d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f6f2ae0b648"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f6f2b30f658"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f6f2ae06ba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad66458"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f6f2ae014f8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f6f2b317af0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f6f2adfa9b0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f6f2adf4a68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f6f2ae17868"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f6f2b326348"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f6f2ae08ae0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f6f2b30caf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad7a060"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f6f2addfb38"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f6f2addfb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad93020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad69780"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f6f2addeb38"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f6f2addeb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad90c38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad65020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f6f2adddb38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f6f2adddb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad8b7a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad62780"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f6f2addcb38"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f6f2addcb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad873e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f6f2ade6c88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ada0cf8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f6f2ade5b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad9c7e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f6f2ade1da0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2adb7258"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f6f2ade0b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f6f2ad983e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ada3060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f6f2add5850"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad9fb10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f6f2add7020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad9b5f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f6f2add7758"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad962e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f6f2add6020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad93de0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f6f2add6758"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad8fa90"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f6f2add3020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad8a5f8"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f6f2add3758"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad862e8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f6f2add2020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f6f2ad43420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f6f2ad40e60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2ad4fe48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2ac97020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2ac97020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29737d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ac95960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ad491c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2ad30940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2ad42a18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2ad42a18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2acfccd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2ad3dd30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2b356020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2ac91510"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2ad41d18"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac88268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac964a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac964a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29735268"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2acf70c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2b37f0f0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2ac97d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29736af8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ac950e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29735e20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f297346f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ac95960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f29734e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6f2973ad10"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f29731020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f29700020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2ac91510"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29700740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2ac91c30"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29700cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac88268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f296fe908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ac88e20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f296f69b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2ac36020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7f6f296f5888"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7f6f2ac36e18"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x7f6f2ac36e18"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x7f6f2abd6020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="PressRead" scoped="" ref="0x7f6f296f3020"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x7f6f2ac34608"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Press" scoped="" ref="0x7f6f2ac34608"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x7f6f2abd5700"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x7f6f296f15f8"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x7f6f2ac33c50"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x7f6f2ac33c50"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x7f6f2abd4d98"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2ac36020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2abc31c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2abc31c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2ab8bad0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x7f6f2abce740"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x7f6f2ae014f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x7f6f2abcd908"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x7f6f2adff680"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x7f6f2abcba90"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x7f6f2adfe808"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2abd36c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2a9b3228"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a9b3228"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="gotInterrupt" scoped="" ref="0x7f6f2abcac18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="SPITask" scoped="" ref="0x7f6f2abc9470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2ab8bad0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29698d80"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2ab86800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2abc2ce8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab843f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab89bd8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab89bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29695e20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab85800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab89020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab89020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29695268"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f6f2abbe918"/></from>
      <to><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f6f2b00ee40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f6f2abbd710"/></from>
      <to><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f6f2b015020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f6f2abbc570"/></from>
      <to><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f6f2b015d58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f6f2abbb3f0"/></from>
      <to><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f6f2b014ac8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2abb1c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x7f6f2abb5520"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x7f6f2ae014f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x7f6f2abb4820"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x7f6f2adff680"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x7f6f2abb29b8"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x7f6f2adfe808"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2abba188"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2ab7ca60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2ab7ca60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2ab8a820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29696af8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f296946f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ab88550"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f29694e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2969acb8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f29691020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f29662740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2ab86800"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29661268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2ab85268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29661800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab85800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f296603f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab843f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f6f29660b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f6f2965f470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab6ab18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab6ab18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2a9df5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2ab6ddd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2ab5f728"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6f2ab63108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a9d0128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2ab5f728"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2aa58020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f6f2a9d9858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2aa2bab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2aa26c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6f2ab5c020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6f2ab5c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f2aa587c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6f2a9c7330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f6f2ab51150"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f6f2ab51150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6f2aa54a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6f2aa54a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6f29630a90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2aa58020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29633020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2aa587c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f296337c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2962db98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2aacc288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2aacc288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2aabfe00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29628b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f2aac73c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f2aac73c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f2aab7020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6f29627e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6f2aac57f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6f2aac57f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6f2aab6340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f6f29622060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f6f2aac29e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f6f2aac29e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f6f2aab2c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f6f2aa22cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f6f2a9d4930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f6f2a873d98"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f6f295c1328"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f6f2a8740a0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f6f295c4628"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f6f295bf0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a958598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f6f295be988"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a957850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f6f295bfcd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a958598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f6f295bdda0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a957850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a957850"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a8e1bd8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a958598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a8d0878"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a8d0878"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a898980"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f6f2a8df100"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f6f2a8cf688"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f6f2a8cf688"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f6f2ae08ae0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f6f2a8de2e8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f6f2a8cd800"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f6f2a8cd800"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f6f2ae12de0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f6f2a8dd470"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f6f2a8cca18"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f6f2a8cca18"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f6f2ae05858"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a8dc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2a886a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a886a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6f2a8d7020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f6f2a8d6d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f6f2a8d65f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a898980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2954f4b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f6f2a8bf0f0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f6f2ae08ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f6f2a8be368"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f6f2ae12de0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a8c75b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2a89f5e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a89f5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a893548"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a8ca8d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a890268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a8969d8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a8969d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2954d578"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a8925b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a897de8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a897de8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2954e940"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f6f2a8c2730"/></from>
      <to><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f6f2b0126f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f6f2a8c1578"/></from>
      <to><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f6f2b011558"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f6f2a8c0400"/></from>
      <to><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f6f2b00dba0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a8bd488"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a8976a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2954e200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2954de18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a8953c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f2954c5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f295523f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f2954a5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2951bd58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a893548"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2951a7b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2a892020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2951ad50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a8925b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29519940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a890268"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f6f29518120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f6f295188c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLResource" scoped="" ref="0x7f6f294ff5f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a840c58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLRead" scoped="" ref="0x7f6f294fd060"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7f6f2a83fac8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="VLight" scoped="" ref="0x7f6f2a83fac8"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7f6f2a80f020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRResource" scoped="" ref="0x7f6f294fe2e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a840c58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRRead" scoped="" ref="0x7f6f294fb700"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7f6f2a83c298"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="IRLight" scoped="" ref="0x7f6f2a83c298"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7f6f2a80e700"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a840c58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a8004d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a8004d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a7cca00"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a80ce60"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7af9d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7af9d0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f6f2a8078b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a7b0bf8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a7b0bf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f6f2a8065f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7f6f2a8055c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f6f2a806d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a7cca00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f294cb630"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a7c7800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a7fc020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7c53f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7cabd8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7cabd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f294c9700"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7c6800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7ca020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7ca020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f294caac8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7f6f2a7fcbc8"/></from>
      <to><interface-ref name="ChannelLightPower" scoped="" ref="0x7f6f2b0103c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a7f0610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a7fbac0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f2a7c02b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f2a7c02b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7f6c50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7b9848"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7b9848"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f6f2a7f1828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a7bab00"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a7bab00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x7f6f2a7ece30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f6f2a7ec020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a7cb820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f294ca388"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f294c7020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a7c9550"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f294c77a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f294cd5f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f294c5908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f29491268"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a7c7800"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29491c98"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2a7c6268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2948f268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7c6800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2948fe20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7c53f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f6f2948e5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f6f2948ed98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6e16d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6b94a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a71e680"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6da020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6da020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6b4cd0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f2a7169f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f2a6d9e38"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f2a6d9e38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f6f2a6af1e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f2a728ab0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6de798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6de798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6b6498"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6f2a75b1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6db498"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6db498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6b41c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a6fb848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a6d6af8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a6d6af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a69b6a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a7245e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a6dd928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a6dd928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a6b55b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6ff0d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6d61a0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6d61a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6a4cb8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a6f2828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a6d55e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a6d55e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a69a2d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a705190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6d8a80"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6d8a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6b1ac0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a6ef4a0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a6d42e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a6d42e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a698020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f6f2a6f1260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a6c2190"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a6c2190"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a68c298"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a6e5130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a6bd130"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a6bd130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a688378"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6b94a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a309988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a6c9d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a692348"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a692348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a1300c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a688378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a17b270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6b4cd0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a4f0c28"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f6f2a6af1e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f2a4f23f0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6b6498"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f2a4f1100"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6b41c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6f2a4f0550"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a6cc870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a694020"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a694020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a134cd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a69b6a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a2f3060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a6b55b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a4f1df8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a68c298"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a178020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a6c1d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a68fe78"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a68fe78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a126220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a6cd330"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a698b78"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a698b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a12b860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6a4cb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a1fc3f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a6dabe0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a6b3910"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a6b3910"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a4ef3c8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a69a2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a314268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6b1ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a4f4e30"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a698020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a284bd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a6c1570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a68f668"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a68f668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a1289d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a6d9860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a6b14d0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a6b14d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a4efae0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a309988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6f2a2f3b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a1300c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a10b020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f6f2a6ac020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a45fb50"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f6f2a6acbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a493748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a493748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f293d8b80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a4f0c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f6f29430b58"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f2a4f1100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f29431020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f6f2a4f0550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6f29430480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a69c9c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a38f900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a38f900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2936e778"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f6f2a6a4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f2a48db38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a134cd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a10fb48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a2f3060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f292f5458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f2a4f23f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f29432268"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a4f1df8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f29431d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a178020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f29261660"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a126220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a012438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a12b860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a106860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a6a7b00"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a460888"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a4ef3c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2942e3c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a314268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f6f2a30f470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a284bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f6f292ec9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a4f4e30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f29434b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a17b270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f29265958"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a6ad818"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a45f5b8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a1289d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a1039d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a4efae0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2942eae0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a63fcb8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a392980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a392980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f293717f8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a6388d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a63cbc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a178020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f6f2a632b20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a135bd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a135bd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a110a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2a5ad958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f2a1254b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2a1254b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f2a0162e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a4eb020"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f6f2a659130"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a4ec020"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f6f2a4e5de0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a4ec908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f6f2a420430"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a4ed180"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f6f2a420a08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f2a4d5060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2a493748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a4e4768"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f6f2a422a50"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a45e2c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a392980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a45a0a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a452d20"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a45a988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a423638"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a45b2e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a423c10"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a41f928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f2a325470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f2a325470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f29323da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a41e2a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a315bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a315bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a3125b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a41e880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a38eb98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a38eb98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2936da10"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a38cab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a314e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a314e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a312b90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a323580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f6f2a66ea90"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a324510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f2a3152e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f2a3152e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a313c38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a311a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a1fc3f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a313c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f2a2f6430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f2a2f6430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a2f25c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a3125b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a2f6d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a2f6d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a2f1020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a312b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a2f42e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a2f42e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a2f15f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6f2a2f3b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a285270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a285270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6f292ee870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a2f25c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f2a285ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f2a285ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f292eda08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a2f1020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f2a284638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6f2a284638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6f292ec430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a2f15f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a1759f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a1759f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2925e080"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a2823f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a22d020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a22d020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f292b2b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a282c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a325d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a325d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2931f6c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f6f2a2835d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1485b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1485b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f6f2a142a08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a324df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a22d8c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a22d8c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f292b0578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a22bce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f6f2a667dd8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a22c0c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a2252a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a22c9a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a225b50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a22b0f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f6f2a1f8bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a1fbd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a1f9a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f6f2a673a78"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1fcd38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1dc020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1dc020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1d75b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1fb670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a1dc8c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a1dc8c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1d6020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a1d4da0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f6f2a665c00"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1d75b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1473f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1473f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1418c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1d6020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a147c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a147c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1402a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f6f2a1d6780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a135448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a135448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1102c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a174a30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a126220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a1739f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a14d0e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f6f2a1728c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a14c020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a135bd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a13d060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f6f2a665c00"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1418c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1362c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1362c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1110c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1402a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a136bf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a136bf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a1119e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f6f2a142a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1393e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1393e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1122d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a1215c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f6f2a67ce48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a120730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a178020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f6f2a11c378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f6f2a11b020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f6f2a11bb78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a11a768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f29450658"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2944f4d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f2a5ad958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f6f2944b528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a5ac220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2942a020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2a50d560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2942d180"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a4ed180"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2942c020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a4ec020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2942c908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a4ec908"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2942b020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a4eb020"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a492510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f293d69a8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a492c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f293d5268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f293d5b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a491550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f293d42b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f293dadc0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f293d4d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2936c8e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2a50d560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2936b430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a38cab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2931c020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2a359d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2a359d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2a352850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f2931cbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f29319140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f29319140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f2a351b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f2931e458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a324510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f2931ed40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a324df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f6f2931d4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a323580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f6f2a30e100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a311a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f6f292eb450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f6f2a2835d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f6f292e9268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a5ac220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f6f292e9c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a2823f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f6f292e8578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a282c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f6f292e74f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f6f292e7c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f6f292e8d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6f292b0d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6f2a22c0c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f292ac2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a22bce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6f292af670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a22c9a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f292afd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a22b0f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6f292ad9d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6f2a243690"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6f2a243690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6f2a23d4c8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f6f292acd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f6f2a241668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f6f2a23e3b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2a247930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f2a242b30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a1e0978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6f2a1dabf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1db020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f6f2a1d6780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1de268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f6f2a1d8638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a1db740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a1d4020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f6f2a1da5b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a1d4da0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6f2a1dfc98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f6f2a1d8060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f6f2a1df3f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f6f2a1d9740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f6f2925aac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a1739f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2925ca10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a174a30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6f2925baf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a182dc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a182dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6f2ab63108"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f6f2925ee60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f6f2a1728c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a14ab78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6f2a143020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1453f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f6f2a140a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a145b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a13f2a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f6f2a1448c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a13d060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6f2a148020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f6f2a142430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f6f2a149700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f6f2a143a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f2a0162e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f29e2f578"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6f2a12d458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6f2a1083b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a012438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6f29e2ae68"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f6f2a0f0100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f6f2a1215c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f6f2a0f0e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f6f2a11c378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f6f2a0ef988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f6f2a11b020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f6f2a0ee518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f6f2a11bb78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a0ed2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a120730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a0f1020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a012438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a0e9ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a11a768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f6f2a101130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f6f2a01e710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f6f2a01e710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f6f2b32f4d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6f2a1004f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f6f2a01b990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6f2a01b990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29fe6e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f2a0fe080"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f2a01a5e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f2a01a5e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f29fef9d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f6f2a0feb90"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f6f2a019140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f6f2a019140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f6f2b3271a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6f2a0fddf0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f6f2a018338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6f2a018338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f6f2b3311a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f6f2a0f4590"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f6f2a0174c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f6f2a0174c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f6f2a011cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a0e9020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a5ac220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f6f2a0f2bf8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f6f29dd7268"/></to>
    </wire>
    <wire loc="861:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f6f2a05b368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6f29e2f578"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6f291e35c8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f29fef9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f29fe4628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6f29e2ae68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6f29de3988"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f6f2a003c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f6f2b316c78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f6f2a001e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f6f2b319968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f6f2a004540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6f29f1e020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f6f29f1e020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6f29f04808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6f29fe61d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6f29fe3120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6f29fef388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6f29fe4020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6f2a00fcd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6f29feda18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f29fe6e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f29f31748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6f29f31748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6f2920f390"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29f2f550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29fe3de0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f6f29fc6c78"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f6f29f88a20"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f6f29f88a20"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f6f29f828d8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f6f29fc5910"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2b37f0f0"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f6f29fa5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f6f29f78660"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2b37f0f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f6f29f7c020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f6f2b32f4d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f6f29f7b180"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f6f2b32e658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f6f29f7a338"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f6f2b32d7e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f6f29f794c0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f6f2b32c968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29f30510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2920e0c8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29f30c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2920e808"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2920d100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29f2f550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6f2920d880"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f292115f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6f2920b470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29f17910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29f05160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f29f28d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f29f0a180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6f29f13e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f6f29eff020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6f29f13e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f6f29efb360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6f29f13e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f6f29ef8770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f6f291e0670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f29f28d00"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f6f291db650"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6f29f13e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f29e76c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f29f28d00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6f29de2b88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6f29de90e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6f29de72b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6f29e26b18"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6f29e26b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6f29e1fb90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6f29e0cc58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6f29f28d00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f291a9100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f2919d378"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f291a9cb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f2a7169f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f291a8908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a705190"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6f29cf52a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f6f291a6020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f6f291a6020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6ff0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f2919c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f29d53020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f2919cbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a705190"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6f29d53020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6f29d0c2c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f6f29d0b060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6f2a728ab0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6f29d0bc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a705190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6f29d09268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f6f2a7169f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f6f29d08020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f6f29d087c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Accel202C" loc="36(Mts400TesterC.Accel202C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Accel202C.Accel202ReaderP" loc="34(Mts400TesterC.Accel202C.Accel202ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalAccel202C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalAccel202C.Accel202LogicP" loc="34(HalAccel202C.Accel202LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715.h">
        <short>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAccel202P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter" loc="89(HplAccel202C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Accel202.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.Arbiter.Queue" loc="42(HplAccel202C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter.Arbiter" loc="52(HplAccel202C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC" loc="67(HplAccel202C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC.PowerManager" loc="58(HplAccel202C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to the mts420CA sensorboard and the adg715 that connects&#10; the communication wires.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC" loc="89(Adg715C.FcfsArbiterC):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Adg715.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Queue" loc="42(Adg715C.FcfsArbiterC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Arbiter" loc="52(Adg715C.FcfsArbiterC.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm" loc="41(Adg715C.Comm):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC" loc="42(Adg715C.Comm.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Comm.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm.Atm128I2CMasterC" loc="43(Adg715C.Comm.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Adg715C.Power" loc="41(Adg715C.Power):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC" loc="42(Adg715C.Power.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Power.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Power.Atm128I2CMasterC" loc="43(Adg715C.Power.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Mts400TesterC.Intersema5534C" loc="36(Mts400TesterC.Intersema5534C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <instance number="0">
        <component-ref qname="Intersema5534C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP" loc="34(Mts400TesterC.Intersema5534C.Intersema5534ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalIntersema5534C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalIntersema5534C.Intersema5534LogicP" loc="50(HalIntersema5534C.Intersema5534LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplIntersema5534P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter" loc="89(HplIntersema5534C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Intersema5534.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Queue" loc="42(HplIntersema5534C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Arbiter" loc="52(HplIntersema5534C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC" loc="67(HplIntersema5534C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager" loc="58(HplIntersema5534C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Timer" loc="44(HplIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f6f2ab490a8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HalIntersema5534C.Timer" loc="44(HalIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.SensirionSht11C" loc="45(Mts400TesterC.SensirionSht11C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP" loc="45(Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Taos2550C" loc="36(Mts400TesterC.Taos2550C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.Taos2550C.Taos2550ReaderP" loc="34(Mts400TesterC.Taos2550C.Taos2550ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalTaos2550C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Taos2550LogicP" loc="36(HalTaos2550C.Taos2550LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTaos2550P" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter" loc="89(HplTaos2550C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Taos2550.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Queue" loc="42(HplTaos2550C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Arbiter" loc="52(HplTaos2550C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC" loc="67(HplTaos2550C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager" loc="58(HplTaos2550C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Timer" loc="44(HplTaos2550C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Atm128I2CMasterC" loc="43(HplTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Atm128I2CMasterC" loc="43(HalTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <documentation loc="101:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/RadioConfig.h">
        <short>&#10; The base two logarithm of the number of radio alarm ticks per one millisecond&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="6">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="7">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="Mts400TesterC.AMSenderC" loc="47(Mts400TesterC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.AMSenderC.SenderC" loc="47(Mts400TesterC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP" loc="43(Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Mts400TesterP" loc="36:Mts400TesterP.nc">
      <documentation loc="1:DataMsg.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f6f2b2f88a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f6f2b2f8bf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f6f2b2f5020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f6f2b2e8340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f6f2b2e86a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f6f2b2e8a10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f6f2b2e8d40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f6f2b259508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f6f2b259870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f6f2b259bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f6f2b258020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Accel202ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202LogicP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6f2b0f4af8" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f6f2b0b7d08" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f6f2b09b8e0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAdg715C" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f6f2affe430" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7f6f2affe768" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlC" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f6f2aff4108" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7f6f2aff4440" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlP" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f6f2afdbb70" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
        <constant name="pinA0High" ref="0x7f6f2afd8020" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f6f2adb6020" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f6f2adb6388" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f6f2adb66f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f6f2adb6a20" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6f2acc37e0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f6f2acbde38" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Intersema5534C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Intersema5534ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Intersema5534LogicP" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f6f2ab490a8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f6f2ab490a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f6f2ab49398" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f6f2ab40778" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f6f2ab40778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f6f2ab40a68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2ab5dc60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2ab5dc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2aa20cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2aa20cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f6f2aa1d020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2a9d29f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2a9d29f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Taos2550ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550LogicP" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6f2a4d2988" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f6f29e75380" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f29e75380"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f6f29e756d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6f29e61020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6f29e61020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f6f29e61770" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f29e61770"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f6f29e61a70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6f29e1d020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6f29e1d020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f6f29e1d770" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f29e1d770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6f29e026c8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6f29e026c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6f29e02e30" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6f29e02e30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6f29e01240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6f29e01240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6f29e019b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6f29e019b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6f29e01d60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f6f29e00528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f6f29e00528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6f29d86758" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f6f29d79348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6f29d75e20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f6f29d4f2a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f6f2b35b1b0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b35b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b35b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6f2b35fd68" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f6f2b35fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6f2b35e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f6f2b356cf0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f6f2b356cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b3550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2b357130" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2b357130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b357480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f6f2b356020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2b356020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f6f2b356370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f6f2b3564f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f6f2b356680"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f6f2b356808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f6f2b356990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f6f2b34e6c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f6f2b34e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b34ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2b34e020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2b34e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b34e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f6f2b34ed88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f6f2b34ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b34d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f6f2b350be8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f6f2b350be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b348020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6f2b350558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b350558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b3508a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f6f2b3444f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f6f2b3444f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b344848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f6f2b33e388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f6f2b33e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b33e6d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b33e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b33e9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b33eb70"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b33ecf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b33ee80"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b344030"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3441b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6f2b345020" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b345020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b345370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f6f2b302968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f6f2b302968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3010f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b301278"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b301400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b301588"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b301710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b301898"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b301a20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b301ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f6f2b31c4d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f6f2b31c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31c820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b31ccb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b31ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b31b020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b31b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b31b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f6f2b3104d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f6f2b3104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b310820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3109a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b310b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b310cb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b310e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30f020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f6f2b3071a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f6f2b3071a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3074f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b307678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b307800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b307988"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b307b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b307c98"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b307e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f6f2b2fb658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f6f2b2fb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2fb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2fbb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2fbcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2fbe40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2fa1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2fa330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f6f2b3311a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f6f2b3311a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3314f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b331678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b331800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b331988"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b331b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b331c98"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b331e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f6f2b30ae00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f6f2b30ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3091a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b309330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b309640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b309950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b309ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b309c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f6f2b32f4d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f6f2b32f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b32f820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b32f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b32fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b32fcb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b32fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b32e020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f6f2b324658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f6f2b324658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3249a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b324b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b324cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b324e40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b323020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3231a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b323330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f6f2b319968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f6f2b319968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b319cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b319e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b317020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b3171a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b317330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3174b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b317640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f6f2b30d968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f6f2b30d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b30dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b30de40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b30c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b30c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b30c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30c640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f6f2b338968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f6f2b338968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b338cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b338e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b337020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b3371a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b337330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3374b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b337640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3377c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f6f2b32c968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f6f2b32c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b32ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b32ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b32b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b32b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b32b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b32b4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32b640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f6f2b321af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f6f2b321af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b321e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b320020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3201a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b320330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3204b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b320640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3207c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b320950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f6f2b315e00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f6f2b315e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3141a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b314330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3144b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b314640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3147c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b314950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b314ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b314c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f6f2b304658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f6f2b304658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3049a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b304b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b304cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b304e40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b303020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3031a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b303330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f6f2b2fe348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f6f2b2fe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2fe698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2fe820"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2fe9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2feb30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2fecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2fee40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2fc020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f6f2b3121a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f6f2b3121a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3124f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b312678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b312800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b312988"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b312b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b312c98"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b312e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f6f2b335e00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f6f2b335e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3341a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b334330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3344b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b334640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3347c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b334950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b334ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b334c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f6f2b328020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f6f2b328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b328370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3284f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b328680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b328808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b328990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b328b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b328ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b328e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f6f2b300020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f6f2b300020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b300370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3004f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b300680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b300808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b300990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b300b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b300ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b300e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f6f2b326348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f6f2b326348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b326698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b326820"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3269a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b326b30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b326cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b326e40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b325020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f6f2b31b658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f6f2b31b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31bb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b31be40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b31a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b31a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b31a330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b31a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f6f2b30f658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f6f2b30f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b30f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b30fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b30fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b30fe40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b30e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30e330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f6f2b306348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f6f2b306348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b306698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b306820"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3069a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b306b30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b306cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b306e40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b305020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f6f2b330348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f6f2b330348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b330698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b330820"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3309a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b330b30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b330cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b330e40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f6f2b32e658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f6f2b32e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b32e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b32eb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b32ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b32ee40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b32d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b32d1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32d330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f6f2b3237e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f6f2b3237e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b323b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b323cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b323e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b322020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b322330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3224b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b322640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f6f2b317af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f6f2b317af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b317e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b316020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3161a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b316330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3164b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b316640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3167c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b316950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f6f2b30caf0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f6f2b30caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b30ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b30b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b30b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b30b330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b30b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30b640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f6f2b337af0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f6f2b337af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b337e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b336020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3361a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b336330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3364b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b336640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3367c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b336950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f6f2b32baf0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f6f2b32baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b32a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b32a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b32a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b32a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b32a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b32a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32a950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f6f2b320c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f6f2b320c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b31f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b31f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b31f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b31f950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b31fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f6f2b3037e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f6f2b3037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b303b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b303cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b303e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b302020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b302330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3024b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b302640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f6f2b31d020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f6f2b31d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31d570"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31d6f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31d880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b31da08"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b31db90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b31dd18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b31c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b31c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f6f2b311348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f6f2b311348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b311698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b311820"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3119a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b311b30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b311cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b311e40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b310020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f6f2b308020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f6f2b308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b308370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3084f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b308680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b308808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b308990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b308b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b308ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b308e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f6f2b2fc4d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f6f2b2fc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2fc820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2fc9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2fcb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2fccb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2fce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2fb020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f6f2b332020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f6f2b332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b332370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3324f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b332680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b332808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b332990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b332b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b332ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b332e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f6f2b3271a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f6f2b3271a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3274f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b327678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b327800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b327988"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b327b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b327c98"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b327e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f6f2b30bc78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f6f2b30bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b30a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b30a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b30a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b30a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b30a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30a950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f6f2b3254d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f6f2b3254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b325820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3259a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b325b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b325cb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b325e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b324020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3241a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b324330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f6f2b31a7e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f6f2b31a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31acb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b319020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b319330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3194b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b319640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f6f2b30e7e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f6f2b30e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b30eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b30ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b30ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b30d020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b30d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b30d330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b30d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b30d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f6f2b3054d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f6f2b3054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b305820"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3059a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b305b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b305cb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b305e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b304020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3041a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b304330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f6f2b347790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f6f2b347790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b347ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b347c68"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b347df0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b338020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b338330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b3384b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b338640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f6f2b32d7e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f6f2b32d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b32db30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b32dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b32de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b32c020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b32c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b32c330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b32c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b32c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f6f2b322968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f6f2b322968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b322cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b322e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b321020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b3211a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b321330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3214b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b321640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b3217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f6f2b316c78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f6f2b316c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b315020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3151a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b315330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b3154b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b315640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3157c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b315950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b315ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f6f2b2ff1a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f6f2b2ff1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2ff4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2ff678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2ff800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2ff988"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2ffb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2ffc98"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2ffe20"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f6f2b313020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f6f2b313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b313370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3134f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b313680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b313808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b313990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b313b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b313ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b313e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f6f2b31fe00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f6f2b31fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b31e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b31e330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b31e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b31e640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b31e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b31e950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b31ead8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b31ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f6f2b336c78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f6f2b336c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b335020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b3351a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b335330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b3354b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b335640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b3357c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b335950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b335ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f6f2b32ae00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f6f2b32ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b3291a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b329330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b3294b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b329640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b3297c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b329950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b329ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b329c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b2b1120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2b1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2b1470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2b15f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2b1780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2b1908"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2b1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2b1c18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2b1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b2ae5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2ae5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2ae908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2aea90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2aec18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2aeda0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2ad1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2ad330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b2b5dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2b5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2b4170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2b42f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2b4480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2b4608"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2b4790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2b4918"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2b4aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2b4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b2b02a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2b02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2b05f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2b0780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2b0908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2b0a90"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2b0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2b0da0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2af020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b2ad740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b2ad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2ada90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2adc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2adda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2ac020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2ac330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2ac4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2ac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b2b3020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2b3370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2b34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2b3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2b3808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2b3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2b3b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2b3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2b3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b2af430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2af430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2af780"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2af908"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2afa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2afc18"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2afda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2ae020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b2ac8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2ac8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2acc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2acda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2ab1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2ab330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2ab4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2ab640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c89db8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c89db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c88170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c882f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c88480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c88608"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c88790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c88918"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c88aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c88c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c85020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c85370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c854f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c85680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c85808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c85990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c85b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c85ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c85e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c82020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c82370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c824f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c82680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c82808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c82990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c82b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c82ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c82e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c7f020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c7f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c7f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c7f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c7f808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c7f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c7fb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c7fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c7fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c7c020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c7c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c7c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c7c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c7c808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c7c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c7cb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c7cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c7ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c79020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c79370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c794f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c79680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c79808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c79990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c79b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c79ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c79e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c76020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c76370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c764f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c76680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c76808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c76990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c76b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c76ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c76e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c6b020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c6b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c6b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c6b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c6b808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c6b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c6bb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c6bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c6be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b2a3bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b2a3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2a2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2a21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2a2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2a24b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2a2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2a27c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2a2950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2a2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b29f020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b29f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b29f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b29f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b29f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b29f808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b29f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b29fb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b29fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b29fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b2a5930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b2a5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2a5c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2a5e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2a41a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2a4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2a44b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2a4640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b2a2d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2a2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2a10d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2a1260"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2a13e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2a1570"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2a16f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2a1880"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2a1a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b29e120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b29e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b29e470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b29e5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b29e780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b29e908"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b29ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b29ec18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b29eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b29d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b2a4a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2a4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2a4da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2a3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2a31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2a3330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2a34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2a3640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2a37c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2a3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b2a1e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b2a1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2a01a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2a0330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2a04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2a0640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2a07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2a0950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2a0ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2a0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b29d2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b29d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b29d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b29d780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b29d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b29da90"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b29dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b29dda0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b29c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b29c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c19180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c19180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c194d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c19658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c197e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c19968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c19af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c19c78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c19e00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c16100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c16100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c16450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c165d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c16760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c168e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c16a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c16bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c16d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c13100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c13100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c13450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c135d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c13760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c138e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c13a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c13bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c13d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c10100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c10100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c10450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c105d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c10760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c108e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c10a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c10bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c10d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c0d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c0d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c0d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c0d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c0d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c0d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c0da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c0dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c0dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c0a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c0a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c0a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c0a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c0a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c0a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c0aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c0abf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c0ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c07100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c07100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c07450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c075d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c07760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c078e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c07a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c07bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c07d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29c04100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29c04100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29c04450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29c045d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29c04760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29c048e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29c04a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29c04bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29c04d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29c02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b294740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b294740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b294a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b294c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b294da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b293020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b293330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2934b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b293640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b291bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b291bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b290020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2901a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b290330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2904b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b290640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2907c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b290950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b290ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b296500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b296500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b296850"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2969d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b296b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b296ce8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b296e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b295020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2951a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b295330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b2938c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2938c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b293c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b293da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b292020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2921a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b292330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2924b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b292640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b290d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b290d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b28f0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b28f260"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b28f3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b28f570"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b28f6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b28f880"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b28fa08"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b28fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b2955b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2955b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b295908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b295a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b295c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b295da0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b294020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2941a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b294330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b292a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b292a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b292da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b291020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2911a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b291330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2914b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b291640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2917c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b291950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b28fe18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b28fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b28d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b28d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b28d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b28d640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b28d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b28d950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b28dad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b28dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29bb2180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29bb2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29bb24d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29bb2658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29bb27e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29bb2968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29bb2af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29bb2c78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29bb2e00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29bb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29baf100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29baf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29baf450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29baf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29baf760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29baf8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29bafa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29bafbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29bafd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29bae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29bac100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29bac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29bac450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29bac5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29bac760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29bac8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29baca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29bacbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29bacd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29bab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ba9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ba9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ba9450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ba95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ba9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ba98e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ba9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ba9bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ba9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ba6100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ba6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ba6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ba65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ba6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ba68e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ba6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ba6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ba6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ba5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ba3100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ba3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ba3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ba35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ba3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ba38e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ba3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ba3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ba3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ba2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ba0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ba0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ba0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ba05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ba0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ba08e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ba0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ba0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ba0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b9d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b9d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b9d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b9d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b9d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b9d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b9da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b9dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b9dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b285120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b285120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b285470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2855f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b285780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b285908"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b285a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b285c18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b285da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b284020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b2815b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b2815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b281908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b281a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b281c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b281da0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b280020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2801a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b280330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b288e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b288e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2871c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b287348"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2874d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b287658"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2877e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b287968"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b287af0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b287c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b2842a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2842a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2845f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b284780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b284908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b284a90"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b284c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b284da0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b283020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b280740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b280740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b280a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b280c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b280da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b27f020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b27f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b27f330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b27f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b27f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b286020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b286370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2864f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b286680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b286808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b286990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b286b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b286ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b286e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b283430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b283430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b283780"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b283908"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b283a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b283c18"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b283da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b281020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2811a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b281330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b27f8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b27f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b27fc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b27fda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b27e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b27e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b27e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b27e4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b27e640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b27e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b4b180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b4b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b4b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b4b658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b4b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b4b968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b4baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b4bc78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b4be00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b48100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b48100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b48450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b485d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b48760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b488e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b48a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b48bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b48d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b45100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b45100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b45450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b455d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b45760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b458e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b45a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b45bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b45d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b42100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b42100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b42450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b425d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b42760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b428e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b42a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b42bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b42d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b3f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b3f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b3f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b3f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b3f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b3f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b3fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b3fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b3fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b3c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b3c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b3c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b3c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b3c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b3c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b3ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b3cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b3cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b39100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b39450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b395d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b39760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b398e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b39a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b39bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b39d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29b36100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29b36100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29b36450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29b365d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29b36760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29b368e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29b36a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29b36bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29b36d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29b35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b276bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b276bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b275020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2751a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b275330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2754b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b275640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2757c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b275950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b275ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b272020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b272370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2724f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b272680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b272808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b272990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b272b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b272ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b272e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b279930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b279930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b279c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b279e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b278020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2781a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b278330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2784b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b278640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b275d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b275d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2740d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b274260"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2743e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b274570"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2746f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b274880"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b274a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b274b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b271120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b271120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b271470"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2715f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b271780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b271908"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b271a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b271c18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b271da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b270020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b278a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b278a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b278da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b276020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b276330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b276640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2767c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b276950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b274e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b274e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2731a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b273330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2734b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b273640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2737c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b273950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b273ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b273c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b2702a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b2702a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2705f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b270780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b270908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b270a90"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b270c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b270da0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b26f020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b26f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ae4180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ae4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ae44d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ae4658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ae47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ae4968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ae4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ae4c78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ae4e00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ae3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ae1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ae1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ae1450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ae15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ae1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ae18e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ae1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ae1bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ae1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ae0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ade100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ade100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ade450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ade5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ade760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ade8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29adea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29adebf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29aded80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29add020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29adb100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29adb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29adb450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29adb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29adb760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29adb8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29adba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29adbbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29adbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ad8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ad8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ad8450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ad85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ad8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ad88e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ad8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ad8bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ad8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ad7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ad5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ad5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ad5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ad55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ad5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ad58e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ad5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ad5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ad5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29ad2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29ad2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29ad2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29ad25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29ad2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29ad28e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ad2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29ad2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ad2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ad1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29acf100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29acf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29acf450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29acf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29acf760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29acf8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29acfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29acfbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29acfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29ace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6f2b267740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6f2b267740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b267a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b267c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b267da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b266020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b266330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2664b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b266640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6f2b264bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6f2b264bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b263020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2631a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b263330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2634b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b263640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2637c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b263950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b263ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6f2b269500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6f2b269500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b269850"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2699d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b269b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b269ce8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b269e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b268020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2681a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b268330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6f2b2668c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6f2b2668c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b266c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b266da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b265020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2651a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b265330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2654b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b265640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6f2b263d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6f2b263d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2620d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b262260"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2623e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b262570"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2626f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b262880"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b262a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b262b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6f2b2685b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6f2b2685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b268908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b268a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b268c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b268da0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b267020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2671a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b267330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b2674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6f2b265a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6f2b265a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b265da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b264020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b264330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b264640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2647c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b264950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6f2b262e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6f2b262e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2611a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b261330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2614b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b261640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2617c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b261950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b261ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b261c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a7b180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a7b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a7b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a7b658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a7b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a7b968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a7baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a7bc78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a7be00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a78100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a78450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a785d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a78760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a788e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a78a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a78bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a78d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a75100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a75100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a75450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a755d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a75760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a758e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a75a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a75bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a75d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a72100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a72450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a725d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a72760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a728e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a72a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a72bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a72d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a6f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a6f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a6f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a6f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a6f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a6f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a6fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a6fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a6fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a6c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a6c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a6c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a6c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a6c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a6c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a6ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a6cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a6cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a69100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a69450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a695d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a69760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a698e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a69a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a69bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a69d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f29a66100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f29a66100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29a66450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29a665d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29a66760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29a668e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29a66a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29a66bf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29a66d80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29a65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b25a3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b25a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b25a730"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b25a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b25aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b25abc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b25ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b243020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2431a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b243330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b240c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b240c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b23f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b23f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b23f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b23f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b23f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b23f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b23f950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b23fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b23a3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b23a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b23a730"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b23a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b23aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b23abc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b23ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b239020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2391a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b239330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b235c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b235c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b234020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2341a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b234330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2344b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b234640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2347c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b234950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b234ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b2303e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b2303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b230730"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2308b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b230a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b230bc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b230d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b22f020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b22f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b22f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b22bc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b22bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b22a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b22a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b22a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b22a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b22a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b22a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b22a950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b22aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b226480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b226480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2267d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b226958"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b226ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b226c68"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b226df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b224020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2241a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b224330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b221c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b221c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b220020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2201a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b220330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2204b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b220640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2207c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b220950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b220ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b21b520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b21b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b21b870"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b21b9f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b21bb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b21bd08"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b21a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b21a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b21a330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b21a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b217cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b217cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b2150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b215228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b2153b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b215538"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b2156c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b215848"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2159d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b215b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b2113e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b2113e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b211730"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2118b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b211a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b211bc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b211d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b210020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2101a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b210330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b20cc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b20cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b20b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b20b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b20b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b20b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b20b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b20b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b20b950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b20bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b2073e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b2073e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b207730"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2078b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b207a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b207bc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b207d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b206020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b2061a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b206330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6f2b202c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6f2b202c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b201020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b2011a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b201330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b2014b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b201640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b2017c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b201950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b201ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2b1c84b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2b1c84b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b1c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f6f2b1c8ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2b1c8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f6f2b1c8e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f6f2b1c7020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f6f2b1c71a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f6f2b1c7330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f6f2b1c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6f2b1a8418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2b1a8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b1a8768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6f2b35ac38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f6f2b35ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6f2b1a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f6f2b1a9ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2b1a9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b1a80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f6f2b1a9308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b1a9308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b1a9658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6f2b1a97e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6f2b1a9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6f2b46a368" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b46a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2b46a6b8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2b46a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6f2b469b30" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b469b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b469e80"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6f2b49a030"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6f2b49a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6f2b3a0980" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f6f2b3a0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2b3a0cd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2b3a0e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f6f2b39ee20" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f6f2b39ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f6f2b39d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6f2b3a1a18" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6f2b3a1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b3a1d68"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6f2b3a0020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6f2b3a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f6f2b37e668" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6f2b37e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6f2b37e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f6f2b460bc0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f6f2b460bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f6f2b382020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f6f2b37f0f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2b37f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6f2b37f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6f2b190c38" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2b190c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2b19a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2b19a1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2b19a330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2b19a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2b19a640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b19a7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2b19a950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2b199020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b19aad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2b19ac60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2b19ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f6f2b18bce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f6f2b18bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b18a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b18a228"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b18a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b18a538"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b18a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b18a848"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b18a9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b18ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2b18c020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2b18c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b18c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f6f2b18ae70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f6f2b18ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b1891e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b189370"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b1894f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b189680"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b189808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b189990"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b189b18"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b189ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6f2b18c5e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2b18c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2b18c938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2b18cac0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2b18cc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2b18cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2b18b020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b18b1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2b18b330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2b18b950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b18b4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2b18b640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2b18b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f6f2b188020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f6f2b188020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b188370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b1884f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b188680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b188808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b188990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b188b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b188ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b188e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f6f2b18de10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f6f2b18de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b16d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b16d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b16d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b16d640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b16d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b16d950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b16dad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b16dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f6f2b16c020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f6f2b16c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b16c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b16c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b16c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b16c808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b16c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b16cb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b16cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b16ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f6f2b1692d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2b1692d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2b169628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f6f2b16a1b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f6f2b16a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2b16a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2b16a688"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2b16a810"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2b16a998"/>
        <function-ref name="get" scoped="" ref="0x7f6f2b16ab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2b16aca8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2b16ae30"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2b169020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x7f6f2ac7daa0" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="Mts400TesterC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7f6f2ac7daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2ac7b620"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2ac7ba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x7f6f2ac7a1a8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="Mts400TesterC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7f6f2ac7a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2ac7acf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2ac791c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Resoure" ref="0x7f6f2999fd98" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Resoure" scoped="" ref="0x7f6f2999fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2999e170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2999e2f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2999e480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2999e608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2999e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XRead" ref="0x7f6f2999d888" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XRead" scoped="" ref="0x7f6f2999d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2999c458"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2999c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x7f6f299a1020" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7f6f299a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f299a1b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f299a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Resoure" ref="0x7f6f2999ea58" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Resoure" scoped="" ref="0x7f6f2999ea58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2999eda8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2999d020"/>
        <function-ref name="request" scoped="" ref="0x7f6f2999d1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2999d330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2999d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YRead" ref="0x7f6f2999a020" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YRead" scoped="" ref="0x7f6f2999a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2999ab68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29999020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x7f6f299a0700" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="Mts400TesterC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7f6f299a0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2999f370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2999f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x7f6f2b12e258" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x7f6f2b12e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2b12eda0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2b12c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2b12f428" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b12f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b12f778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b12f900"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b12fa88"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b12fc10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b12fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x7f6f2b12c9d8" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x7f6f2b12c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2b12b560"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2b12b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YADC" ref="0x7f6f2b100a88" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YADC" scoped="" ref="0x7f6f2b100a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2b100dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f6f2b0ff100" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f6f2b0ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2b0ff450"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2b0ff5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XADC" ref="0x7f6f2b100470" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XADC" scoped="" ref="0x7f6f2b100470"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2b1007c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7f6f2b0ff8a0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7f6f2b0ff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2b0ffbf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2b0ffd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x7f6f2b105168" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x7f6f2b105168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2b105cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2b104158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f6f2b101a18" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2b101a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2b101d68"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2b100020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2b1001a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2b102dc0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b102dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b101170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b1012f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b101480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b101608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b101790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x7f6f2b104838" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x7f6f2b104838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2b1023d8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2b102828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2b0f81c8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <component-ref qname="HplAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b0f81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b0f8518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b0f86a0"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b0f8828"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b0f89b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b0f8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2b0efdc0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2b0efdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2b0f3170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2b0f32f8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2b0f3480"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2b0f3608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_X" ref="0x7f6f2b0ee3c0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f6f2b0ee3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0ee710"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b0ee898"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0eea20"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b0eeba8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0eed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_Y" ref="0x7f6f2b0e9150" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f6f2b0e9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0e94a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b0e9628"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0e97b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b0e9938"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0e9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2b0e9da0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b0e9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b0e8170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b0e82f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b0e8480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b0e8608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b0e8790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccelPower" ref="0x7f6f2b0f2578" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f6f2b0f2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0f28c8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b0f2a50"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0f2bd8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b0f2d60"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DcDcBoost33Channel" ref="0x7f6f2b0ea818" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f6f2b0ea818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0eab68"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b0eacf0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0eae78"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b0f2030"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0f21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2b04faf8" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2b04faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2b04fe68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2b04e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2b04d6d8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2b04d6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2b04da48"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2b04dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2b04e268" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b04e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b04e5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2b04e740"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b04e8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b04ea50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2b04ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2b051d80" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b051d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b04f170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b04f2f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b04f480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b04f608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b04f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2b04ee20" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b04ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2b04d1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2b04d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2996b978" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2996b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2996bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f2996a020" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2996a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f2996a370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f2996a4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f2996a680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f2996a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f29967d58" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29967d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f299660f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29966278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f29965980" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29965980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29965cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29965e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f29964130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f29964130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29964480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29964608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29964790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29964918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f299664c0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f299664c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29966810"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29966998"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29966b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29966ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29966e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f29964b60" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f29964b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f29963020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f299631a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f29963330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f299634b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f29963640"/>
        <function-ref name="get" scoped="" ref="0x7f6f299637c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f29963950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f29962020"/>
        <function-ref name="set" scoped="" ref="0x7f6f29963c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f29963ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f29963de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29967060" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29967060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f299673d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f29967558"/>
        <function-ref name="request" scoped="" ref="0x7f6f299676e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29967868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f299679f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f299650e0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f299650e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29965430"/>
        <function-ref name="userId" scoped="" ref="0x7f6f299655b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f299622e8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f299622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29962638"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f299627c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f2b049d50" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2b049d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2b01d0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2b01d260"/>
        <function-ref name="start" scoped="" ref="0x7f6f2b01d3e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2b01d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2b01d7b8" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2b01d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2b01db08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2b01dd50" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b01dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b01c0d8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2b01c260"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b01c3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b01c570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2b01c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2b01c940" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b01c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2b01cc90"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2b01ce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f29933740" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f29933740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f29933a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f29933c18"/>
        <function-ref name="start" scoped="" ref="0x7f6f29933da0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29932020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f29932268" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29932268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f299325b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f6f29931b90" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f6f29931b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29930020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f299301a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f29932800" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29932800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29932b50"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29932cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29932e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29931020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f299311a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f6f29930470" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f6f29930470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f299307c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f29930948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f6f29933020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6f29933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f29933370"/>
        <function-ref name="stop" scoped="" ref="0x7f6f299334f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f299313f0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f299313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29931740"/>
        <function-ref name="userId" scoped="" ref="0x7f6f299318c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDin" ref="0x7f6f2b015d58" loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f6f2b015d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0140d8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b014260"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0143e8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b014570"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0146f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_Y" ref="0x7f6f2b016150" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f6f2b016150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0164a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b016628"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0167b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b016938"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b016ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityData" ref="0x7f6f2b011558" loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f6f2b011558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0118a8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b011a30"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b011bb8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b011d40"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b010020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressurePower" ref="0x7f6f2b00ee40" loc="89:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f6f2b00ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00d1c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00d348"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00d4d0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b00d658"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b00d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDout" ref="0x7f6f2b014ac8" loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f6f2b014ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b014e18"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b013020"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b0131a8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b013330"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelThermopile_Select_Cnt" ref="0x7f6f2b013908" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7f6f2b013908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b013c58"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b013de0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b012020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b0121a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b012330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost5Channel" ref="0x7f6f2b009588" loc="106:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7f6f2b009588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b0098d8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b009a60"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b009be8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b009d70"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b008020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityPower" ref="0x7f6f2b00dba0" loc="92:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f6f2b00dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00c020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00c1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00c330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b00c4b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b00c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityClock" ref="0x7f6f2b0126f0" loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f6f2b0126f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b012a40"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b012bc8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b012d50"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b011020"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelEepromPower" ref="0x7f6f2b00c9e8" loc="95:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelEepromPower" scoped="" ref="0x7f6f2b00c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00ce38"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00b020"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00b1a8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b00b330"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b00b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelLightPower" ref="0x7f6f2b0103c0" loc="83:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7f6f2b0103c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b010710"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b010898"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b010a20"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b010ba8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b010d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureClock" ref="0x7f6f2b015020" loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f6f2b015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b015370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b0154f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b015680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b015808"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b015990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2b0087f0" loc="110:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b0087f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b008b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b008cc8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b008e50"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b007020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b0071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2PowerNull" ref="0x7f6f2b00e110" loc="86:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2PowerNull" scoped="" ref="0x7f6f2b00e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00e460"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00e5e8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00e770"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b00e8f8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b00ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_X" ref="0x7f6f2b0173b8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f6f2b0173b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b017708"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b017890"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b017a18"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b017ba0"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b017d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccelPower" ref="0x7f6f2b00b858" loc="98:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f6f2b00b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00bba8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00bd30"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00a020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b00a1a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b00a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost33Channel" ref="0x7f6f2b00a6d8" loc="101:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f6f2b00a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2b00aa28"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2b00abb0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2b00ad38"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2b009020"/>
        <function-ref name="close" scoped="" ref="0x7f6f2b0091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2b005698" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2b005698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2b005a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2b005b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2b0023c8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2b0023c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2b002738"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2b0028c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2b005dd8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2b005dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b003170"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2b0032f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b003480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b003608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2b003790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2b006908" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2b006908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2b006c78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2b006e00"/>
        <function-ref name="request" scoped="" ref="0x7f6f2b005020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2b0051a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2b005330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2b0039d8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2b0039d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2b003d28"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2b002020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29915020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29915020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29915370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f299155f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f299155f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29915948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29915ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29915c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29915de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f29912388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29912388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f299126f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29912880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f29910020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29910390"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29910518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f299107a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f299107a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29910af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29910c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29910e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f2990f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f29912ac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29912ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29912e18"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29911020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f299111a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29911330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f299114b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f2990f268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2990f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2990f5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2990f740"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2990f8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2990fa50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2990fbd8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2990fd60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2990d020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2990d640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2990d330"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2990d1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2990d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29913630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29913630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f299139a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f29913b28"/>
        <function-ref name="request" scoped="" ref="0x7f6f29913cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29913e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29912020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f29911700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29911700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29911a50"/>
        <function-ref name="userId" scoped="" ref="0x7f6f29911bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f2990d908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f2990d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2990dc58"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2990dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f6f2ae312a8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae312a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae315f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae31780"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae31908"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae31a90"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae31c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f6f2ae36430" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae36430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae36780"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae36908"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae36a90"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae36c18"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae36da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f6f2ae348c8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae348c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae34c18"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae34da0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae32020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae321a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f6f2ae30020" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae30370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae304f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae30680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae30808"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae30990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f6f2ae35060" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae353b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae35538"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae356c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae35848"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae359d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f6f2ae325b8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae32908"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae32a90"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae32c18"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae32da0"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f6f2ae377f8" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae377f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae37b48"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae37cd0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae37e58"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae36020"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f6f2ae35c58" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae35c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae34020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae341a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae34330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae344b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f6f298d6020" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f6f298d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d6370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d64f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d6680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d6808"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f6f298da020" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f6f298da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298da370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298da4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298da680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298da808"/>
        <function-ref name="close" scoped="" ref="0x7f6f298da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f6f298d85b8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f6f298d85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d8908"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d8a90"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d8c18"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d8da0"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f6f298d6c18" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f6f298d6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d5020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d51a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d5330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d54b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f6f298dac18" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f6f298dac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d9020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d91a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d9330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d94b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f6f298d72a8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f6f298d72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d75f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d7780"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d7908"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d7a90"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d7c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f298d03e0" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f298d03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f298d0730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f298d08b8"/>
        <function-ref name="request" scoped="" ref="0x7f6f298d0a40"/>
        <function-ref name="granted" scoped="" ref="0x7f6f298d0bc8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f298d0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f298d59f0" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298d59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f298d4598"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f298d18b0"/>
        <function-ref name="write" scoped="" ref="0x7f6f298d2150"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f298d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f6f298db3d8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f6f298db3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298db728"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298db8b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298dba38"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298dbbc0"/>
        <function-ref name="close" scoped="" ref="0x7f6f298dbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f6f298d98c8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f6f298d98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298d9c18"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298d9da0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298d8020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298d81a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f298d8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f6f298b12e8" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f6f298b12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f298b1638"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f298b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f6f298b2060" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7f6f298b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f298b23d0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f298b2558"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f298b26e0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f298b2868"/>
        <function-ref name="close" scoped="" ref="0x7f6f298b29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f298b2c38" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f298b2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f298b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f298b4888" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f298b4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f298b4bd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f298b4d60"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f298b3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f298b31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f298b3330"/>
        <function-ref name="get" scoped="" ref="0x7f6f298b34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f298b3640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f298b3c60"/>
        <function-ref name="set" scoped="" ref="0x7f6f298b3950"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f298b37c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f298b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f298b6bc8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f298b6bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f298b4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f298b41a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f298b4330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f298b44b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f298b4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f298b91e8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298b91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f298b9d68"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f298b60f8"/>
        <function-ref name="write" scoped="" ref="0x7f6f298b8928"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f298b7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7f6f298b1a88" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7f6f298b1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f298b1dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f298b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f298cd8e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f298cd8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f298cdc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f298cddc0"/>
        <function-ref name="request" scoped="" ref="0x7f6f298cc020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f298cc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f298cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f298cc6c0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f298cc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f298cb3a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f298c8790"/>
        <function-ref name="write" scoped="" ref="0x7f6f298c9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f298c9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2af6e538" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2af6e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af6e888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2af6ea10"/>
        <function-ref name="request" scoped="" ref="0x7f6f2af6eb98"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af6ed20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f2af6d9b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af6d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2af6c560"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2af698b0"/>
        <function-ref name="write" scoped="" ref="0x7f6f2af6b130"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2af6bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2af64388" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2af64388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2af646f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2af64880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2af62020" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2af62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2af62390"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2af62518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2af64ac8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2af64ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af64e18"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2af63020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af631a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af63330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2af634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2af665f0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2af665f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af66960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2af66ae8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2af66c70"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af66df8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2af63700" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2af63700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2af63a50"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2af63bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2987f220" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2987f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2987f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f2987f7f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2987f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f2987fb48"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f2987fcd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f2987fe58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f2987e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2987c698" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2987c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2987ca08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2987cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2987a3e8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2987a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2987a758"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2987a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f2987ab68" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f2987ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29878020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f298781a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29878330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f298784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2987cdd8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2987cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2987b170"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2987b2f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2987b480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2987b608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2987b790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f29878700" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f29878700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f29878a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f29878bd8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f29878d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f29877020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f298771a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29877330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f298774b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f29877ad8"/>
        <function-ref name="set" scoped="" ref="0x7f6f298777c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f29877640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f29877950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2987d830" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2987d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2987dba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2987dd28"/>
        <function-ref name="request" scoped="" ref="0x7f6f2987c020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2987c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2987c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2987b9d8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2987b9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2987bd28"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2987a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f29877da0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f29877da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29876170"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f298762f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2af5f020" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2af5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2af5f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2af5f5b8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2af5f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af5f908"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2af5fa90"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af5fc18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af5fda0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2af52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6f2af607f8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2af607f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f2af60b48"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2af60cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2af52268" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2af52268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2af525b8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2af52740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f6f2af10420" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f6f2af10420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f6f2af10770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2af15a10" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2af15a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2af145d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2af118e8"/>
        <function-ref name="write" scoped="" ref="0x7f6f2af12190"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2af12d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f2af109f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2af109f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2af10d48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2af0f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2af0f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2af0f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2af0f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2af0f640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2af0f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2af0fde8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2af0fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2af0f950"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2af0fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2af4f140" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2af4f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af4f4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2af4f638"/>
        <function-ref name="request" scoped="" ref="0x7f6f2af4f7c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af4f948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af4fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f2af1a020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2af1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2af1abc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2af16020"/>
        <function-ref name="write" scoped="" ref="0x7f6f2af19790"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2af17388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f6f2af16c70" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f6f2af16c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2af15020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2af151a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2af15330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2af154b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2af15640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f6f2aea5318" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f6f2aea5318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f6f2aea5668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f6f2aea5930" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f6f2aea5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f6f2aea5c80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f6f2aea5e08"/>
        <function-ref name="setStart" scoped="" ref="0x7f6f2aea4020"/>
        <function-ref name="status" scoped="" ref="0x7f6f2aea41a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f6f2aea4330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2aea44b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f2aea4640"/>
        <function-ref name="read" scoped="" ref="0x7f6f2aea47c8"/>
        <function-ref name="init" scoped="" ref="0x7f6f2aea4950"/>
        <function-ref name="enableAck" scoped="" ref="0x7f6f2aea4ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f2aea4c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7f6f2aea4de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f2aea3020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f6f2aea32a8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2aea3430"/>
        <function-ref name="write" scoped="" ref="0x7f6f2aea35b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f6f2aea3740"/>
        <function-ref name="off" scoped="" ref="0x7f6f2aea38c8"/>
        <function-ref name="setStop" scoped="" ref="0x7f6f2aea3a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f6f2aea3bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f2aea3d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7f6f2aea2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f6f2aea22e8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f6f2aea22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2aea2638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2aea27c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2aea2948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2aea2ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2aea2c58"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aea2de0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2aea1020"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2aea1640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aea1330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2aea11a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2aea14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f6f2aea1908" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f6f2aea1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2aea1c58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2aea1de0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2aea0020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2aea01a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2aea0330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aea04b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2aea0640"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2aea0c60"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aea0950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2aea07c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2aea0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6f2af0be60" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2af0be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f2aeaa1e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aeaa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f2aeaa700" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2aeaa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2aea93a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2aea6790"/>
        <function-ref name="write" scoped="" ref="0x7f6f2aea8020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2aea8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f6f2ae9d828" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f6f2ae9d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f6f2ae9db78"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f6f2ae9dd00"/>
        <function-ref name="setStart" scoped="" ref="0x7f6f2ae9a020"/>
        <function-ref name="status" scoped="" ref="0x7f6f2ae9a1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f6f2ae9a330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2ae9a4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f2ae9a640"/>
        <function-ref name="read" scoped="" ref="0x7f6f2ae9a7c8"/>
        <function-ref name="init" scoped="" ref="0x7f6f2ae9a950"/>
        <function-ref name="enableAck" scoped="" ref="0x7f6f2ae9aad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f2ae9ac60"/>
        <function-ref name="hasStart" scoped="" ref="0x7f6f2ae9ade8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f2ae99020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f6f2ae992a8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ae99430"/>
        <function-ref name="write" scoped="" ref="0x7f6f2ae995b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f6f2ae99740"/>
        <function-ref name="off" scoped="" ref="0x7f6f2ae998c8"/>
        <function-ref name="setStop" scoped="" ref="0x7f6f2ae99a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f6f2ae99bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f2ae99d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7f6f2ae98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f6f2ae951d8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f6f2ae951d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f6f2ae95528"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f6f2ae956b0"/>
        <function-ref name="setStart" scoped="" ref="0x7f6f2ae95838"/>
        <function-ref name="status" scoped="" ref="0x7f6f2ae959c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f6f2ae95b48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2ae95cd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f2ae95e58"/>
        <function-ref name="read" scoped="" ref="0x7f6f2ae94020"/>
        <function-ref name="init" scoped="" ref="0x7f6f2ae941a8"/>
        <function-ref name="enableAck" scoped="" ref="0x7f6f2ae94330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f2ae944b8"/>
        <function-ref name="hasStart" scoped="" ref="0x7f6f2ae94640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f2ae947c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f6f2ae94a50"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ae94bd8"/>
        <function-ref name="write" scoped="" ref="0x7f6f2ae94d60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f6f2ae93020"/>
        <function-ref name="off" scoped="" ref="0x7f6f2ae931a8"/>
        <function-ref name="setStop" scoped="" ref="0x7f6f2ae93330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f6f2ae934b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f2ae93640"/>
        <function-ref name="hasStop" scoped="" ref="0x7f6f2ae937c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f6f2ae93b50" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f6f2ae93b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae92020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae921a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae92330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae924b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae92640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae927c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae92950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae92ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f6f2ae92e08" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f6f2ae92e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae911a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae91330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae914b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae91640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae917c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae91950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae91ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae91c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2ae5dd08" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2ae5dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2ae5a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f6f2ae5a358" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2ae5a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2ae5a6a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2ae5a830"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2ae5a9b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2ae5ab40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2ae5acc8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae5ae50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2ae59020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2ae59640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae591a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2ae59330"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2ae594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f6f2ae26020" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f6f2ae26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae26370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae264f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae26680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae26808"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae26990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f6f2ae2a060" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f6f2ae2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae2a3b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae2a538"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae2a6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae2a848"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae2a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f6f2ae285b8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f6f2ae285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae28908"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae28a90"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae28c18"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae28da0"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f6f2ae26c18" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f6f2ae26c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae24020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae241a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae24330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae244b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae24640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f6f2ae2ac58" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f6f2ae2ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae29020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae291a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae29330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae294b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae29640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f6f2ae272a8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f6f2ae272a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae275f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae27780"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae27908"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae27a90"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae27c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f6f2ae2b438" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f6f2ae2b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae2b788"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae2b910"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae2ba98"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae2bc20"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae2bda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f6f2ae298c8" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f6f2ae298c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2ae29c18"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2ae29da0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2ae28020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2ae281a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2ae28330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f6f297ec2a8" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f6f297ec2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297ec5f8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297ec780"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297ec908"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297eca90"/>
        <function-ref name="close" scoped="" ref="0x7f6f297ecc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f6f297f0430" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f6f297f0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297f0780"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297f0908"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297f0a90"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297f0c18"/>
        <function-ref name="close" scoped="" ref="0x7f6f297f0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f6f297ee8c8" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f6f297ee8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297eec18"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297eeda0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297ed020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297ed1a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f297ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f6f297eb020" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f6f297eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297eb370"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297eb4f8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297eb680"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297eb808"/>
        <function-ref name="close" scoped="" ref="0x7f6f297eb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f6f297ef060" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f6f297ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297ef3b0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297ef538"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297ef6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297ef848"/>
        <function-ref name="close" scoped="" ref="0x7f6f297ef9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f6f297ed5b8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f6f297ed5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297ed908"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297eda90"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297edc18"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297edda0"/>
        <function-ref name="close" scoped="" ref="0x7f6f297ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f297e6718" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f297e6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f297e6a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f297e6bf0"/>
        <function-ref name="request" scoped="" ref="0x7f6f297e6d78"/>
        <function-ref name="granted" scoped="" ref="0x7f6f297e5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f297e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f297ebd40" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297ebd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f297e98f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f297e7c08"/>
        <function-ref name="write" scoped="" ref="0x7f6f297e84c8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f297e7088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f6f297f16e8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f6f297f16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297f1a38"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297f1bc0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297f1d48"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297f0020"/>
        <function-ref name="close" scoped="" ref="0x7f6f297f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f6f297efc58" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f6f297efc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297ee020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297ee1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297ee330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297ee4b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f297ee640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f6f297c6020" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f6f297c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f297c6370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f297c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f6f297c8b90" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7f6f297c8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f297c7020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f297c71a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f297c7330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f297c74b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f297c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f297c7888" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f297c7888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f297c7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f297c93f0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f297c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f297c9740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f297c98c8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f297c9a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f297c9bd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f297c9d60"/>
        <function-ref name="get" scoped="" ref="0x7f6f297c8020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f297c81a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f297c87c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f297c84b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f297c8330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f297c8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f297ca6e0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f297ca6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f297caa30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f297cabb8"/>
        <function-ref name="request" scoped="" ref="0x7f6f297cad40"/>
        <function-ref name="granted" scoped="" ref="0x7f6f297c9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f297c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f297cfb98" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297cfb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f297ce760"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f297ccba0"/>
        <function-ref name="write" scoped="" ref="0x7f6f297cd388"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f297cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7f6f297c67c0" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7f6f297c67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f297c6b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f297c6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f297e3e18" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f297e3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f297e21a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f297e2330"/>
        <function-ref name="request" scoped="" ref="0x7f6f297e24b8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f297e2640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f297e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f297e2b58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f297e2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f297e1728"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f297dea28"/>
        <function-ref name="write" scoped="" ref="0x7f6f297df300"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f297dfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f6f2ae06020" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f6f2ae06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ae06370"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ae064f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ae06680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ae06808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f6f2adfd980" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f6f2adfd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f6f2ae12de0" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f6f2ae12de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae11170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae112f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae11480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae11608"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae11790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae11918"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae11aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae11c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f6f2ae0d328" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f6f2ae0d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae0d678"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae0d800"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae0d988"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae0db10"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae0dc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae0de20"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae0c020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f6f2adfcd00" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f6f2adfcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f6f2adfba30" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f6f2adfba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f6f2ae0a7d0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f6f2ae0a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae0ab20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae0aca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae0ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae09020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae09330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae094b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae09640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f6f2adfe808" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f6f2adfe808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2adfeb58"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2adfece0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2adfee68"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2adfd020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2adfd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2adfd330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2adfd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2adfd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f6f2ae14ad0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f6f2ae14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae14e20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae13020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae13330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae13640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae137c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae13950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f6f2ae10020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f6f2ae10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae10370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae104f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae10680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae10808"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae10990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae10b18"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae10ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae10e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f6f2ae05858" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f6f2ae05858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ae05ba8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ae05d30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ae01020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ae011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f6f2adfc020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f6f2adfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f6f2adff680" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f6f2adff680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2adff9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2adffb58"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2adffce0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2adffe68"/>
        <function-ref name="get" scoped="" ref="0x7f6f2adfe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2adfe1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2adfe330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2adfe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f6f2ae0c4b0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f6f2ae0c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae0c800"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae0c988"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae0cb10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae0cc98"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae0ce20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae0b020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae0b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae0b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f6f2ae022b0" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f6f2ae022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ae02700"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ae02888"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ae02a10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ae02b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f6f2adfa340" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f6f2adfa340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfa690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f6f2ae09958" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f6f2ae09958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae09ca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae09e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae08020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae081a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae08330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae084b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae08640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f6f2ae13c58" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f6f2ae13c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae12020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae121a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae12330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae124b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae12640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae127c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae12950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae12ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f6f2ae0e180" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f6f2ae0e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae0e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae0e658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae0e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae0e968"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae0eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae0ec78"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae0ee00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f6f2adfc690" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f6f2adfc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f6f2adfb3c0" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f6f2adfb3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f6f2ae0b648" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f6f2ae0b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae0b998"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae0bb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae0bca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae0be30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae0a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae0a330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae0a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f6f2ae06ba8" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f6f2ae06ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ae05020"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ae051a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ae05330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ae054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f6f2ae014f8" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f6f2ae014f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae01848"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae019d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae01b58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae01ce0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae01e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2adff020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2adff1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2adff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f6f2adfa9b0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f6f2adfa9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adfad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f6f2ae17868" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f6f2ae17868"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae17bb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae17d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae14020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae141a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae14330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae144b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae14640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f6f2ae08ae0" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f6f2ae08ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2ae08e30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2ae07020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2ae071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2ae07330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2ae074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2ae07640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2ae077c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2ae07950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f6f2adf9c28" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f6f2adf9c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f6f2adf5060" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f6f2adf5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf53b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f6f2adf5d40" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f6f2adf5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f6f2adf6340" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f6f2adf6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f6f2adf43f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f6f2adf43f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f6f2adf69b0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f6f2adf69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f6f2adf56d0" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f6f2adf56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f6f2adf4a68" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f6f2adf4a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2adf4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f6f2adddb38" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f6f2adddb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2addc020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2addc1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2addc330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2addc4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2addc640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2addc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f6f2ade6c88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f6f2ade6c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ade5020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ade51a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ade5330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ade54b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ade5640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ade57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f6f2addfb38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f6f2addfb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2adde020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2adde1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2adde330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2adde4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2adde640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2adde7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f6f2addcb38" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f6f2addcb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2addb020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2addb1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2addb330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2addb4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2addb640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2addb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f6f2ade5b38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f6f2ade5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ade0020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ade01a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ade0330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ade04b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ade0640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ade07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f6f2addeb38" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f6f2addeb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2addd020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2addd1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2addd330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2addd4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2addd640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2addd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f6f2ade1da0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f6f2ade1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ade6170"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ade62f8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ade6480"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ade6608"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ade6790"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ade6918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f6f2ade0b38" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f6f2ade0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2addf020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2addf1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2addf330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2addf4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2addf640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2addf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f6f2add3758" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f6f2add3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f6f2add7020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f6f2add7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f6f2add6758" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f6f2add6758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f6f2add2020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f6f2add2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f6f2add7758" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f6f2add7758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f6f2add3020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f6f2add3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f6f2add5850" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f6f2add5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f6f2add6020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f6f2add6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2add6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2adb7258" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2adb7258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2adb75a8"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2adb7730"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2adb78b8"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2adb7a40"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2adb7bc8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2adb7d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ada3060" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ada3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ada33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ada0cf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ada0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad9f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad9f228"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad9f3b0"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad9f538"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad9f6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad9f848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad9fb10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad9fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad9fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad9c7e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad9c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad9cb38"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad9ccc0"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad9ce48"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad9b020"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad9b1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad9b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad9b5f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad9b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad9b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad983e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad983e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad98730"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad988b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad98a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad98bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad98d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad962e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad962e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad96638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad93020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad93370"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad934f8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad93680"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad93808"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad93990"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad93b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad93de0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad93de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad92170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad90c38" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad90c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad8f020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad8f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad8f330"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad8f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad8f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad8f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad8fa90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad8fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad8fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad8b7a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad8b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad8baf8"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad8bc80"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad8be08"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad8a020"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad8a1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad8a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad8a5f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad8a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad8a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f6f2ad873e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f6f2ad873e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad87730"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad878b8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad87a40"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad87bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad87d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f6f2ad862e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f6f2ad862e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad86638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f6f2ad7a060" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad7a3b0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad7a538"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad7a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad7a848"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad7a9d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad7ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6f2ad7b578" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad7b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad7b8c8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad7ba50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ad7bbd8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ad7bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f6f2ad69780" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad69780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad69ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad69c58"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad69de0"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad68020"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad681a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6f2ad6ac80" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad6ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad69020"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad691a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ad69330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ad694b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f6f2ad65020" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad65370"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad654f8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad65680"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad65808"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad65990"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad65b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6f2ad66458" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad66458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad667a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad66930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ad66ab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ad66c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f6f2ad62780" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6f2ad62780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2ad62ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad62c58"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad62de0"/>
        <function-ref name="edge" scoped="" ref="0x7f6f2ad60020"/>
        <function-ref name="enable" scoped="" ref="0x7f6f2ad601a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6f2ad63c80" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f6f2ad63c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2ad62020"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2ad621a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2ad62330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2ad624b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2ad491c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ad491c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2ad49518"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2ad496a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f6f2ad43420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f6f2ad43420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2ad43770"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ad438f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f6f2ad4bac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2ad4bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2ad4be10"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2ad4a020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ad4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2ad4fe48" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2ad4fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ad4b1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2ad4b348"/>
        <function-ref name="request" scoped="" ref="0x7f6f2ad4b4d0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ad4b658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ad4b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2ad416e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2ad416e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2ad41a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f6f2ad40e60" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f6f2ad40e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2ad3f1e8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ad3f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f6f2ad40508" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f6f2ad40508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2ad40858"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2ad409e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ad40b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f6f2ad30940" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2ad30940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f6f2ad30c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f6f2ad30e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f6f2ad3e020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2ad3e1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f6f2ad3e330"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f6f2ad3e4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f6f2ad3e640"/>
        <function-ref name="isComplete" scoped="" ref="0x7f6f2ad3e7c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2ad3e950"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f6f2ad3ead8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f6f2ad3ec60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f6f2ad3ede8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f6f2ad3d020"/>
        <function-ref name="isStarted" scoped="" ref="0x7f6f2ad3d2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f6f2ad3d430"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f6f2ad3d5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f6f2ad3d740"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2ad3d8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ad3da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6f2ad41d18" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2ad41d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f2ad400a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ad40228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f6f2ad3dd30" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6f2ad3dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f6f2ad2f0d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f6f2ad2f260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f6f2ad2f3e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f6f2ad2f570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f6f2ad2f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f6f2ad42a18" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2ad42a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f6f2ad42d68"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f6f2acfe020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f6f2acfe1a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2acfe330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f6f2acfe4b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f6f2acfe640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f6f2acfe7c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7f6f2acfe950"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2acfead8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f6f2acfec60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f6f2acfede8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f6f2acfd020"/>
        <function-ref name="startConversion" scoped="" ref="0x7f6f2acfd1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f6f2acfd430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f6f2acfd5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f6f2acfd740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f6f2acfd8c8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2acfda50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2acfdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f6f2acfccd0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f6f2acfccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f6f2acf90a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f6f2acf9228"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f6f2acf93b0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f6f2acf9538"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f6f2acf96c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f6f2acf9848"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f6f2acf99d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f6f2acf9b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2acf9ce0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f6f2acf9e68"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f6f2acf8020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f6f2acf81a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f6f2acf8330"/>
        <function-ref name="isStarted" scoped="" ref="0x7f6f2acf85b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f6f2acf8740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f6f2acf88c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f6f2acf8a50"/>
        <function-ref name="getValue" scoped="" ref="0x7f6f2acf8bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2acf8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f6f2acf70c0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6f2acf70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6f2acf7410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2ac97d18" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2ac97d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2ac960d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ac96260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2ac95960" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ac95960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2ac95cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2ac95e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2ac964a8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac964a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ac967f8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2ac96980"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ac96b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ac96c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ac96e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2ac97020" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2ac97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ac97390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2ac97518"/>
        <function-ref name="request" scoped="" ref="0x7f6f2ac976a0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ac97828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ac979b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2ac950e0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ac950e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2ac95430"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2ac955b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2973a738" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2973a738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2973aa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f6f2973ad10" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6f2973ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f297380a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29738228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f297383b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29738538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f29736af8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29736af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f29736e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29735020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f297346f8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f297346f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29734a68"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29734bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f29734e78" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f29734e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f297331f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29733380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29733508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29733690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f29735268" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29735268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f297355b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29735740"/>
        <function-ref name="granted" scoped="" ref="0x7f6f297358c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29735a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29735bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f297338d8" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f297338d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f29733c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f29733db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f29732020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f297321a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f29732330"/>
        <function-ref name="get" scoped="" ref="0x7f6f297324b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f29732640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f29732c60"/>
        <function-ref name="set" scoped="" ref="0x7f6f29732950"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f297327c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f29732ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29737d80" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29737d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29736170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f297362f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f29736480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29736608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29736790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f29735e20" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29735e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f297341a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f29734330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f29731020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f29731020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29731370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f297314f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2ac91c30" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2ac91c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2ac88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2ac88268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ac88268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ac885b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2ac88740"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ac888c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ac88a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ac88bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6f2ac91510" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f2ac91510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f2ac91860"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ac919e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2ac88e20" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ac88e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2ac871a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2ac87330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f29700740" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29700740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f29700a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f29700cd8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29700cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f296fe0a0"/>
        <function-ref name="requested" scoped="" ref="0x7f6f296fe228"/>
        <function-ref name="granted" scoped="" ref="0x7f6f296fe3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f296fe538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f296fe6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6f29700020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f29700020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f29700370"/>
        <function-ref name="stop" scoped="" ref="0x7f6f297004f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f296fe908" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f296fe908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f296fec58"/>
        <function-ref name="userId" scoped="" ref="0x7f6f296fede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x7f6f2ac76b70" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7f6f2ac76b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a9a9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a9a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Cal" ref="0x7f6f296f15f8" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7f6f296f15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f296f1948"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f296f1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PressRead" ref="0x7f6f296f3020" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PressRead" scoped="" ref="0x7f6f296f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f296f3b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f296f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7f6f296f5888" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x7f6f296f5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f296f4458"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f296f48a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f296f69b0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f296f69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f296f6d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f296f5020"/>
        <function-ref name="request" scoped="" ref="0x7f6f296f51a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f296f5330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f296f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x7f6f296f6250" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="Mts400TesterC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7f6f296f6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f296f65a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f296f6728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x7f6f2ac34608" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x7f6f2ac34608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2ac33198"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2ac335e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x7f6f2ac33c50" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7f6f2ac33c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2ac31020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2ac311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7f6f2ac36e18" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7f6f2ac36e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2ac359e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2ac35e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2ac36020" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2ac36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ac36370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2ac364f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2ac36680"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ac36808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ac36990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x7f6f2abcd908" loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x7f6f2abcd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abcdc58"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abcdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abcb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abcb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abcb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abcb4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abcb640"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abcb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x7f6f2abd5700" loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x7f6f2abd5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2abd4370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2abd47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x7f6f2abd4d98" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x7f6f2abd4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6f2abd3170"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f2abd32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x7f6f2abcba90" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x7f6f2abcba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abcbde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abca1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abca330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abca4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abca640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abca7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abca950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gotInterrupt" ref="0x7f6f2abcac18" loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="gotInterrupt" scoped="" ref="0x7f6f2abcac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2abc9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2abc91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x7f6f2abce740" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x7f6f2abce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abcea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abcec18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abceda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abcd020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abcd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abcd330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abcd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abcd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x7f6f2abd6020" loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x7f6f2abd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2abd6b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2abd5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPITask" ref="0x7f6f2abc9470" loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPITask" scoped="" ref="0x7f6f2abc9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2abc97c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2abc9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2abd36c8" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2abd36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2abcfa18"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2abd0158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2abd0e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2abd09f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2abce2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2abcfe68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2abd05a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2abd2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2abcf448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2abd2810"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2abd2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2abc31c8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <component-ref qname="HplIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2abc31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2abc3518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2abc36a0"/>
        <function-ref name="request" scoped="" ref="0x7f6f2abc3828"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2abc39b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2abc3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2abc2ce8" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2abc2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2abbe0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2abbe228"/>
        <function-ref name="start" scoped="" ref="0x7f6f2abbe3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2abbe538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDin" ref="0x7f6f2abbc570" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f6f2abbc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2abbc8c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2abbca48"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2abbcbd0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2abbcd58"/>
        <function-ref name="close" scoped="" ref="0x7f6f2abbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x7f6f2abb4820" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x7f6f2abb4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abb4b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abb4cf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abb4e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abb2030"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abb21b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abb2340"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abb24c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abb2650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x7f6f2abb29b8" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x7f6f2abb29b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abb2d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abb1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abb11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abb1330"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abb14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abb1640"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abb17c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abb1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressurePower" ref="0x7f6f2abbe918" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f6f2abbe918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2abbec68"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2abbedf0"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2abbd020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2abbd1a8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2abbd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDout" ref="0x7f6f2abbb3f0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f6f2abbb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2abbb740"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2abbb8c8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2abbba50"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2abbbbd8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2abbbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x7f6f2abb5520" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x7f6f2abb5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2abb5870"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2abb59f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2abb5b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2abb5d08"/>
        <function-ref name="get" scoped="" ref="0x7f6f2abb4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2abb41a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2abb4330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2abb44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureClock" ref="0x7f6f2abbd710" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f6f2abbd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2abbda60"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2abbdbe8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2abbdd70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2abbc020"/>
        <function-ref name="close" scoped="" ref="0x7f6f2abbc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2abb1c30" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2abb1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2abb0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2abb01a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2abb0330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2abb04b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2abb0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2abba188" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2abba188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2abb65f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2abb8a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2abb78c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2abb7470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2abb5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2abb6a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2abb7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2abbacd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2abb6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2abb8198"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2abb8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2ab8a820" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2ab8a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2ab8ab90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ab8ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2ab88550" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2ab88550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2ab888c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2ab88a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2ab89020" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ab89370"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2ab894f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ab89680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ab89808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ab89990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2ab8bad0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2ab8bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ab8be40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2ab8a020"/>
        <function-ref name="request" scoped="" ref="0x7f6f2ab8a1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ab8a330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ab8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2ab89bd8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab89bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2ab88020"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2ab881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2969a6e0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2969a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2969aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f2969acb8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f2969acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f296990a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29699228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f296993b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29699538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f29696af8" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29696af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f29696e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29695020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f296946f8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f296946f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29694a68"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29694bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f29694e78" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f29694e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f296931f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29693380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29693508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29693690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f29695268" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29695268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f296955b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29695740"/>
        <function-ref name="granted" scoped="" ref="0x7f6f296958c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29695a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29695bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f296938d8" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f296938d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f29693c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f29693db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f29692020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f296921a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f29692330"/>
        <function-ref name="get" scoped="" ref="0x7f6f296924b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f29692640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f29692c60"/>
        <function-ref name="set" scoped="" ref="0x7f6f29692950"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f296927c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f29692ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29698d80" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29698d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29696170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f296962f8"/>
        <function-ref name="request" scoped="" ref="0x7f6f29696480"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29696608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29696790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f29695e20" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29695e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f296941a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f29694330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f29691020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f29691020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29691370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f296914f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f2ab86800" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2ab86800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2ab86b50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2ab86cd8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2ab86e60"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ab85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2ab85268" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2ab85268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2ab855b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2ab85800" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2ab85800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2ab85b50"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2ab85cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2ab85e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2ab84020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2ab841a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2ab843f0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2ab843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2ab84740"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2ab848c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f29662740" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f29662740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f29662a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f29662c18"/>
        <function-ref name="start" scoped="" ref="0x7f6f29662da0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29661020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f29661268" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29661268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f296615b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f6f29660b90" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f6f29660b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2965f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2965f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f29661800" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f29661800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29661b50"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29661cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29661e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29660020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f296601a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f6f2965f470" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f6f2965f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2965f7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2965f948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f6f29662020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6f29662020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f29662370"/>
        <function-ref name="stop" scoped="" ref="0x7f6f296624f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f296603f0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f296603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29660740"/>
        <function-ref name="userId" scoped="" ref="0x7f6f296608c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2ab7ca60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2ab7ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a9bdd60"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a9be470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a9bd1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a9bed10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a9bc648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a9bc1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a9be8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a9bf620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a9bd790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a9bfac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a9be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6f2ab723c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab723c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2ab6e6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ab71db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2ab70ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2ab70688"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2ab6d020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2ab6eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2ab70238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2ab71020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2ab6e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2ab714c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ab71960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6f2ab6ab18" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f6f2ab6ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2ab66d98"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ab674d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2ab661f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2ab67d78"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2ab65688"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2ab65238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2ab67928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2ab686f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2ab667c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2ab68b90"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ab67088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6f2ab63108" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f2ab63108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2ab63c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2ab6ddd0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2ab6ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2ab6a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f6f2ab51150" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f6f2ab51150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2ab4d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f2ab4d930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f2ab4d4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2ab4ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2ab5f728" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2ab5f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2ab5fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f6f2ab5c020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6f2ab5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2ab54690"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2ab5b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2ab54088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2ab5bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2ab54b18"/>
        <function-ref name="start" scoped="" ref="0x7f6f2ab5cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2ab5b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f2aa587c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2aa587c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2aa54020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2aa56020"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2aa56930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2aa564a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2aa544a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aa57578"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aa57a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2aa58020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2aa58020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f6f2b48f7c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f6f2b48f7c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2aa58370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6f2aa54a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f2aa54a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2aa53828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f2aa52190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f2aa53cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2aa52618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f6f29628b60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29628b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6f29627020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6f296271a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f6f29627330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6f296274b8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f6f29627640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6f296277c8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f6f29627950"/>
        <function-ref name="setControlA" scoped="" ref="0x7f6f29627ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f296337c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f296337c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f29630020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29631020"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f29631930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f296314a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f296304a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f29632578"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29632a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29633020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29633370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6f29630a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f29630a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2962e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f2962d190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f2962ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2962d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f6f29622060" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f6f29622060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f6f296223b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f6f29622538"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f6f296226c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f6f29622848"/>
        <function-ref name="countBusy" scoped="" ref="0x7f6f296229d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f6f29622b58"/>
        <function-ref name="getAssr" scoped="" ref="0x7f6f29622ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f6f29622e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f6f29627e68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6f29627e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f29623798"/>
        <function-ref name="fired" scoped="" ref="0x7f6f296254f8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29626a18"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29625980"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29623c20"/>
        <function-ref name="set" scoped="" ref="0x7f6f29625020"/>
        <function-ref name="start" scoped="" ref="0x7f6f29625e08"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29623310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2962db98" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2962db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f29629db8"/>
        <function-ref name="test" scoped="" ref="0x7f6f296294a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2962c760"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f29628270"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f29628748"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2962b580"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2962b0f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29629930"/>
        <function-ref name="set" scoped="" ref="0x7f6f2962cbe8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2962ba08"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29629020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6f2aac73c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f2aac73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6f2aac7710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6f2aac7898"/>
        <function-ref name="getControlA" scoped="" ref="0x7f6f2aac7a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6f2aac7ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f6f2aac7d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6f2aac5020"/>
        <function-ref name="getControlB" scoped="" ref="0x7f6f2aac51a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f6f2aac5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f6f2aac29e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f6f2aac29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f6f2aac2d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f6f2aac1020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f6f2aac11a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f6f2aac1330"/>
        <function-ref name="countBusy" scoped="" ref="0x7f6f2aac14b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f6f2aac1640"/>
        <function-ref name="getAssr" scoped="" ref="0x7f6f2aac17c8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f6f2aac1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6f2aac57f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6f2aac57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f2aac2020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2aac4d08"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aac43a8"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2aac31f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f2aac24a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aac4830"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aac3680"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aac3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2aacc288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2aacc288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f2aac84a8"/>
        <function-ref name="test" scoped="" ref="0x7f6f2aac9a40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aacce08"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f2aac8930"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f2aac8e08"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2aacac70"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2aaca7e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f2aac8020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aaca310"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aac9130"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aac95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6f2aab7020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f2aab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6f2aab7370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6f2aab74f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f6f2aab7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6f2aab7808"/>
        <function-ref name="setControlB" scoped="" ref="0x7f6f2aab7990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6f2aab7b18"/>
        <function-ref name="getControlB" scoped="" ref="0x7f6f2aab7ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f6f2aab7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f6f2aab2578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6f2aab2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6f2aab28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f6f2aab2c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f6f2aab2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f6f2aab1020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f6f2aab11a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f6f2aab1330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f6f2aab14b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f6f2aab1640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f6f2aab17c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f6f2aab1950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f6f2aab1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6f2aab6340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6f2aab6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f2aab4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2aab5980"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aab5020"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2aab5e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f2aab20f8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aab54a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aab4310"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aab4798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2aabfe00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2aabfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f2aab90f8"/>
        <function-ref name="test" scoped="" ref="0x7f6f2aaba798"/>
        <function-ref name="get" scoped="" ref="0x7f6f2aabca18"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f2aab9580"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f2aab9a58"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2aabb980"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2aabb4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f2aabac20"/>
        <function-ref name="set" scoped="" ref="0x7f6f2aabb020"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aabbe08"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aaba310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f6f2aa22cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f6f2aa22cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2aa210a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2aa21228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6f2aa26c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2aa26c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2aa22410"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2aa244a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2aa24db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2aa24930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2aa22898"/>
        <function-ref name="start" scoped="" ref="0x7f6f2aa259f0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aa24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2aa2bab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2aa2bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2aa27d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2aa29470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2aa271c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2aa29d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2aa26648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2aa261f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2aa298c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2aa2a620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2aa27790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2aa2aac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2aa29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f6f2a9d4930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f6f2a9d4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a9d4c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a9d4e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f6f2a9d9858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f6f2a9d9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a9d5bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a9d71c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a9d5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a9d7a60"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a9d44d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a9d4088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a9d7610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a9d83d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a9d55f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a9d8878"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a9d8d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2a9df5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a9df5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a9db988"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a9dc020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a9dcd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a9dc900"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a9d92d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a9dbdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a9dc490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a9de198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a9db398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a9de658"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a9deb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6f2a9d0128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a9d0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a9d0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6f2a9c7330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f2a9c7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a9c50c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f2a9c59d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f2a9c5548"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f2a9c5e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2a9b3228" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a9b3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a9af5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a9b2b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a9b18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a9b1470"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a9ae020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a9afa40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a9b1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a9b3d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a9af020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a9b2238"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a9b26d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f6f2a873d98" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f6f2a873d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f6f2a872170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f6f2a8747c0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f6f2a8747c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a873370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a8737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f6f2a8740a0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f6f2a8740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f6f2a8743f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f6f2a876aa8" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f6f2a876aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a875620"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a875a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f6f295bdda0" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7f6f295bdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f6f295bc170"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f6f295bc2f8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f6f295bc480"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f6f295bc608"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f6f295bc790"/>
        <function-ref name="reset" scoped="" ref="0x7f6f295bc918"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f6f295bcaa0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f6f295bcc28"/>
        <function-ref name="resetDone" scoped="" ref="0x7f6f295bcdb0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f6f295bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f6f295c1328" loc="48:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f6f295c1328"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f6f295c1678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f6f295c1a48" loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f6f295c1a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f295c0620"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f295c0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f6f295c4628" loc="46:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f6f295c4628"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f6f295c4978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f6f295bf0a0" loc="51:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f6f295bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f295bf3f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f295bf578"/>
        <function-ref name="request" scoped="" ref="0x7f6f295bf700"/>
        <function-ref name="granted" scoped="" ref="0x7f6f295bf888"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f295bfa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f6f295be988" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7f6f295be988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f6f295becd8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f6f295bee60"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f6f295bd020"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f6f295bd1a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f6f295bd330"/>
        <function-ref name="reset" scoped="" ref="0x7f6f295bd4b8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f6f295bd640"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f6f295bd7c8"/>
        <function-ref name="resetDone" scoped="" ref="0x7f6f295bd950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f6f295bdad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f6f295bfcd8" loc="52:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7f6f295bfcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f295be0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f295be228"/>
        <function-ref name="request" scoped="" ref="0x7f6f295be3b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f295be538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f295be6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f6f295c4d48" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Mts400TesterC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f6f295c4d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f295c28b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f295c2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f6f2a957850" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a957850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f6f2a957ba0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f6f2a957d28"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f6f2a956020"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f6f2a9561a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f6f2a956330"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2a9564b8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f6f2a956640"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f6f2a9567c8"/>
        <function-ref name="resetDone" scoped="" ref="0x7f6f2a956950"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f6f2a956ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a958598" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a958598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a9588e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a958a70"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a958bf8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a958d80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a957020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f6f2a8dd470" loc="58:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7f6f2a8dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a8dd7c0"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2a8dd948"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2a8ddad0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2a8ddc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f6f2a8d6d98" loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7f6f2a8d6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a8d5170"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a8d52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f6f2a8d65f8" loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7f6f2a8d65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a8d6948"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a8d6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f6f2a8de2e8" loc="57:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7f6f2a8de2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8de638"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8de7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8de948"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8dead0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8dec58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8dede0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8dd020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f6f2a8e1bd8" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7f6f2a8e1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f6f2a8e0020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f6f2a8e01a8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f6f2a8e0330"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f6f2a8e04b8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f6f2a8e0640"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2a8e07c8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f6f2a8e0950"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f6f2a8e0ad8"/>
        <function-ref name="resetDone" scoped="" ref="0x7f6f2a8e0c60"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f6f2a8e0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f6f2a8df100" loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f6f2a8df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8df450"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8df5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8df760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8df8e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8dfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8dfbf8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8dfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f2a8d7020" loc="62:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2a8d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2a8d7370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2a8d74f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2a8d7680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2a8d7808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2a8d7990"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8d7b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2a8d7ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2a8d6330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8d6020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2a8d7e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2a8d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2a8dc020" loc="60:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a8dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a8d82b8"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a8db978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a8da6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a8da278"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a8d8b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a8d8708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a8dbdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a8dcb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a8dac98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a8db088"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a8db528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f6f2a8cca18" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7f6f2a8cca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a8ccd68"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2a8cb020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6f2a8cb1a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6f2a8cb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f6f2a8cd800" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f6f2a8cd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8cdb50"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8cdcd8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8cde60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8cc020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8cc330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8cc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f6f2a8cf688" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f6f2a8cf688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8cf9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8cfb60"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8cfce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8cfe70"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8cd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8cd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8cd330"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8cd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a8d0878" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a8d0878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a8d0bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a8d0d50"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a8cf020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a8cf1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a8cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a8ca8d0" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a8ca8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a8cac20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a8cada8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a8c7020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a8c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityData" ref="0x7f6f2a8c1578" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f6f2a8c1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2a8c18c8"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2a8c1a50"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2a8c1bd8"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2a8c1d60"/>
        <function-ref name="close" scoped="" ref="0x7f6f2a8c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f6f2a8be368" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f6f2a8be368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8be6b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8be840"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8be9c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8beb50"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8becd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8bee60"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8bd020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f6f2a8bf0f0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f6f2a8bf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a8bf440"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a8bf5c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a8bf750"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a8bf8d8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a8bfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a8bfbe8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a8bfd70"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a8be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityClock" ref="0x7f6f2a8c2730" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f6f2a8c2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2a8c2a80"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2a8c2c08"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2a8c2d90"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2a8c1020"/>
        <function-ref name="close" scoped="" ref="0x7f6f2a8c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityPower" ref="0x7f6f2a8c0400" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f6f2a8c0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2a8c0750"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2a8c08d8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2a8c0a60"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2a8c0be8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2a8c0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2a8bd488" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a8bd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a8bd7d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a8bd960"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a8bdae8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a8bdc70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a8bddf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2a8c75b0" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a8c75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a8c38f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a8c5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a8c5d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a8c58c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a8c21c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a8c3d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a8c5470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a8c6158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a8c3320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a8c65f8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a8c6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2a89f5e8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a89f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a89c8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a89d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a89dd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a89d8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a89a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a89cd40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a89d470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a89e158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a89c320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a89e5f8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a89ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2a8976a8" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a8976a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2a897a18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a897ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2a8953c8" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a8953c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2a895738"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2a8958c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2a897de8" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a897de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a896170"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2a8962f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a896480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a896608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a896790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a898980" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a898980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a898cf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a898e78"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a897030"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a8971b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a897340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2a8969d8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a8969d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2a896d28"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2a895020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29553dc0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29553dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29552170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f295523f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f295523f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29552748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f295528d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29552a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29552be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2954e200" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2954e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2954e570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2954e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2954de18" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2954de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2954c1c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2954c348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f2954c5d0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f2954c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f2954c920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f2954caa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f2954cc30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f2954cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2954e940" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2954e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2954ec90"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2954ee18"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2954d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2954d1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2954d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f2954b060" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f2954b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f2954b3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f2954b538"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f2954b6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f2954b848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f2954b9d0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2954bb58"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f2954bce0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f2954a330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2954a020"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f2954be68"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f2954a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2954f4b0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2954f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2954f820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2954f9a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2954fb30"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2954fcb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2954fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2954d578" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2954d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2954d8c8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2954da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f2954a5f8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f2954a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2954a948"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2954aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f2a893548" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a893548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a893898"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a893a20"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a893ba8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a893d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2a892020" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2a892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2a892370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2a8925b8" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a8925b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a892908"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2a892a90"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a892c18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a892da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a890020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2a890268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a890268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2a8905b8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2a890740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f2951bd58" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2951bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2951a0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2951a260"/>
        <function-ref name="start" scoped="" ref="0x7f6f2951a3e8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2951a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2951a7b8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2951a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2951ab08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f6f29518120" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f6f29518120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29518470"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f295185f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2951ad50" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2951ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f295190d8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f29519260"/>
        <function-ref name="granted" scoped="" ref="0x7f6f295193e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29519570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f295196f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f6f295188c0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f6f295188c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29518c10"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f29518d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f6f2951b638" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6f2951b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f2951b988"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2951bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f29519940" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29519940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29519c90"/>
        <function-ref name="userId" scoped="" ref="0x7f6f29519e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2a886a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a886a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a882d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a884470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a8821c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a884d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a881648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a8811f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a8848c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a885620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a882790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a885ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a884020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7f6f2a7a5c28" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="Mts400TesterC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7f6f2a7a5c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a7a37e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a7a3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7f6f2a7a6558" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="Mts400TesterC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7f6f2a7a6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a7a50f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a7a5548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRRead" ref="0x7f6f294fb700" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRRead" scoped="" ref="0x7f6f294fb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f294fa370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f294fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7f6f29500020" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7f6f29500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29500b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f294ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLRead" ref="0x7f6f294fd060" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLRead" scoped="" ref="0x7f6f294fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f294fdba8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f294fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLResource" ref="0x7f6f294ff5f8" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLResource" scoped="" ref="0x7f6f294ff5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f294ff948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f294ffad0"/>
        <function-ref name="request" scoped="" ref="0x7f6f294ffc58"/>
        <function-ref name="granted" scoped="" ref="0x7f6f294ffde0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f294fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7f6f29502920" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7f6f29502920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29501490"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f295018e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRResource" ref="0x7f6f294fe2e8" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="Mts400TesterC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRResource" scoped="" ref="0x7f6f294fe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f294fe638"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f294fe7c0"/>
        <function-ref name="request" scoped="" ref="0x7f6f294fe948"/>
        <function-ref name="granted" scoped="" ref="0x7f6f294fead0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f294fec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7f6f2a83fac8" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7f6f2a83fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a83e658"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a83eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7f6f2a83c298" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7f6f2a83c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a83cde0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a83b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a840c58" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a840c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a83f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a83f1a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a83f330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a83f4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a83f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7f6f2a80f020" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7f6f2a80f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a80fb68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a80e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f6f2a8065f8" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f6f2a8065f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a806948"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a806ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7f6f2a8055c0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7f6f2a8055c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a805910"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a805a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7f6f2a80e700" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7f6f2a80e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a80c370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a80c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f6f2a8078b8" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f6f2a8078b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a807c08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a807d90"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a806020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a8061a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a806330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f2a80ce60" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a80ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a80ba18"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2a809d10"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a80a5c8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a809190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f6f2a806d98" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x7f6f2a806d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a805170"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a8052f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a8004d0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <component-ref qname="HplTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a8004d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a800820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a8009a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a800b30"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a800cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a800e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a7fc020" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a7fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a7fc370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a7fc4f8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a7fc680"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a7fc808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x7f6f2a7ece30" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x7f6f2a7ece30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a7eb1a8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a7eb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f6f2a7ec020" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f6f2a7ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a7ec370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a7ec4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f6f2a7f1828" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f6f2a7f1828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7f1b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a7f1d00"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a7f0020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7f01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7f0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelLightPower" ref="0x7f6f2a7fcbc8" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7f6f2a7fcbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f6f2a7fb020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f6f2a7fb1a8"/>
        <function-ref name="openDone" scoped="" ref="0x7f6f2a7fb330"/>
        <function-ref name="closeDone" scoped="" ref="0x7f6f2a7fb4b8"/>
        <function-ref name="close" scoped="" ref="0x7f6f2a7fb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2a7f0610" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a7f0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7f0960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a7f0ae8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a7f0c70"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7f0df8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f6f2a7f6c50" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7f6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a7f5820"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2a7f2ba0"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a7f33c8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a7f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f2a7fbac0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a7fbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a7f7d60"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a7f8470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a7f71c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a7f8d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a7f6648"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a7f61f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a7f88c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a7fa658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a7f7790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a7faaf8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a7f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2a7cb820" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a7cb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2a7cbb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a7cbd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2a7c9550" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a7c9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2a7c98c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2a7c9a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f2a7ca020" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7ca370"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2a7ca4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7ca680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7ca808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a7ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a7cca00" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a7cca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7ccd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a7cb020"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a7cb1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7cb330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2a7cabd8" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7cabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2a7c9020"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2a7c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f294cd020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f294cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f294cd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f294cd5f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f294cd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f294cd948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f294cdad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f294cdc58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f294cdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f294ca388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f294ca388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f294ca6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f294ca880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f294c7020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f294c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f294c7390"/>
        <function-ref name="configure" scoped="" ref="0x7f6f294c7518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f294c77a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f294c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f294c7af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f294c7c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f294c7e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f294c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6f294caac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f294caac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f294cae18"/>
        <function-ref name="requested" scoped="" ref="0x7f6f294c9020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f294c91a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f294c9330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f294c94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f294c6268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f294c6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f294c65b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f294c6740"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f294c68c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f294c6a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f294c6bd8"/>
        <function-ref name="get" scoped="" ref="0x7f6f294c6d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f294c5020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f294c5640"/>
        <function-ref name="set" scoped="" ref="0x7f6f294c5330"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f294c51a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f294c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f294cb630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f294cb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f294cb9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f294cbb28"/>
        <function-ref name="request" scoped="" ref="0x7f6f294cbcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f294cbe38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f294ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f294c9700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f294c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f294c9a50"/>
        <function-ref name="userId" scoped="" ref="0x7f6f294c9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f294c5908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f294c5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f294c5c58"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f294c5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f2a7c7800" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a7c7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a7c7b50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a7c7cd8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a7c7e60"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a7c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f2a7c6268" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f2a7c6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2a7c65b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2a7c6800" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2a7c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7c6b50"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2a7c6cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7c6e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7c5020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a7c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2a7c53f0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a7c53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2a7c5740"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2a7c58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f29491268" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f29491268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f294915b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f29491740"/>
        <function-ref name="start" scoped="" ref="0x7f6f294918c8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29491a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6f29491c98" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6f29491c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f6f2948f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f6f2948e5f8" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f6f2948e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2948e948"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2948ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f6f2948f268" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6f2948f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2948f5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6f2948f740"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2948f8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2948fa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2948fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f6f2948ed98" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f6f2948ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2948d170"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2948d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f6f29492af0" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6f29492af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f29492e40"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29491020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6f2948fe20" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2948fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2948e1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2948e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f2a7c02b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplTaos2550C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f2a7c02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a7bd5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a7bfc08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6f2a7be928"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6f2a7be4d8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6f2a7bb020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6f2a7bda40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a7be088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6f2a7c0df8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6f2a7bd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6f2a7bf318"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a7bf7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a7bab00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a7bab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7bae50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a7b9020"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a7b91a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7b9330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f2a7b9848" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7b9848"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a7b8410"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2a7b6790"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a7b7020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a7b7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a7b0bf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a7b0bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a7af020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a7af1a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a7af330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a7af4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a7af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f6f2a7af9d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f6f2a7af9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f6f2afecbb0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f6f2afece58"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f2a7ae598"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6f2a7ab8b0"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a7ad150"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f2a7adcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a75e660" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a75e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a75e9b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a75eb38"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a75ecc0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a75ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f2a71e680" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a71e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a71e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f2a7169f8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f2a7169f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a716d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a721020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a7211a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a721330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a7214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f2a728ab0" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f2a728ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a728e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a75c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a75c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a75c330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a75c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6f2a75b1c8" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6f2a75b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a75b518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6f2a6fb848" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a6fb848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6f2a6fbb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6f2a6fbd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6f2a717020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6f2a7171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a7245e0" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a7245e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a724930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6f2a6ff0d0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6ff0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a6ff420"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a6ff5a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a6ff730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6f2a6f2828" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a6f2828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6f2a6f2b78"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6f2a6f2d00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6f2a704020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6f2a7041a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6f2a704330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f2a705190" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a705190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a7054e0"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a705668"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a7057f0"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a705978"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a705b00"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a705c88"/>
        <function-ref name="type" scoped="" ref="0x7f6f2a705e10"/>
        <function-ref name="setType" scoped="" ref="0x7f6f2a71f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a71f1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a71f330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f2a71f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f6f2a6ef4a0" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a6ef4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f6f2a6ef7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a6ef978"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a6efb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f6f2a6f1260" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f6f2a6f1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a6ee700"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6eede0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a6ee020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6e64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6f2a6e5130" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a6e5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a6e4700"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6e4de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a6e4020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6e24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a6e16d8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6e16d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a6e1a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a6e1bb0"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a6e1d38"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a6de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f6f2a6c9d28" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a6c9d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6c6388"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a6c8e00"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a6c88f0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6c6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6f2a6bd130" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a6bd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a6bc588"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6bcc68"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a6bde80"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6bb380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f2a6da020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a6da370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f2a6d9e38" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f2a6d9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6d81c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a6d8348"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6d84d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6d8658"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a6d87e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f2a6de798" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6de798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a6deae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6dec70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6dedf8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a6dd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a6dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6f2a6db498" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6db498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6db7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f6f2a6cc870" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a6cc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6c9020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a6cb9a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a6cb490"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6c9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6f2a6d6af8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a6d6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6f2a6d6e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6f2a6d5020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6f2a6d51a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6f2a6d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a6dd928" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a6dd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6ddc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f6f2a6c2190" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a6c2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a6c0700"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6c0de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a6c0020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6bf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f6f2a6c1d80" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a6c1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a6c3928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f6f2a6cd330" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a6cd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6d3a40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a6d3530"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a6d3020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6f2a6d61a0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6d61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a6d64f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a6d6678"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a6d6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f6f2a6dabe0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a6dabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6f2a6d55e0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a6d55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6f2a6d5930"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6f2a6d5ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6f2a6d5c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6f2a6d5dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6f2a6d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f2a6d8a80" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a6d8dd0"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a6d7020"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a6d71a8"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a6d7330"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a6d74b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a6d7640"/>
        <function-ref name="type" scoped="" ref="0x7f6f2a6d77c8"/>
        <function-ref name="setType" scoped="" ref="0x7f6f2a6d7950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a6d7ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a6d7c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f2a6d7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f6f2a6d42e8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a6d42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f6f2a6d4738"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a6d48c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a6d4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6f2a6c1570" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a6c1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6f2a6c18c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f6f2a6d9860" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a6d9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6d9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a6b94a0" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a6b94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a6b97f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a6b9978"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a6b9b00"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a6b9c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f6f2a692348" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a692348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a690a40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a690530"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a690020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a68f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f6f2a6ac020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f6f2a6ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a6ac370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f6f2a6acbe0" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f6f2a6acbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a6a60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a6a6228"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a6a63b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a6a6538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a6a66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f2a6b4cd0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a6b4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a6b30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f2a6b6498" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f2a6b6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a6b67e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6b6970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6b6af8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a6b6c80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a6b6e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6f2a6b41c8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6f2a6b41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6b4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f6f2a69c9c0" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a69c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f6f2a69cd10"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a6a5020"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a6a51a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a6a5330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a6a54b8"/>
        <function-ref name="pan" scoped="" ref="0x7f6f2a6a5640"/>
        <function-ref name="setPan" scoped="" ref="0x7f6f2a6a57c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a6a5950"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2a6a5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f6f2a6a4020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f6f2a6a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6a4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a6a44f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6a4680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6a4808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a6a4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f6f2a694020" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a694020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a693608"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a6930f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a694ba0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a693b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6f2a69b6a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a69b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6f2a69b9f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6f2a69bb80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6f2a69bd08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6f2a69a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f6f2a6af1e0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f6f2a6af1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a6af530"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a6af6b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6af840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6af9c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a6afb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a6b55b0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a6b55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6b5900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f6f2a68c298" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a68c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a68b900"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a68a020"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a68b220"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a68a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f6f2a68fe78" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a68fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a68ea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f6f2a698b78" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a698b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a696190"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a697c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a697728"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a6966a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6f2a6a4cb8" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a6a4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a69b0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a69b228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a69b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f6f2a6a7b00" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a6a7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a6a7e50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a6ad020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6ad1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a6ad330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a6ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f6f2a6b3910" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a6b3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6b3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6f2a69a2d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a69a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6f2a69a620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6f2a69a7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6f2a69a930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6f2a69aab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6f2a69ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f6f2a698020" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a698020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f6f2a698370"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a6984f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a698680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f2a6b1ac0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a6b1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a6b1e10"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a6b0020"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a6b01a8"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a6b0330"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a6b04b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a6b0640"/>
        <function-ref name="type" scoped="" ref="0x7f6f2a6b07c8"/>
        <function-ref name="setType" scoped="" ref="0x7f6f2a6b0950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a6b0ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a6b0c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f2a6b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6f2a688378" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a688378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a6877d8"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a686020"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a6870f8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a686700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f6f2a6ad818" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a6ad818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6adb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6f2a68f668" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a68f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6f2a68f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f6f2a6b14d0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a6b14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a6b1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f6f2a665c00" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f6f2a665c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f6f2a660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f6f2a66aad0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f6f2a66aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f6f2a66ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f6f2a659130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f6f2a659130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a659480"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f6f2a659608"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a659790"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a659918"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a659aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a659c28"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a659db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f6f2a669020" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f6f2a669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f6f2a669370"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f6f2a6694f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f6f2a669680"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f6f2a669808"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f6f2a669990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f2a6388d8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a6388d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a638c28"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a638db0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a63d020"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a63d1a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a63d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f6f2a632b20" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f6f2a632b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a632e70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a63c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a63c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a63c330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a63c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a63c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6f2a63cbc8" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a63cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a630150"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a630830"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a637a40"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a62f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f6f2a67ce48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f6f2a67ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a6801c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a680348"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a6804d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f6f2a680658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f6f2a6807e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f6f2a66c5a0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f6f2a66c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f6f2a66c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f6f2a673a78" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f6f2a673a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f6f2a673dc8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f6f2a67f020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2a67f1a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f6f2a67f330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f6f2a67f4b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f6f2a67f640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2a67f7c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2a67f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f6f2a63fcb8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a63fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f6f2a6580a0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f6f2a658228"/>
        <function-ref name="setFCF" scoped="" ref="0x7f6f2a6583b0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f6f2a658538"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f6f2a6586c0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f6f2a658848"/>
        <function-ref name="setDSN" scoped="" ref="0x7f6f2a6589d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f6f2a658b58"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f6f2a658ce0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f6f2a658e68"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f6f2a657020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f6f2a6571a8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f6f2a657330"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2a6575b8"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2a657740"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f6f2a6578c8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f6f2a657a50"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f6f2a657bd8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f6f2a657d60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a63e020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2a63e1a8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f6f2a63e330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2a63e4b8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f6f2a63e640"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f6f2a63e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f6f2a66ea90" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f6f2a66ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6f2a66ede0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f6f2a67a020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6f2a67a1a8"/>
        <function-ref name="getSender" scoped="" ref="0x7f6f2a67a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f6f2a667dd8" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f6f2a667dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f6f2a66b170"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f6f2a66b2f8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f6f2a66b480"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f6f2a66b608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f6f2a5d8910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a5d8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a5d8c80"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a5d8e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a5ad020"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a5ad1a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a5ad330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6f2a5ad958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2a5ad958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a59e020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a59f0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2a59f9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a59f548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2a59e4a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a5a0730"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a5a0c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f6f29450658" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f29450658"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f294509c8"/>
        <function-ref name="wait" scoped="" ref="0x7f6f29450b50"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29450cd8"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f29450e60"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2944f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f6f2944f4d8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2944f4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2944cc88"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2944ed08"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2944c680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2944c1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2944b150"/>
        <function-ref name="start" scoped="" ref="0x7f6f2944e3a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2944e880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f6f2944b528" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f6f2944b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f6f2944b878"/>
        <function-ref name="suspend" scoped="" ref="0x7f6f2944ba00"/>
        <function-ref name="resume" scoped="" ref="0x7f6f2944bb88"/>
        <function-ref name="run" scoped="" ref="0x7f6f2944bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f6f2a5ac220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a5ac220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f6f2a5ac570"/>
        <function-ref name="suspend" scoped="" ref="0x7f6f2a5ac6f8"/>
        <function-ref name="resume" scoped="" ref="0x7f6f2a5ac880"/>
        <function-ref name="run" scoped="" ref="0x7f6f2a5aca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a4ec020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a4ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a4ec370"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a4ec4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4ec680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a4ec908" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a4ec908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a4ecc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f2a4f0c28" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a4f0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a4ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f2a4f23f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f2a4f23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a4f2740"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a4f28c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a4f2a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a4f2bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a4f2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f2a4f1100" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f2a4f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a4f1470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a4f15f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a4f1780"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a4f1908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4f1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6f2a4f0550" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6f2a4f0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a4f08c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a4ed180" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a4ed180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a4ed4d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a4ed658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a4ed7e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a4ed968"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a4edaf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a4edc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a4eb020" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a4eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a4eb370"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f6f2a4eb4f8"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a4eb680"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a4eb808"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a4eb990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a4ebb18"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a4ebca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a4f1df8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a4f1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a4f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f6f2a4ef3c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2a4ef3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a4ef738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f2a4f4e30" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f2a4f4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2a4f31a8"/>
        <function-ref name="source" scoped="" ref="0x7f6f2a4f3330"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a4f34b8"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a4f3640"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a4f37c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a4f3950"/>
        <function-ref name="type" scoped="" ref="0x7f6f2a4f3ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f6f2a4f3c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a4f3de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2a4f2020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f2a4f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f6f2a4efae0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2a4efae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a4efe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2942c908" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2942c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2942cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2942c020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2942c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2942c370"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2942c4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2942c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f29430b58" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f29430b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2942e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f29432268" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f29432268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f294325b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f29432740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f294328c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29432a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29432bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f29431020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f29431020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29431390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29431518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f294316a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29431828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f294319b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6f29430480" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6f29430480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f294307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f29438de0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f29438de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f29434170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f294342f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29434480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29434608"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f29434790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f29434918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2942b020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2942b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2942b470"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f6f2942b5f8"/>
        <function-ref name="source" scoped="" ref="0x7f6f2942b780"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2942b908"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2942ba90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2942bc18"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2942bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6f2942a020" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2942a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6f2942a370"/>
        <function-ref name="changed" scoped="" ref="0x7f6f2942a4f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6f2942a680"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6f2942a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2942d180" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2942d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2942d4d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2942d658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2942d7e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2942d968"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2942daf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2942dc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f29431d18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f29431d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f294300d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f6f2942e3c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f6f2942e3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2942e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f29434b60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f29434b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f29433020"/>
        <function-ref name="source" scoped="" ref="0x7f6f294331a8"/>
        <function-ref name="address" scoped="" ref="0x7f6f29433330"/>
        <function-ref name="destination" scoped="" ref="0x7f6f294334b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f29433640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f294337c8"/>
        <function-ref name="type" scoped="" ref="0x7f6f29433950"/>
        <function-ref name="setType" scoped="" ref="0x7f6f29433ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f29433c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f29433de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f29432020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f6f2942eae0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f6f2942eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2942ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f6f2a50d560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2a50d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6f2a50d8b0"/>
        <function-ref name="changed" scoped="" ref="0x7f6f2a50da38"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6f2a50dbc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6f2a50dd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a4e4768" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a4e4768"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a4e4ab8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a4e4c40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4e4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6f2a4d5060" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a4d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a4d53b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a4d5538"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a4d56c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a4d5848"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a4d59d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6f2a4e5de0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f6f2a4e5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a4e4170"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a4e42f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4e4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2a492510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2a492510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2a492880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2a492a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2a491550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2a491550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2a4918c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2a491a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2a493748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2a493748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a493ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a493c40"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a493dc8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a492020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a4921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2a492c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2a492c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2a491020"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2a4911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f293da7e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f293da7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f293dab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f293dadc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f293dadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f293d9170"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f293d92f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f293d9480"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f293d9608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f293d69a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f293d69a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f293d6d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f293d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f293d5b08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f293d5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f293d5e78"/>
        <function-ref name="configure" scoped="" ref="0x7f6f293d4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f293d42b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f293d42b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f293d4608"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f293d4790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f293d4918"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f293d4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f293d8b80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f293d8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f293d6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f293d61a8"/>
        <function-ref name="request" scoped="" ref="0x7f6f293d6330"/>
        <function-ref name="granted" scoped="" ref="0x7f6f293d64b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f293d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f293d5268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f293d5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f293d55b8"/>
        <function-ref name="userId" scoped="" ref="0x7f6f293d5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f293d4d68" loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f293d4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f293d30f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f293d3278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a45a0a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a45a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a45a3f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a45a578"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a45a700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a45a988" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a45a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a45acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f6f2a45fb50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f6f2a45fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f6f2a45e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f2a48db38" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f2a48db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a460020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a4601a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a460330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a4604b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a460640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f6f2a45b2e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a45b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a45b630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a45b7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a45b940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a45bac8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a45bc50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a45bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f6f2a45e2c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a45e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f6f2a45e618"/>
        <function-ref name="getDSN" scoped="" ref="0x7f6f2a45e7a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f6f2a45e928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f6f2a45eab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f6f2a45ec38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f6f2a45edc0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f6f2a45d020"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f6f2a45d1a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f6f2a45d330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f6f2a45d4b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f6f2a45d640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f6f2a45d7c8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f6f2a45d950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2a45dbd8"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2a45dd60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f6f2a45c020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f6f2a45c1a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f6f2a45c330"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f6f2a45c4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a45c640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2a45c7c8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f6f2a45c950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2a45cad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f6f2a45cc60"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f6f2a45cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f6f2a460888" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a460888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a460bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2a460d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a45f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a45f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a45f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f6f2a45f5b8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a45f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a45f908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a41f928" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a41f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a41fc78"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a41fe00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a41e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a41e2a8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a41e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a41e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f6f2a423c10" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a423c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a422020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a4221a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a422330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a4224b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a422640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a4227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f6f2a420430" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f6f2a420430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a420780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a41e880" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a41e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a41ebd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a41ed58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a41d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a41d1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a41d330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a41d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f6f2a422a50" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f6f2a422a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a422da0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a420020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f6f2a452d20" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f6f2a452d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a4230a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a423228"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a4233b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f6f2a423638" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f6f2a423638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a423988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f6f2a420a08" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f6f2a420a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a420d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a41f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a41f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a41f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a41f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a41f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f6f2a38f900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2a38f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f6f2a38fc50"/>
        <function-ref name="address" scoped="" ref="0x7f6f2a38fdd8"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2a38e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2a38e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2a38e330"/>
        <function-ref name="pan" scoped="" ref="0x7f6f2a38e4b8"/>
        <function-ref name="setPan" scoped="" ref="0x7f6f2a38e640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a38e7c8"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2a38e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a38eb98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a38eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a38c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a38c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a38c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a38c4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a38c640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a38c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f6f2a392980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f2a392980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f6f2a392cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f6f2a392e58"/>
        <function-ref name="setFCF" scoped="" ref="0x7f6f2a391020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f6f2a3911a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f6f2a391330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f6f2a3914b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f6f2a391640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f6f2a3917c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f6f2a391950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f6f2a391ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f6f2a391c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f6f2a391de8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f6f2a390020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2a3902a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2a390430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f6f2a3905b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f6f2a390740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f6f2a3908c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f6f2a390a50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2a390bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2a390d60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f6f2a38f020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2a38f1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f6f2a38f330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f6f2a38f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a38cab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a38cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a38ce00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a38b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a38b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a38b330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a38b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a38b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f6f2936e778" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f6f2936e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f6f2936eac8"/>
        <function-ref name="address" scoped="" ref="0x7f6f2936ec50"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2936edd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2936d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2936d1a8"/>
        <function-ref name="pan" scoped="" ref="0x7f6f2936d330"/>
        <function-ref name="setPan" scoped="" ref="0x7f6f2936d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2936d640"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2936d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2936da10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2936da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2936dd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2936c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2936c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2936c330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2936c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2936c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f6f293717f8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f6f293717f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f6f29371b48"/>
        <function-ref name="getDSN" scoped="" ref="0x7f6f29371cd0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f6f29371e58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f6f29370020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f6f293701a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f6f29370330"/>
        <function-ref name="setDSN" scoped="" ref="0x7f6f293704b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f6f29370640"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f6f293707c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f6f29370950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f6f29370ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f6f29370c60"/>
        <function-ref name="localAddr" scoped="" ref="0x7f6f29370de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2936f120"/>
        <function-ref name="localPan" scoped="" ref="0x7f6f2936f2a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f6f2936f430"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f6f2936f5b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f6f2936f740"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f6f2936f8c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2936fa50"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2936fbd8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f6f2936fd60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2936e020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f6f2936e1a8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f6f2936e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6f2936c8e8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6f2936c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6f2936cc38"/>
        <function-ref name="changed" scoped="" ref="0x7f6f2936cdc0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6f2936b020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6f2936b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2936b430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2936b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2936b780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2936b908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2936ba90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2936bc18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2936bda0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2936a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a324510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a324510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a324860"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a3249e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a324b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a324df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a324df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a323170"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a3232f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f2a325470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f2a325470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a3257c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a325948"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a325ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a323580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a323580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6f2a3238d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f6f2a323a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6f2a323be0"/>
        <function-ref name="getSender" scoped="" ref="0x7f6f2a323d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a325d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a325d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a3240a0"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a324228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2931e458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2931e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2931e7a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2931e930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2931eab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2931ed40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2931ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2931d0d8"/>
        <function-ref name="header" scoped="" ref="0x7f6f2931d260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f6f2931cbd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f2931cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2931b020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f6f2931b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2931b330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2931b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f29323da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f29323da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2931f170"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2931f2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2931f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f6f2931c020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2931c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f6f2931c370"/>
        <function-ref name="insertNode" scoped="" ref="0x7f6f2931c4f8"/>
        <function-ref name="getNode" scoped="" ref="0x7f6f2931c680"/>
        <function-ref name="evicted" scoped="" ref="0x7f6f2931c808"/>
        <function-ref name="getIndex" scoped="" ref="0x7f6f2931c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2931f6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2931f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2931fa18"/>
        <function-ref name="header" scoped="" ref="0x7f6f2931fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2931fde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2931fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2931e170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f6f2931d4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f6f2931d4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f6f2931d7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f6f2931d980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f6f2931db08"/>
        <function-ref name="getSender" scoped="" ref="0x7f6f2931dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f6f2a359d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2a359d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f6f2a3560d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7f6f2a356260"/>
        <function-ref name="getNode" scoped="" ref="0x7f6f2a3563e8"/>
        <function-ref name="evicted" scoped="" ref="0x7f6f2a356570"/>
        <function-ref name="getIndex" scoped="" ref="0x7f6f2a3566f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f6f2a351b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f2a351b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a351e68"/>
        <function-ref name="clearAll" scoped="" ref="0x7f6f2a350020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a3501a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a350330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f6f2a352850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f6f2a352850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f6f2a352ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f6f2a352d28"/>
        <function-ref name="getNode" scoped="" ref="0x7f6f2a351020"/>
        <function-ref name="evicted" scoped="" ref="0x7f6f2a3511a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7f6f2a351330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2a352238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2a352238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a352588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f6f29319140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f6f29319140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f29319490"/>
        <function-ref name="clearAll" scoped="" ref="0x7f6f29319618"/>
        <function-ref name="get" scoped="" ref="0x7f6f293197a0"/>
        <function-ref name="set" scoped="" ref="0x7f6f29319928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a313c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a313c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a312020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a3121a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a312330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a3125b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a3125b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a312908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f6f2a30e100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f6f2a30e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a30e450"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a30e5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a30e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f2a3152e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f2a3152e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a315638"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a3157c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a315948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a314e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a314e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a3131a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a313330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a3134b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a313640"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a3137c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a313950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a312b90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a312b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a311020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a3111a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a311330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a3114b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a311640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a3117c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f6f2a30f470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f6f2a30f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6f2a30f7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6f2a30f948"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6f2a30fad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6f2a30fc58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6f2a30fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a315bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a315bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a314020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f6f2a311a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a311a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a311d60"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a30f020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a30f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6f2a314268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f6f2a314268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6f2a3145b8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6f2a314740"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6f2a3148c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6f2a314a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6f2a314bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a309988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a309988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a309cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a309e60"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a2f6020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a2f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a2f25c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a2f25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a2f2918"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a2f2aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a2f2c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a2f1020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a2f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a2f1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f2a2f6430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f2a2f6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a2f6780"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a2f6908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a2f6a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a2f42e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a2f42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a2f4638"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a2f47c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a2f4948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a2f4ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a2f4c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a2f4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6f2a2f3060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f2a2f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6f2a2f33b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6f2a2f3538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6f2a2f36c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6f2a2f3848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6f2a2f3b30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f6f2a2f3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a2f3e80"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a2f2030"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a2f21b8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a2f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a2f6d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a2f6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a2f40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a2f15f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a2f15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a2f1948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a2f1ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a2f1c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a2f1de0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a2f0020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a2f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6f292f5458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6f292f5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6f292f57a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6f292f5930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6f292f5ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6f292f5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a285270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a285270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a2855c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a285748"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a2858d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a285a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f6f2a2835d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f2a2835d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a283928"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a283ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a283c38"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a283dc0"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a282020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a2821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f2a285ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f2a285ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a2840a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a284228"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a2843b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f6f2a282c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a282c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a281020"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a2811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f2a284638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f2a284638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a284988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f6f2a2823f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a2823f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a282740"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a2828c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a282a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f6f2a284bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f6f2a284bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f6f2a283020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a2831a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a283330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f292ee870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f292ee870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f292eebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f292eed48"/>
        <function-ref name="start" scoped="" ref="0x7f6f292ed020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f292ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f6f292ed430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f292ed430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f292ed780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f6f292eb450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f292eb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f292eb7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f292eb928"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f292ebab0"/>
        <function-ref name="done" scoped="" ref="0x7f6f292ebc38"/>
        <function-ref name="standby" scoped="" ref="0x7f6f292ebdc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f292e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f292eda08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f292eda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f292edd58"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f292ec020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f292ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f6f292e74f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f6f292e74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f292e7840"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f292e79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f6f292e8578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f292e8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f292e88c8"/>
        <function-ref name="header" scoped="" ref="0x7f6f292e8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f6f292e7c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f6f292e7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f292e6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f292e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6f292ec430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6f292ec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f292ec780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f6f292e8d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f6f292e8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f292e70a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f292e7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f6f292e9c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f292e9c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f292e8020"/>
        <function-ref name="ready" scoped="" ref="0x7f6f292e81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f292e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f6f292ec9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f6f292ec9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f6f292ecd18"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f292eb020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f292eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f6f292e9268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f6f292e9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f6f292e95b8"/>
        <function-ref name="suspend" scoped="" ref="0x7f6f292e9740"/>
        <function-ref name="resume" scoped="" ref="0x7f6f292e98c8"/>
        <function-ref name="run" scoped="" ref="0x7f6f292e9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a22c0c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a22c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a22c410"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a22c598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a22c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a22c9a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a22c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a22ccf8"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a22ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f2a22b0f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a22b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a22b440"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a22b5c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a22b750"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a22b8d8"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a22ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a22bce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a22bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f6f2a22a0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f6f2a22a228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f6f2a22a3b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f6f2a22a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a22d8c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a22d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a22dc18"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a22dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a22d020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a22d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a22d370"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a22d4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a22d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f292b0d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f292b0d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f292af0d8"/>
        <function-ref name="ready" scoped="" ref="0x7f6f292af260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f292af3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f292af670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f292af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f292af9c0"/>
        <function-ref name="header" scoped="" ref="0x7f6f292afb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f292afd90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f292afd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f292ad170"/>
        <function-ref name="wait" scoped="" ref="0x7f6f292ad2f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f292ad480"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f292ad608"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f292ad790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6f292ad9d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f6f292ad9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6f292add28"/>
        <function-ref name="rand32" scoped="" ref="0x7f6f292ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f292ac2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f292ac2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f6f292ac5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f6f292ac780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f6f292ac908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f6f292aca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f292b0578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f292b0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f292b08c8"/>
        <function-ref name="header" scoped="" ref="0x7f6f292b0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f292b2b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f292b2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f292b0020"/>
        <function-ref name="ready" scoped="" ref="0x7f6f292b01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f292b0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f6f292acd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f6f292acd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f292ab0d8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f292ab260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6f2a243690" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f6f2a243690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6f2a2439e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f6f2a243b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6f2a241668" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f6f2a241668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a2431e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2a247930" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2a247930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a247c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6f2a23d4c8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f6f2a23d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6f2a23d818"/>
        <function-ref name="rand32" scoped="" ref="0x7f6f2a23d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6f2a23e3b0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f6f2a23e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a23d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2a242b30" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2a242b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a242e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a1fcd38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1fcd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a1fb0d8"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a1fb260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1fb3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a1fb670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1fb9c0"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1fbb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f2a1fbd90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a1fbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a1f9170"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a1f92f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a1f9480"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a1f9608"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a1f9790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f6f2a1f8bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f6f2a1f8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a1f7020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a1f71a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a1f7330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a1f74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a1f9a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a1f9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f6f2a1f9d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f6f2a1f8020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f6f2a1f81a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f6f2a1f8330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f6f2a1f84b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f6f2a1f8640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f6f2a1f87c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f6f2a1f8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a225b50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a225b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1fc020"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a2252a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a2252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a2255f8"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a225780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a225908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f6f2a1fc3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f6f2a1fc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f2a1fc740"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f2a1fc8c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f2a1fca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a1e0978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a1e0978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a1e0cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a1e0e50"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a1df020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a1df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f6f2a1db020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a1db370"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a1db4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a1d75b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1d75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a1d7908"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a1d7a90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1d7c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a1d6020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1d6370"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1d64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f6f2a1de268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1de268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a1de5b8"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a1de740"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a1de8c8"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a1dea50"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a1debd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a1ded60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a1db740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a1db740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a1dba90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a1dbc18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a1dbda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a1da020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a1da1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a1da330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f6f2a1d8638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f6f2a1d8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a1d8a88"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a1d8c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a1d8d98"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a1d7020"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a1d71a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a1d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f6f2a1da5b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f6f2a1da5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f6f2a1da908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a1dc8c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a1dc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1dcc18"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f6f2a1d8060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f6f2a1d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1d83b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6f2a1dabf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f6f2a1dabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a1d9020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a1d91a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a1d9330"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a1d94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a1d4020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a1d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a1d4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a1d44f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a1d4680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a1d4808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a1d4990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a1d4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6f2a1dfc98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f6f2a1dfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a1d4da0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a1d4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f6f2a1d3170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f6f2a1d9740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f6f2a1d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a1d9a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a1d9c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1d9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a1dc020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a1dc370"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a1dc4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1dc680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f6f2a1d6780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f6f2a1d6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a1d6ad0"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a1d6c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6f2a1df3f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f6f2a1df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a1df740"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a1df8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1dfa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f6f2a1728c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f6f2a1728c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a172c18"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a172da0"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a170020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a1701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a1759f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a1759f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a175d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a174020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a1741a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a174330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a1744b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a174640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a1739f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a1739f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a173d40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a172020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a1721a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a172330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a1724b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a172640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f6f2a178020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f2a178020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a176478"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a176b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a178d70"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a175278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f6f2a174a30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a174a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a1735d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6f2a17b270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f2a17b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a17a700"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a17ade0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a17a020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a1794f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f6f2925ee60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f6f2925ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2925c1e8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2925c370"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2925c4f8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2925c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2925e080" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2925e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2925e3d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2925e558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2925e6e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2925e868"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2925e9f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2925eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2925aac0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2925aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2925ae10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f29259020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f292591a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29259330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f292594b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f29259640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f6f29261660" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f6f29261660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f29260ad0"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2925f1f0"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f292603f0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2925f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f6f2925ca10" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2925ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2925b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f6f2925baf8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f6f2925baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2925a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f6f29265958" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f6f29265958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f29264e10"/>
        <function-ref name="clear" scoped="" ref="0x7f6f29263558"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f29264730"/>
        <function-ref name="set" scoped="" ref="0x7f6f29263c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6f2a182dc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a182dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e8ce0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f6f2b3e7088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a17f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a14d0e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a14d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a14d430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a14d5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a14d740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a14d8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a14da50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a14dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a14c020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a14c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a14c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a14c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a14c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a14c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a14c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a14cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f6f2a16b660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f6f2a16b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a16b9d0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a16bb58"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a16bce0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a16be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6f2a14ab78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f2a14ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a149020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a1491a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a149330"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a1494b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f6f2a1453f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a145740"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a1458c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6f2a1418c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6f2a1418c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a141c18"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a141da0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a140020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6f2a1402a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6f2a1402a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a1405f8"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a140780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f6f2a1485b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1485b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a148908"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a148a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a148c18"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a148da0"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a147020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a1471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a145b10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a145b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a145e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a144020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a1441a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a144330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a1444b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a144640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f6f2a142a08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f6f2a142a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a142e58"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a141020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a1411a8"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a141330"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a1414b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a141640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f6f2a1448c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f6f2a1448c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f6f2a144c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a147c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a147c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a145020"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1451a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f6f2a142430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f6f2a142430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a142780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6f2a143020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f6f2a143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f2a143370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f2a1434f8"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a143680"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a143808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f6f2a13f2a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f6f2a13f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a13f5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a13f780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a13f908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a13fa90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a13fc18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a13fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6f2a148020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f6f2a148020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a148370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a13d060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a13d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f6f2a13d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f6f2a143a90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f6f2a143a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a143de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a142020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a1421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a1473f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a147740"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a1478c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a147a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f6f2a140a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f6f2a140a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a140d58"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a13f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f6f2a149700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f6f2a149700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a149a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a149bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a149d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f6f2a135448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a135448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a135798"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a135920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f6f2a1300c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a1300c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a12f6a0"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a12f190"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a130c48"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a12fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f6f2a11b020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f6f2a11b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a11b370"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a11b4f8"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a11b680"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a11b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6f2a120730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a120730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a11fc58"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a11e380"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a11f578"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a11ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f6f2a1393e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a139730"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a1398b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a139a40"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a139bc8"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a139d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a136020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f2a11a768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a11a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a11aab8"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a11ac40"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a11adc8"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a119020"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a1191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f6f2a134cd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a134cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a132388"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a133e00"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a1338f0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a132898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a135bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a135bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a134020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a1341a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a134330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a1344b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a134640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a1347c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a1215c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a1215c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a121a18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a121ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a121d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f6f2a120020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f6f2a1201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a136bf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a136bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a135020"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a1351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f2a1254b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2a1254b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a123b18"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a124b90"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2a123510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a123088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2a121020"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a124230"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a124708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6f2a12d458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6f2a12d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a12ca40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a12c530"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a12c020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a12b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f6f2a126220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a126220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a126da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a1362c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1362c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a136618"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a1367a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a136928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f6f2a12b860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a12b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a129e30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a129920"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a129410"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a128388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f6f2a11bb78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f6f2a11bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a11a020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a11a1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a11a330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a11a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f6f2a11c378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f6f2a11c378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a11c6c8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a11c850"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a11c9d8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a11cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6f2a1289d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a1289d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6f2a128d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f6f2a1102c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f6f2a1102c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f6f2a110610"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a110798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f6f2a0f2bf8" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f6f2a0f2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6f2a0f3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f6f2a10b020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f6f2a10b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a10a608"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a10a0f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a10bba0"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a10ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f6f2a0ef988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f6f2a0ef988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a0efcd8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0efe60"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a0ee020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f6f2a113bf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6f2a113bf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a112020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6f2a0ed2b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6f2a0ed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6f2a0ec910"/>
        <function-ref name="clear" scoped="" ref="0x7f6f2a0ea020"/>
        <function-ref name="isValid" scoped="" ref="0x7f6f2a0ec230"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0ea700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f6f2a0fddf0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f6f2a0fddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a0f9170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a0f92f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a0f9480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a0f9608"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0f9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a0f9918"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0f9aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a0f9c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f6f2a0e9ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f6f2a0e9ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6f2a0e9e08"/>
        <function-ref name="wait" scoped="" ref="0x7f6f2a0e8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2a0e81a8"/>
        <function-ref name="isFree" scoped="" ref="0x7f6f2a0e8330"/>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a0e84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f6f2a1122d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f6f2a1122d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f6f2a112620"/>
        <function-ref name="turnOn" scoped="" ref="0x7f6f2a1127a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6f2a112930"/>
        <function-ref name="done" scoped="" ref="0x7f6f2a112ab8"/>
        <function-ref name="standby" scoped="" ref="0x7f6f2a112c40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6f2a112dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f6f2a0f1020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f2a0f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a0f1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f6f2a10fb48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f6f2a10fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a10d190"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a10ec38"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a10e728"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a10d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f6f2a110a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f6f2a110a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a110da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f2a10f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a10f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f2a10f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a10f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a10f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f6f2a0feb90" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f6f2a0feb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a0fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a0fd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a0fd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a0fd4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0fd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a0fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0fd950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a0fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f6f2a0f0100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f6f2a0f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2a0f0450"/>
        <function-ref name="headerLength" scoped="" ref="0x7f6f2a0f05d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f6f2a0f0760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f6f2a0f08e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f6f2a0f0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f6f2a1119e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f6f2a1119e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6f2a111d38"/>
        <function-ref name="header" scoped="" ref="0x7f6f2a110020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f6f2a05b368" loc="861:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f6f2a05b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2a05b6b8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2a05b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f6f2a1083b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6f2a1083b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a107a40"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a107530"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a107020"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a106020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6f2a113138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2a113138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f6f2b48fb30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a113488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6f2a1004f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6f2a1004f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a100848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a1009d0"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a100b58"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a100ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a100e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f6f2a101130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f6f2a101130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a101580"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a101708"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a101890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a101a18"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a101ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a101d28"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a100020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a1001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f6f2a106860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f6f2a106860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a104e30"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a104920"/>
        <function-ref name="isSet" scoped="" ref="0x7f6f2a104410"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a103388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f6f2a1110c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f6f2a1110c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2a111410"/>
        <function-ref name="ready" scoped="" ref="0x7f6f2a111598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2a111720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f6f2a0f4590" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f6f2a0f4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6f2a0f48e0"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2a0f4a68"/>
        <function-ref name="captured" scoped="" ref="0x7f6f2a0f4bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6f2a0f4d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f6f2a0fe080" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f2a0fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6f2a0fe3d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6f2a0fe558"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6f2a0fe6e0"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a0fe868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f6f2a0ee518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f6f2a0ee518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a0ee868"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0ee9f0"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a0eeb78"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0eed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f6f2a0f0e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f6f2a0f0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f2a0ef1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0ef330"/>
        <function-ref name="setValue" scoped="" ref="0x7f6f2a0ef4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a0ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6f2a1039d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6f2a1039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6f2a103d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f6f2a0e9020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f6f2a0e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f6f2a0e9370"/>
        <function-ref name="suspend" scoped="" ref="0x7f6f2a0e94f8"/>
        <function-ref name="resume" scoped="" ref="0x7f6f2a0e9680"/>
        <function-ref name="run" scoped="" ref="0x7f6f2a0e9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f6f2a018338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f6f2a018338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a018688"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a018810"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a018998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a018b20"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a018ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a018e30"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a017020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a0171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f6f2a019140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f6f2a019140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a019490"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a019618"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a0197a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a019928"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a019ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a019c38"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a019dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a018020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f2a0162e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f2a0162e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f2a014928"/>
        <function-ref name="fired" scoped="" ref="0x7f6f2a0159e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f2a014320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f2a015e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f2a014db0"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a015088"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a015560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f6f2a01b990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6f2a01b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2a01bce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2a01be68"/>
        <function-ref name="request" scoped="" ref="0x7f6f2a01a020"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2a01a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2a01a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f6f2a01e710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f6f2a01e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a01ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a01ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a01ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a01b020"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a01b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a01b330"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a01b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a01b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f6f2a0174c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f6f2a0174c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6f2a017810"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2a017998"/>
        <function-ref name="captured" scoped="" ref="0x7f6f2a017b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6f2a017ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6f2a01a5e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f2a01a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6f2a01a938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6f2a01aac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6f2a01ac48"/>
        <function-ref name="write" scoped="" ref="0x7f6f2a01add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f6f2a012438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f6f2a012438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TRadio" ref="0x7f6f2a75fd48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f2a011020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f6f2a003c18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f6f2a003c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a001020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a0011a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a001330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a0014b8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a001640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a0017c8"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a001950"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a001ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f6f2a004540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6f2a004540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6f2a0036f8"/>
        <function-ref name="test" scoped="" ref="0x7f6f2a00bdb8"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a00c0f8"/>
        <function-ref name="captured" scoped="" ref="0x7f6f2a00ca58"/>
        <function-ref name="reset" scoped="" ref="0x7f6f2a00b020"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f2a003270"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a00c580"/>
        <function-ref name="start" scoped="" ref="0x7f6f2a00b4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f2a00b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f6f2a001e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f6f2a001e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f2a0001a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f2a000330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f2a0004b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f2a000640"/>
        <function-ref name="get" scoped="" ref="0x7f6f2a0007c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f2a000950"/>
        <function-ref name="set" scoped="" ref="0x7f6f2a000ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f2a000c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6f2a00e870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6f2a00e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f2a00ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f6f2a011cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f6f2a011cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6f2a00e0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f6f2a00e228"/>
        <function-ref name="captured" scoped="" ref="0x7f6f2a00e3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6f2a00e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6f29fe61d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6f29fe61d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29fe6528"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29fe66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6f29fef388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6f29fef388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6f29fef6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f2a00fcd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f2a00fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29ff20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6f29fef9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f29fef9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6f29fefd20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6f29ff1020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6f29ff11a8"/>
        <function-ref name="write" scoped="" ref="0x7f6f29ff1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29fe6e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29fe6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29fee1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f29fee380"/>
        <function-ref name="request" scoped="" ref="0x7f6f29fee508"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29fee690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29fee818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f6f29fe3de0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29fe3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29fe1170"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29fe12f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f6f29fa5020" loc="294:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f6f29fa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29fa5370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f29fa54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6f29fe3120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6f29fe3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29fe3470"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29fe35f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6f29fe4020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6f29fe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6f29fe4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29feda18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29feda18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29fedd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f6f29fc6c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f6f29fc6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6f29fe0020"/>
        <function-ref name="sleep" scoped="" ref="0x7f6f29fc54b8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6f29fe0330"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f29fc5640"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6f29fe0640"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6f29fe07c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f29fe0950"/>
        <function-ref name="read" scoped="" ref="0x7f6f29fe0ad8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6f29fe0c60"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f29fe0de8"/>
        <function-ref name="setClock" scoped="" ref="0x7f6f29fde020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f29fde1a8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6f29fde330"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6f29fde5b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6f29fde740"/>
        <function-ref name="write" scoped="" ref="0x7f6f29fde8c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6f29fdea50"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6f29fdebd8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6f29fded60"/>
        <function-ref name="getClock" scoped="" ref="0x7f6f29fc5020"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f29fc51a8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6f29fe01a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6f29fe04b8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6f29fc5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6f29fe4628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6f29fe4628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6f29fe4978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6f29fe4b00"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6f29fe4c88"/>
        <function-ref name="write" scoped="" ref="0x7f6f29fe4e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f6f29fc5910" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6f29fc5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6f29fc5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f6f29f88a20" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f6f29f88a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6f29f88d70"/>
        <function-ref name="sleep" scoped="" ref="0x7f6f29f83330"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6f29f851a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f29f834b8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6f29f854b8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6f29f85640"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f29f857c8"/>
        <function-ref name="read" scoped="" ref="0x7f6f29f85950"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6f29f85ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f29f85c60"/>
        <function-ref name="setClock" scoped="" ref="0x7f6f29f85de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f29f84020"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6f29f841a8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6f29f84430"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6f29f845b8"/>
        <function-ref name="write" scoped="" ref="0x7f6f29f84740"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6f29f848c8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6f29f84a50"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6f29f84bd8"/>
        <function-ref name="getClock" scoped="" ref="0x7f6f29f84d60"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f29f83020"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6f29f85020"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6f29f85330"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6f29f831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f6f29f794c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f6f29f794c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29f79810"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29f79998"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29f79b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29f79ca8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f79e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29f78020"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f781a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29f78330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f6f29f7b180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f6f29f7b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29f7b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29f7b658"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29f7b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29f7b968"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f7baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29f7bc78"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f7be00"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f6f29f7c020" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f6f29f7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29f7c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29f7c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29f7c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29f7c808"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f7c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29f7cb18"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f7cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29f7ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6f29f7d650" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6f29f7d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6f29f7d9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f7db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f6f29f78660" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f6f29f78660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6f29f789b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f6f29f828d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f6f29f828d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6f29f82c28"/>
        <function-ref name="sleep" scoped="" ref="0x7f6f29f7d1a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6f29f7f020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6f29f7d330"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6f29f7f330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6f29f7f4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6f29f7f640"/>
        <function-ref name="read" scoped="" ref="0x7f6f29f7f7c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6f29f7f950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6f29f7fad8"/>
        <function-ref name="setClock" scoped="" ref="0x7f6f29f7fc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6f29f7fde8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6f29f7e020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6f29f7e2a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6f29f7e430"/>
        <function-ref name="write" scoped="" ref="0x7f6f29f7e5b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6f29f7e740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6f29f7e8c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6f29f7ea50"/>
        <function-ref name="getClock" scoped="" ref="0x7f6f29f7ebd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6f29f7ed60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6f29f82db0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6f29f7f1a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6f29f7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f6f29f7a338" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f6f29f7a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6f29f7a688"/>
        <function-ref name="isInput" scoped="" ref="0x7f6f29f7a810"/>
        <function-ref name="toggle" scoped="" ref="0x7f6f29f7a998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6f29f7ab20"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f7aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6f29f7ae30"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f79020"/>
        <function-ref name="clr" scoped="" ref="0x7f6f29f791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f29f30510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f29f30510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f29f30880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f29f30a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f29f2f550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f29f2f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f29f2f8c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6f29f2fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f29f31748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f29f31748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f29f31ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f29f31c40"/>
        <function-ref name="request" scoped="" ref="0x7f6f29f31dc8"/>
        <function-ref name="granted" scoped="" ref="0x7f6f29f30020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f29f301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f29f30c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f29f30c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f29f2f020"/>
        <function-ref name="userId" scoped="" ref="0x7f6f29f2f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29211020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29211370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6f292115f8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6f292115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f29211948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f29211ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f29211c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f29211de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6f2920e0c8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6f2920e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6f2920e438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6f2920e5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6f2920d100" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6f2920d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6f2920d470"/>
        <function-ref name="configure" scoped="" ref="0x7f6f2920d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6f2920d880" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6f2920d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6f2920dbd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6f2920dd58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6f2920b020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6f2920b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6f2920f390" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6f2920f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6f2920f700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6f2920f888"/>
        <function-ref name="request" scoped="" ref="0x7f6f2920fa10"/>
        <function-ref name="granted" scoped="" ref="0x7f6f2920fb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6f2920fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6f2920e808" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6f2920e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6f2920eb58"/>
        <function-ref name="userId" scoped="" ref="0x7f6f2920ece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6f2920b470" loc="68:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6f2920b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f2920b7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f2920b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6f29f17910" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29f17910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f6f29f17c60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6f29f17de8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f6f29f1f020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6f29f1f1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6f29f1f330"/>
        <function-ref name="setControlB" scoped="" ref="0x7f6f29f1f4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6f29f1f640"/>
        <function-ref name="getControlB" scoped="" ref="0x7f6f29f1f7c8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f6f29f1f950"/>
        <function-ref name="setControlA" scoped="" ref="0x7f6f29f1fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6f29f1e020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6f29f1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6f29f13270"/>
        <function-ref name="test" scoped="" ref="0x7f6f29f14930"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f1eba0"/>
        <function-ref name="captured" scoped="" ref="0x7f6f29f16560"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29f16a38"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29f14db8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f16088"/>
        <function-ref name="start" scoped="" ref="0x7f6f29f14020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f144a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6f29f13e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6f29f13e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f29f0f798"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29f114f8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f12a18"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29f11980"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29f0fc20"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f11020"/>
        <function-ref name="start" scoped="" ref="0x7f6f29f11e08"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f0f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f29f28d00" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f29f28d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f29f22e20"/>
        <function-ref name="test" scoped="" ref="0x7f6f29f22510"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f258f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f29f21310"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f29f217e8"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29f23738"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29f232b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29f22998"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f25d78"/>
        <function-ref name="start" scoped="" ref="0x7f6f29f23bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f22088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6f29f05160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6f29f05160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f6f29f054b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6f29f05638"/>
        <function-ref name="getControlA" scoped="" ref="0x7f6f29f057c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6f29f05948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6f29f05ad0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f6f29f05c58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6f29f05de0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f6f29f04020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f6f29f041a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f6f29f04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f6f29eff020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f6f29eff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f29efd7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29efe560"/>
        <function-ref name="get" scoped="" ref="0x7f6f29effba0"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29efe9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29efdc30"/>
        <function-ref name="set" scoped="" ref="0x7f6f29efe088"/>
        <function-ref name="start" scoped="" ref="0x7f6f29efee70"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29efd320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6f29f04808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6f29f04808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6f29f01930"/>
        <function-ref name="test" scoped="" ref="0x7f6f29f01020"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f033c8"/>
        <function-ref name="captured" scoped="" ref="0x7f6f29f03d28"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29f02238"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29f014a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f03850"/>
        <function-ref name="start" scoped="" ref="0x7f6f29f026c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f02b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f6f29efb360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f6f29efb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f29ef9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29efa980"/>
        <function-ref name="get" scoped="" ref="0x7f6f29efa020"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29efae08"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29ef80f8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29efa4a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f29ef9310"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29ef9798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f6f29ef8770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f6f29ef8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f29ef4020"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29ef6d08"/>
        <function-ref name="get" scoped="" ref="0x7f6f29ef63a8"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29ef51f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29ef44a8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29ef6830"/>
        <function-ref name="start" scoped="" ref="0x7f6f29ef5680"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29ef5b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6f29f0a180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f29f0a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f29f07270"/>
        <function-ref name="test" scoped="" ref="0x7f6f29f08930"/>
        <function-ref name="get" scoped="" ref="0x7f6f29f0ad00"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f29f076f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f29f07bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29f09b58"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29f096d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29f08db8"/>
        <function-ref name="set" scoped="" ref="0x7f6f29f091f8"/>
        <function-ref name="start" scoped="" ref="0x7f6f29f08020"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29f084a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f29e2f578" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f29e2f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f29e2dc88"/>
        <function-ref name="fired" scoped="" ref="0x7f6f29e2ed08"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f29e2d680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f29e2d1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f29e2b150"/>
        <function-ref name="start" scoped="" ref="0x7f6f29e2e3a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29e2e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6f29e764e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6f29e764e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f6f2b48f7c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f6f2b48f7c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6f29e76838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f29e76c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f29e76c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f29e67db8"/>
        <function-ref name="test" scoped="" ref="0x7f6f29e674a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29e69820"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f29e65270"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f29e65748"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29e68658"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29e681d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29e67930"/>
        <function-ref name="set" scoped="" ref="0x7f6f29e69ca8"/>
        <function-ref name="start" scoped="" ref="0x7f6f29e68ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6f291e35c8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6f291e35c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f6f2b48f460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f6f2b48f460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6f291e1c88"/>
        <function-ref name="fired" scoped="" ref="0x7f6f291e2d08"/>
        <function-ref name="startAt" scoped="" ref="0x7f6f291e1680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6f291e11f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6f291e0150"/>
        <function-ref name="start" scoped="" ref="0x7f6f291e23a8"/>
        <function-ref name="stop" scoped="" ref="0x7f6f291e2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f6f291db650" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f6f291db650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6f291d8e20"/>
        <function-ref name="fired" scoped="" ref="0x7f6f291d9b80"/>
        <function-ref name="get" scoped="" ref="0x7f6f291d9220"/>
        <function-ref name="reset" scoped="" ref="0x7f6f291d8088"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f291d7310"/>
        <function-ref name="set" scoped="" ref="0x7f6f291d96a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f291d8510"/>
        <function-ref name="stop" scoped="" ref="0x7f6f291d8998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f6f291e0670" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f6f291e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f291dc798"/>
        <function-ref name="test" scoped="" ref="0x7f6f291dde20"/>
        <function-ref name="get" scoped="" ref="0x7f6f291de220"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f291dcc20"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f291db130"/>
        <function-ref name="reset" scoped="" ref="0x7f6f291dd088"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f291deb80"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f291dc310"/>
        <function-ref name="set" scoped="" ref="0x7f6f291de6a8"/>
        <function-ref name="start" scoped="" ref="0x7f6f291dd510"/>
        <function-ref name="stop" scoped="" ref="0x7f6f291dd998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6f29e2ae68" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f29e2ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29e27a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6f29e26b18" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f29e26b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29e238f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f29e22230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f29e23d80"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29e226b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6f29e1fb90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f29e1fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TOne" ref="0x7f6f2b3a5698"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29e0d930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f29e0c270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f29e0ddb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29e0c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6f29e0cc58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6f29e0cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6f29e08db8"/>
        <function-ref name="test" scoped="" ref="0x7f6f29e084a8"/>
        <function-ref name="get" scoped="" ref="0x7f6f29e0b820"/>
        <function-ref name="setScale" scoped="" ref="0x7f6f29e07270"/>
        <function-ref name="getScale" scoped="" ref="0x7f6f29e07748"/>
        <function-ref name="reset" scoped="" ref="0x7f6f29e0a658"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29e0a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6f29e08930"/>
        <function-ref name="set" scoped="" ref="0x7f6f29e0bca8"/>
        <function-ref name="start" scoped="" ref="0x7f6f29e0aae0"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29e08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6f29de72b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f6f29de72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29de5088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f29de5998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f29de5510"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29de5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6f29de90e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f29de90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29de9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f29de8798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f29de8310"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29de8c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6f29de3988" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6f29de3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29de2560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6f29de2b88" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6f29de2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6f29de0930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6f29ddf270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6f29de0db8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6f29ddf6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f6f29dd7268" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f6f29dd7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f6f2b3e6078"/>
            <typename><typedef-ref name="TMicro" ref="0x7f6f2b3e63d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f6f29dd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f29cf8390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f29cf8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29cf86e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29cf8868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29cf89f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29cf8b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29cf8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f29cf7020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f29cf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f29cf7370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f29cf74f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29cf7680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29cf7808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29cf7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f29cf7bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f29cf7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f29cf6020"/>
        <function-ref name="source" scoped="" ref="0x7f6f29cf61a8"/>
        <function-ref name="address" scoped="" ref="0x7f6f29cf6330"/>
        <function-ref name="destination" scoped="" ref="0x7f6f29cf64b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f29cf6640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f29cf67c8"/>
        <function-ref name="type" scoped="" ref="0x7f6f29cf6950"/>
        <function-ref name="setType" scoped="" ref="0x7f6f29cf6ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f29cf6c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f29cf6de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f29cf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6f29cf52a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f6f29cf52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f29cf55f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f29cf5780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f29cf5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f291a9100" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f291a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f291a9450"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f291a95d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f291a9760"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f291a98e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f291a9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6f291a9cb8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f291a9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f291a80a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f291a8228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f291a83b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f291a8538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f291a86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6f291a8908" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f291a8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f291a8c58"/>
        <function-ref name="source" scoped="" ref="0x7f6f291a8de0"/>
        <function-ref name="address" scoped="" ref="0x7f6f291a7020"/>
        <function-ref name="destination" scoped="" ref="0x7f6f291a71a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f291a7330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f291a74b8"/>
        <function-ref name="type" scoped="" ref="0x7f6f291a7640"/>
        <function-ref name="setType" scoped="" ref="0x7f6f291a77c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f291a7950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f291a7ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f291a7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f6f291a6020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f6f291a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f6f291a6370"/>
        <function-ref name="noAck" scoped="" ref="0x7f6f291a64f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f6f291a6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6f2919d378" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f2919d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2919d6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2919d850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2919d9d8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2919db60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2919dce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f6f2919c020" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f2919c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f2919c370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f2919c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f2919c680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f2919c808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f2919c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6f2919cbd8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Mts400TesterC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f2919cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f2919b020"/>
        <function-ref name="source" scoped="" ref="0x7f6f2919b1a8"/>
        <function-ref name="address" scoped="" ref="0x7f6f2919b330"/>
        <function-ref name="destination" scoped="" ref="0x7f6f2919b4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f2919b640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f2919b7c8"/>
        <function-ref name="type" scoped="" ref="0x7f6f2919b950"/>
        <function-ref name="setType" scoped="" ref="0x7f6f2919bad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f2919bc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f2919bde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f2919a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f29d53020" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f29d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29d53370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29d534f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29d53680"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29d53808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29d53990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6f29d0b060" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f29d0b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29d0b3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29d0b558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29d0b6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29d0b868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29d0b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6f29d0c2c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6f29d0c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29d0c638"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29d0c7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29d0c948"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29d0cad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29d0cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6f29d09268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f29d09268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f29d095b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f29d09740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29d098c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29d09a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29d09bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f6f29d08020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f6f29d08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29d08370"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f29d084f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f6f29d087c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f6f29d087c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6f29d08b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f6f29d08c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6f29d0bc38" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f29d0bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f29d0a020"/>
        <function-ref name="source" scoped="" ref="0x7f6f29d0a1a8"/>
        <function-ref name="address" scoped="" ref="0x7f6f29d0a330"/>
        <function-ref name="destination" scoped="" ref="0x7f6f29d0a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f29d0a640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f29d0a7c8"/>
        <function-ref name="type" scoped="" ref="0x7f6f29d0a950"/>
        <function-ref name="setType" scoped="" ref="0x7f6f29d0aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f29d0ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f29d0ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f29d09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f6f29cef328" loc="39:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6f29cef328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6f29cef678"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6f29cef800"/>
        <function-ref name="start" scoped="" ref="0x7f6f29cef988"/>
        <function-ref name="stop" scoped="" ref="0x7f6f29cefb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6f29cf1718" loc="37:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f6f29cf1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6f29cf1a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f6f29ce12e8" loc="48:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6f29ce12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6f29ce1638"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6f29ce17c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29ce1948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29ce1ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6f29ce1c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f6f29ce25f8" loc="47:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6f29ce25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6f29ce2948"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6f29ce2ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6f29ce2c58"/>
        <function-ref name="cancel" scoped="" ref="0x7f6f29ce2de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6f29ce1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7f6f29ce7020" loc="44:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f6f29ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29ce7b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29ce6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x7f6f29ced020" loc="40:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x7f6f29ced020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29cedb68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29cec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InfraredLight" ref="0x7f6f29ce4020" loc="46:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7f6f29ce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29ce4b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29ce2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6f29cf1d20" loc="38:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6f29cf1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6f29cf00a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6f29cf0228"/>
        <function-ref name="led1On" scoped="" ref="0x7f6f29cf03b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6f29cf0538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6f29cf06c0"/>
        <function-ref name="get" scoped="" ref="0x7f6f29cf0848"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6f29cf09d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6f29cef020"/>
        <function-ref name="set" scoped="" ref="0x7f6f29cf0b58"/>
        <function-ref name="led0On" scoped="" ref="0x7f6f29cf0ce0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6f29cf0e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VisibleLight" ref="0x7f6f29ce67f8" loc="45:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7f6f29ce67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29ce5370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29ce57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7f6f29cea7c0" loc="43:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f6f29cea7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29ce9370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29ce97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f6f29ce0020" loc="49:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6f29ce0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6f29ce0470"/>
        <function-ref name="source" scoped="" ref="0x7f6f29ce05f8"/>
        <function-ref name="address" scoped="" ref="0x7f6f29ce0780"/>
        <function-ref name="destination" scoped="" ref="0x7f6f29ce0908"/>
        <function-ref name="setSource" scoped="" ref="0x7f6f29ce0a90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f6f29ce0c18"/>
        <function-ref name="type" scoped="" ref="0x7f6f29ce0da0"/>
        <function-ref name="setType" scoped="" ref="0x7f6f29cdf020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6f29cdf1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6f29cdf330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6f29cdf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Axis" ref="0x7f6f29cec7c8" loc="41:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x7f6f29cec7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29ceb370"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29ceb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Intersema" ref="0x7f6f29cebdb8" loc="42:Mts400TesterP.nc">
      <component-ref qname="Mts400TesterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x7f6f29cebdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6f29cea170"/>
        <function-ref name="readDone" scoped="" ref="0x7f6f29cea2f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6f2b35ecc0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f6f2b35f9a8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f6f2b351c38" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f6f2b3519c8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f6f2b3543e0" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f6f2b354dd8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6f2b354b68" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f6f2b3528c8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6f2b352658" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f6f2b351178" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6f2b341ab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f6f2b33f1d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6f2b342d20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6f2b33e020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2b341400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6f2b33f890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2b342020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6f2b342690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6f2be18840" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f6f2b4697c0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f6f2b469020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f6f2b461290" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f6f2b461a80" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f6f2b39eb18" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f6f2b37e1d8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f6f2b410780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f6f2b382d10" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f6f2b195020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f6f2b195758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f6f2b193020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f6f2b193e70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f6f2b191480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2b191c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f6f2b193738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2b190768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f6f2b1904f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f6f2b1967e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f6f2b192608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f6f2b192d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f6f2b15f020" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6f2b15f020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6f2b15f858" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6f2b15e5a0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6f2b15f020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2b15e020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6f2b15e320" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6f2b15f020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6f2b151b90" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f6f2b152c90" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f6f2b1523a0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6f2b151460" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6f2b150848" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f6f2b11a448" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f6f2b11e440" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6f2b11f758" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f6f2b11fab0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f6f2b11fe18" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f6f2b11e1a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2b11dc80" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6f2b11d408" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2b11ee48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f6f2b11d188" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f6f2b0f04e8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2b0f0278" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f6f2b0efa40" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2b0ef7d0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6f2b0f18b0" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2b0f0cd0" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Channel" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <short>&#10; Open or close a channel and retrieve the open status of the channel.</short>
        <long>&#10; Open or close a channel and retrieve the open status of the channel.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <function command="" provided="0" name="open" ref="0x7f6f2b0ed1d8" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Open the channel.</short>
          <long>&#10; Open the channel.&#10; &#10; @return SUCCESS if the openDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOpen" ref="0x7f6f2b0eb070" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Determine if the channel is open.</short>
          <long>&#10; Determine if the channel is open.&#10; &#10; @return TRUE if the channel is open, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="openDone" ref="0x7f6f2b0eb9e0" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been opened.</short>
          <long>&#10; Notify the caller that the channel has been opened.&#10; &#10; @param error SUCCESS if the channel was opened without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2b0eb770" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeDone" ref="0x7f6f2b0ea3b0" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been closed.</short>
          <long>&#10; Notify the caller that the channel has been closed.&#10; &#10; @param error SUCCESS if the channel was closed without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2b0ea140" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7f6f2b0ed900" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Close the channel.</short>
          <long>&#10; Close the channel.&#10; &#10; @return SUCCESS if the closeDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f6f2b0c3c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6f2b0c0580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f6f2b0b68c0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f6f2b0b6110" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f6f2b0bda78" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f6f2b0bca70" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6f2b0bd258" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f6f2b0bc2a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f6f2b0bb360" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f6f2b0b8020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f6f2b0b8810" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f6f2b0ad620" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6f2b0b7818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6f2b0ad3b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6f2b0b7818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f6f2b0b0688" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f6f2b0ae290" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6f2b0b7818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6f2b0ae020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f6f2b0b7818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f6f2b0aeb30" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f6f2b0b7818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f6f2b045710" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6f2b03f1d8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2b03f978" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f6f2afe8208" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f6f2afe8208"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6f2afe7700" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f6f2afe9250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f6f2afe8a88" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f6f2afe9250"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6f2afe8db8" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f6f2afe7108" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6f2afe7460" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f6f2afe1c78" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2afe1020" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6f2afe1350" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f6f2afe1680" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6f2afe19d8" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6f2afe6448" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f6f2afe9250"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f6f2afe57b0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f6f2afe9250"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6f2afe5ae0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f6f2afe5e10" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6f2afe61a8" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6f2afe20d8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2afe3420" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6f2afe3750" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f6f2afe3a80" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6f2afe3dd8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f6f2af5b110" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2af5b8e8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f6f2af41960" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f6f2af00db8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f6f2aeff4c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f6f2aefe4c8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6f2aefe258" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f6f2af006f8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f6f2aefbb68" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f6f2aef6700" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f6f2aefa4d8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f6f2aefa268" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f6f2aef5e18" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f6f2af028f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f6f2af02680" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f6f2aefb4a0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f6f2aefb230" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f6f2aefad10" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f6f2aefeba0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6f2aef9c50" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f6f2aeffba8" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f6f2aef6020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6f2aef7d00" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6f2aef5750" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2aef54e0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f6f2aef94f8" loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f6f2af00020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f6f2aefd4b0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6f2aefd240" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f6f2aef76c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6f2aef7450" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f6f2aef6e28" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f6f2aefdb78" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6f2ae03e70" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6f2ae03720" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f6f2ae03020" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f6f2ae04648" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6f2ade2020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6f2ade1a48" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6f2ade48d0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f6f2ade1290" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f6f2ade1020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f6f2ade41d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6f2ade2760" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6f2add54e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f6f2ad46138" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6f2ad47420" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f6f2ad47778" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f6f2ad47ae0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f6f2ad47e30" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6f2ad45da8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2ad46d00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f6f2ad45060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f6f2ad45398" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f6f2ad45748" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f6f2ad45af8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f6f2ad340d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f6f2ad3c258" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3f5020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f6f2b3f54d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f6f2ad32338" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f6f2ad320c8" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f6f2ad34918" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f6f2ad39d68" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f6f2ad3cc30" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3f5020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f6f2b3f54d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f6f2ad3c9c0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3f5020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f6f2b3f54d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f6f2ad38bc0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f6f2ad33870" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2ad32ad0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f6f2ad38480" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f6f2ad37a80" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f6f2ad37360" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f6f2ad351d8" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f6f2ad330d8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f6f2ad3be30" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3eca18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f6f2b3eb178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f6f2ad3bbc0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3eca18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f6f2b3eb178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f6f2ad35990" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f6f2ad3b440" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f6f2b3eca18"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f6f2b3eb178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6f2ad39608" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6f2ad30640" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2ad303d0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intersema" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6f2ac74de0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6f2ac71a98" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x7f6f2bd88690"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2ac71490" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="mesResult" ref="0x7f6f2ac71818" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x7f6f2bd88690"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Calibration" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
      <function command="" provided="0" name="getData" ref="0x7f6f2ac68650" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6f2ac65348" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2ac68cb0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="calibration" ref="0x7f6f2ac650c8" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2ac2a7e0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2ac2a7e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6f2ac20110" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6f2ac25c88" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f6f2ac23898" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6f2ac23300" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6f2ac23618" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f6f2ac24b78" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f6f2ac1f070" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f6f2ac20830" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6f2ac243e0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f6f2ac26338" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6f2ac260c8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f6f2ac217c8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6f2ac21230" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6f2ac21548" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f6f2ac26d78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6f2ac26b08" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2ac25600" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2ab61340" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2ab61340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6f2ab61bd0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2ab527b0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2ab527b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6f2ab529e0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab529e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f6f2ab4f2a8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab529e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f6f2ab4e328" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f6f2ab4fac0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6f2ab4ea18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2ab5a548" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2ab5a548"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6f2ab5a778" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6f2ab55020" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6f2ab581d8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f6f2ab576a8" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6f2ab57108" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f6f2ab57428" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6f2ab58920" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f6f2ab557a0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6f2ab59290" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6f2ab59020" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab5a778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2ab59a60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f6f2ab22290" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f6f2ab23178" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f6f2ab25020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f6f2ab23ae8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f6f2ab23878" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f6f2ab249d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6f2ab24760" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f6f2ab22c08" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f6f2ab22998" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f6f2ab25750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f6f2ab240a8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6f2ab25e08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f6f2ab117f0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f6f2ab14800" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f6f2ab13020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f6f2ab137f0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f6f2ab10020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f6f2ab11020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f6f2ab15650" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6f2b3cc358"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f6f2b3cc760"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f6f2ab14030" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6f2b3cc358"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f6f2b3cc760"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f6f2ab15d98" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6f2b3cc358"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f6f2b3cc760"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f6f2ab266a0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab266a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f6f2ab1be20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6f2ab1d0d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2ab1e020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab266a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f6f2ab1d7e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f6f2ab1a5c0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2ab1e968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab266a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6f2ab1e6f8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2ab266a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6f2ab1b020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2ab1b708" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f6f2ab35678" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f2ab35678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f6f2ab2ecf0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f6f2ab2fe20" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2ab32020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f2ab35678"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f6f2ab2d690" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f6f2ab2d420" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f6f2ab2de10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f6f2ab317f8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f6f2ab310d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f6f2ab2e5c8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2ab32958" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f2ab35678"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6f2ab326e8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6f2ab35678"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6f2ab2f020" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2ab2f708" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f6f2a9a38b0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f6f2a98dd28" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2a98d788" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6f2a98daa8" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f6f2a98c520" loc="92:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f6f2a98d020" loc="76:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f6f2a990a58" loc="61:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f6f2a98bce8" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f6f2a98ba78" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f6f2a993830" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f6f2a989768" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2a9894f8" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f6f2a98b2e0" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2a98ccf0" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6f2a98b060" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f6f2a990290" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2a990020" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f6f2a98e7e8" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f6f2a98e248" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6f2a98e568" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f6f2a720880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f6f2a7202a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6f2a720600" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6f2a71d838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a71d5c8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f6f2a71c830" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a71c5c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6f2a719948" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a719380" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a719690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f2a718ab8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f6f2a71abd0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a71a640" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a71a950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f6f2a72f398" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6f2a731a50" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6f2a731db0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a72f108" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6f2a72b708" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a72b140" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a72b450" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f2a72a8e0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2a72e670" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a72e400" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f2a72dab0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a72d508" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6f2a72d830" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6f2a725a00" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
              <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a725100" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f6f2a725428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a725738" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f6f2a6fdd88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6fd7a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f6f2a6fdb08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f6f2a6fb020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6fcc48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f6f2a6fd020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f6f2a6fe678" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f6f2a6fe408" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f6f2a703520" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a7032b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f6f2a702630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a7023c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f6f2a701700" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a701490" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f6f2a6f40a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6f5dd0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f6f2a6f8348" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a717ce8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f6f2a6f80c8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f6f2a6f5118" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6f7e78" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f6f2a6f76b0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6f70c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f6f2a6f7430" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f6f2a6f2020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6f4d30" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f6f2a709c60" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a7099f0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f6f2a712d18" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a712aa8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f6f2a714290" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6f2a714ce8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a714a78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6f2a70f5d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a70f020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a70f358" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6f2a7130b8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a711a98" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a711dd0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f6f2a70b8c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a70b658" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f6f2a70ab70" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a70a5f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f6f2a70a8f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f6f2a74d3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6f2a70e788" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a70e518" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f6f2a70c0b8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f6f2a707a80" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6f2a707db0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f6f2a70ce20" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f6f2a6f0a48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6f2a6f0290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6f2a6f0020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6f2a6ef1d8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2a6f9250" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2a6f9250"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6f2a6f9480" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a6f9480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f6f2a6eb290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a6f9480"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6eb020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f6f2a6ea370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6ea100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f6f2a6ec020" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6f9d30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2a6e95e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a6f9480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6e9020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6f2a6e9360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a6f9480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f6f2a6d1180" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f6f2a6d1180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f6f2a6ce108" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6cfe18" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2a6cf690" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f6f2a6d1180"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6cf420" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f6f2a6d1c90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6d1a20" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2a6ceda0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f6f2a6d1180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6ce7d8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6f2a6ceb20" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f6f2a6d1180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f6f2a6c5bd8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6c5968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f6f2a6a15f0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6a1380" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f6f2a6a3290" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6f2a6a3c40" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6a39d0" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6f2a69e020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6a0978" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a6a0ce8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6f2a6a02e0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6a1cb8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a6a0060" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f6f2a69d2d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f6f2a758198"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a69d060" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f6f2a69c020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f6f2a758198"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a69d948" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6f2a69dca8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f6f2a758198"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6f2a69e940" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a69e6d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f6f2a69c728" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f6f2a758198"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6f2a6ab2b0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f6f2a6ae830" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f6f2a6aeb90" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a6ab020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6f2a6a7708" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6a7140" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f2a6a7450" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f2a6a88f0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2a6aa030" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6abd90" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f2a6a8020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6aa960" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6f2a6aac88" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f6f2a665920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f6f2a66a808" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a66a598" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f6f2a65b670" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65b400" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f6f2a65ace0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65aa70" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f6f2a65d020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65ed38" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f6f2a65f910" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65f6a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f6f2a65dcb0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65d6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a65da30" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f6f2a65e618" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65e060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a65e398" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f6f2a65a348" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a65bd40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f6f2a65a0c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f6f2a664328" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f6f2a664b60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f6f2a662bf0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a662980" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f6f2a663630" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6633c0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f6f2a662108" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a663e48" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f6f2a639e60" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f6f2a639020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f6f2a63bd78" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2a639758" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f6f2a63b598" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f6f2a638600" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f6f2a75e170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f6f2a632770" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a632500" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f6f2a636d60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a636af0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f2a633328" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f6f2a635b00" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a635550" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6f2a635880" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f6f2a636290" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a636020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f6f2a633d40" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a633ad0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f2a67ec90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f6f2a67e4e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a67e278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f6f2a67d700" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a67d490" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f6f2a67c020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f6f2a67cb28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a67c8b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f6f2a66c290" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a66c020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f6f2a673788" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f6f2a673020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a6748b8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a674c18" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f6f2a678cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a678a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f6f2a677718" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6774a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f6f2a676600" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a676020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a676380" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f6f2a679468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f6f2a6782a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a679bf8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a678020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f6f2a674118" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a676e80" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f6f2a648a28" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6487b8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f6f2a64a290" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64a020" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f6f2a654020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a655a08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f6f2a655d28" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f6f2a651020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a653ce8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f6f2a643748" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a643198" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a6434c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f6f2a6534e8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a653278" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f6f2a648040" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64aa88" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f6f2a64ad98" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f6f2a650868" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a650288" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a6505e8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f6f2a644a20" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6447b0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f6f2a654a60" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6547f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f6f2a64e290" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64e020" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f6f2a64f6e0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a64f100" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a64f460" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f6f2a640d08" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f6f2a758588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f6f2a642290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a642020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f6f2a640578" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f6f2a758198"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f6f2a644020" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6469d0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f6f2a646d00" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f6f2a651a28" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6517b8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f6f2a64b798" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64b1f8" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f6f2a64b518" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f6f2a647798" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6471f8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f6f2a647518" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f6f2a63f6f0" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a63f480" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f6f2a64c020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64e9f0" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f6f2a64ece8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f6f2a655290" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a655020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f6f2a642cf0" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a642a80" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f6f2a646290" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a646020" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f6f2a64ca48" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a64c7d8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f6f2a66e020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a66f9f8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f6f2a66fd28" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f6f2a66e778" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f6f2a671830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6715c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f6f2a66f290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a66f020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f6f2a668860" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a6685f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f6f2a66ddc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a66db50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f6f2a667070" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f6f2a667ac0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a667850" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f6f2a5c6a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f6f2a5c5328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f6f2a5c5c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f6f2a5c6328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f6f2a5908c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a590658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f2a58c290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a58c020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f2a58d7a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a58d1f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6f2a58d520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f6f2a58ec10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
              <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a58e968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f6f2a5788f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f6f2a5767c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f6f2a5760d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f6f2a578118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f6f2a57bae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6f2a74d760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6f2a57be20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f6f2a383e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
              <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a383bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f6f2a383290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a383020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6f2a371020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a372c40" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f6f2a371790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2a379c70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a379a00" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2a3725a0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a372330" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f6f2a377020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a378d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f6f2a3764a8" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6f2a376238" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f6f2a377ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a377840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f6f2a375020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f6f2a376cb0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f6f2a3785b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6f2a378340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6f2a74db18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f6f2a2e8748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f6f2a2e4790" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6f2a2e3290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6f2a2e3020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f6f2a2e39f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f6f2a2e4020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6f2a2e21d8" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f6f2a2e7df8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a2e7b88" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f6f2a2de1d8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f2a2e09a0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2a2e0730" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f6f2a26fd18" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f6f2a26f580" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f6f2bd876a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f6f2a244508" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6f2a244508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f6f2a241020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6f2a244508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f6f2a244d40" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f6f2a244508"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f6f2a21bd70" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a21bb00" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2a21fdc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a21fb50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f6f2a21ca90" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a21c500" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f6f2a21c810" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2a21b408" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f2a21b198" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f6f2a1ea5b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6f2a1ea348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f6f2a1edb70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6f2a0f78c8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6f2a0f78c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6f2a0f7af8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a0f7af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f6f2a0f25c8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a0f7af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f6f2a0f2358" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a0f7af8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f6f2a0f5178" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6f2a0f4258" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6f2a0f5aa0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6f2a0f5830" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f6f2a0f8968" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f6f2a0fc020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a0ffce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f6f2a0fb290" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a0fb020" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f6f2a0fc820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6f2a0fbc30" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f2a0fb9c0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f6f2a00d4d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f6f2a004020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f6f2a006c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f6f2a007e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6f2a00dd88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6f2a008108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6f2a00ae28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f6f2a008848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f6f2a0065c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6f2a00a6f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6f2a00a480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6f2a00d4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6f2a007020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6f2a007708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6f29fecb88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6f29fec278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6f29fec5d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f29fec8f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f29fe8020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6f29feb2b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6f29feb610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f29feb930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f6f2bd88bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6f29febc78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f6f29fef020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f6f29ff2c18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f6f29fd6d30" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f6f29fcc5c0" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f6f29fd0258" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f6f29fca020" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f6f29fcccf8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f6f29fd65f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f6f29fcec78" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f6f29fcea08" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f6f29fd2a38" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f6f29fd27c8" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f6f29fd5bf0" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f6f29fc6960" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6f29fc66f0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f6f29fd11d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f6f29fc90a8" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f6f29fcadd8" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6f29fc8020" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f6f29fcde48" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f6f29fcdbd8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f6f29fc6020" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f6f29fd0ba8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f6f29fd0938" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6f29fd3578" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f29fd3308" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f6f29fd1ae8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f6f29fd1878" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f6f29fcd4a8" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f6f29fca728" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f6f29fc9798" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f6f29fc8768" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f6f29fce328" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f6f2b491cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f6f29fd5488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6f29fd2020" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6f29fd3c90" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f6f29f1c728" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f6f29f1aa98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f6f29f1d7d0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f6f29f18c08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f6f29f184a8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f6f29f18238" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f6f29f1b9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6f29f1b760" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f6f29f175b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f6f29f17348" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f6f29f1c020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f6f29f1a338" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6f29f1a0c8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f6f29f1b0a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6f29f1cde0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6f29d6e2a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f29d71c30" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f29d6e020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f6f29d6a5e8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f29d6a020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6f29d6a330" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6f29d69740" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f6f2bd88160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6f29d6d4e8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f29d6d278" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6f29d6b8f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6f29d6b348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f6f2a733d10"/>
                <typename><typedef-ref name="message_t" ref="0x7f6f2a7312e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6f29d6b670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f6f2b465e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
